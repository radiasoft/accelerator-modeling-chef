!--------------------------------
TITLE, aaa
!  tev_93  tev_e0   06/15/93  09:47

! 9/7/97  ppb
! Adjusted the straights around the zero locations so that the zero markers
!     are multiples of 1/6 of the ring from MB0 and MD0. 
! Made a bunch of changes related to run II. 
!  New versions have an R2 suffix. I made changes to D,E, and F sectors.
!  In D sector, changed Dten, Dforty, and E0up.
!  In E sector, changed E0down, Eforty, and F0up.
!  In F sector, changed F0down and Ften. 
!    For E0up and E0down, replaced injection lamb. with collimation insert 
!          for proton removal. This includes 4 b2 magnets used as doglegs.
!          ME0 is inside a b2 magnet, so I split the b2 magnet into 2 pieces. 
!          In this file the b2's are turned OFF. 
!    For F0up and F0down, put in RF cavities and the injection lamb.
!          several of the positions are approximate. They were measured off
!          of drawings with a ruler. 
!    For Dten, at D17, put in a new version of the scraping/collimation insert.
!    For Dforty, at D48, put in a horz separator. 
!    For Eforty, at E48, put in pbar injection kickers. 
!    For Ften, at F17, removed the F17 horz separator and filled the F17 
!              straight with proton injection kickers and a scraping insert.


! 1/7/97  ppb
! Moved the A17 vertical separator from the upstream to the downstream
! end of the A17 warm straight section.

! Heavily modified 7/29 - 8/6/96  ppb
!   Most or all of these changes are just translations for MAD of what
!   Mike Martens and Andrew Braun had done. 

! At C19, switched one of the two TO39S to a TQ39S. 
! At C24, switched TO39C to a TQ39C.

! There are 42 elements of TSQ. 
! They are at the 13, 17, 22, 26, 32, 36, 42 and 46 locations. 
! except for A46, B13, B17, C46, D13, and D17.
!  Made all the skew quad circuits into multipoles rather than quads so 
!    they can have zero length but non-zero strengths. 


! At F39, removed TOZF.
! At D36, added   TOZF.
! There are now 12 elements of TOZF. 
! They are at all the 36 and 42 locations.

! There are 24 elements of TOZD. 
! They are at all the 23, 27, 33, and 37 locations. 

! Broke up TQ39S into two different elements, 
!  TQF39S (no tilt) and TQD39S (tilted pi/2 to give the opposite polarity).
!  Also made these multipoles rather than quads so they can have zero length
!    but non-zero strengths. 
!  TQF39S is at B19 and C28,  TQD39S is at B28 and C19.

! Broke up TQ39C into two different elements, 
!  TQF39C (no tilt) and TQD39C (tilted pi/2 to give the opposite polarity).
!  Also made these multipoles rather than quads so they can have zero length
!    but non-zero strengths. 
!  TQF39C is at B24 and C34,  TQD39C is at B34 and C24.

! At F17, added TO39S. 
! At B19, added TO39S.
! There are now 15 elements of TO39S, 
!  at the 17, 19, 26, and 28 locations of E, F, B, and C sectors. 
!  However the B17 element was removed for the low beta insert. 
! Broke up TO39S into two different elements,
!   TOF39S (no tilt) and TOD39S (pi/4 tilt to give opposite polarity).
!  TOF39S is at E19, E26, F17, F28,      B28, C19, C26.
!  TOD39S is at E17, E28, F19, F26, B19, B26, C17, C28.

! Put in 16 elements of TO39C. 
!   These are at the 22, 24, 32, and 34 locations in E, F, B, and C sectors.
! Used two families, 
!   TOF39C (no tilt) and TOD39C (pi/4 tilt to give opposite polarity).
!  TOF39C is at E24, E32, F22, F34, B22, B34, C24, C32.
!  TOD39C is at E22, E34, F24, F32, B24, B32, C22, C34.


! Added TSD to spool at B43
! Added VDE11 to spool at E11.
! Added HDE49 to spool at E49.
! Added VDF11 to spool at F11.
! Added HDF49 to spool at F49.
! Added VDC11 to spool at C11.
! Added HDB49 to spool at B49.
! Added HDD49 to spool at D49.
! Removed CS1C2A from spool at C29.
! Removed unused multipole circuit TH3 because I realized this was 
!    there was only one element and it was a typo. 
!    It was at F34 and should have been a TH2.
! Removed unused multipole circuit TH2 because I realized this was 
!    another name for TO39C. 
! Corrected the name for the feed down sextupole in A24, 
!    changed it from CS2A3A to CS3A2A. 

! Put in LAMB and CMAG's at C0 for the C0 Abort. 
! Put in the proton and pbar sync light source points in C11.
! Put TSQE0 into PACKE11 and PACKD49.

! Removed repeated HDA48 and VDA48 from PACKA48C
! Changed name of horz dipole in PACKA48A from HDA48 to HDA48C
!  The steerings in the PACKA48A are C:HA48 and C:VA48.
!  The steering  in the PACKA48B is  T:HA48.
! Changed name of horz dipole in PACKC48A from HDC48 to HDC48C
!  The steerings in the PACKA48A are C:HA48 and C:VA48.
!  The steering  in the PACKA48B is  T:HA48.

! HA48 and HC48 are the only steerings where there are BOTH a C: and
!  a T: device. 
! The other C: devices are HB12, HD12, VA48, and VC48.


! 
! constants
! 
MOMENTUM := 1
BRHO := 3335.6400869 * MOMENTUM

PI := 3.1415926535898
TWOPI := 2 * PI

NBENDS := 774
BANGLE := TWOPI / NBENDS
HANGLE =     3.87625450E-03     ! From N. Gelfand file
LAMBBANGLE = 1.83577060E-03     ! From N. Gelfand file
CMAGBANGLE = 1.48790000E-03     ! Changed slightly to make 
! 2*HANGLE + 3*LAMBANGLE + 2*CMAGANGLE = 2*BANGLE = 0.016235621
DOGANGLE = 3.272764E-3

LBFIELD := 6.1214
LHBFIELD = 2.921        ! half dipole length according to Norm G.
LLAMB = 5.521706        ! C0 abort lambertson
LCMAG = 3.73888         ! C0 C-magnet
LDOGBEND = 6.0706       ! 239 inches
LSEPTA = 3.79095

KBENDQ := 2.259873E-05

BEND:      SBEND, L = LBFIELD,  ANGLE = BANGLE
BENDQ:     MULTIPOLE, K1L = KBENDQ
HBEND:     SBEND, L = LHBFIELD, ANGLE = HANGLE
LAMBBEND:  SBEND, L = LLAMB,    ANGLE = LAMBBANGLE
CMAGBEND:  SBEND, L = LCMAG,    ANGLE = CMAGBANGLE

! Next bends are added for fixed target
DOGPBEND:  SBEND, L = LDOGBEND, ANGLE =  DOGANGLE
DOGMBEND:  SBEND, L = LDOGBEND, ANGLE = -DOGANGLE

! E0DOGP and E0DOGM are for the proton removal insert in E0. 
!  Most of the time these will be off. When they are turned on, they 
!   will bend the beams by DOGANGLE (see above)
! E0DOGBEND :=  3.272764E-3  
!  Notice that E0DOGP has a kick of -E0DOGBEND.
!    A positive kick is the same sign as the main bends. 
!    The E0 dogleg should displace the beam to the radial OUTSIDE.
!  I've chosen to put them in as closed orbit correctors to make it
!   easy to see how much they move the beam. (If I put them in as regular
!   bends, I would have to do a survey and figure out how much it moves.)
!     ppb   9/12/97
E0DOGBEND := 0.
E0DOGP:    HKICKER, L=LDOGBEND, KICK = -E0DOGBEND
E0DOGM:    HKICKER, L=LDOGBEND, KICK =  E0DOGBEND

! Next two are just E0DOGM split into two pieces. ME0 is in between them. 
LME0 := 0.482262
E0DOGMP1:  HKICKER, L=LME0, KICK =  E0DOGBEND*(LME0/LDOGBEND)
E0DOGMP2:  HKICKER, L=LDOGBEND - LME0, &
                    KICK =  E0DOGBEND*(1.- (LME0/LDOGBEND) )


! 
! quad lengths
! 
LQUAD := 1.67894
LQUAD1 := 2.5248
LQUAD2 := 2.101088
LQUAD3 := 0.814578
LQUAD4 := 2.2908
LQUAD5 := 0.6477
LQUADC := 0.762
LQUADINNER := 5.8928
LQUADLB4 := 1.401826
LQUADLB5 := LQUADLB4
LQUADOUTER := 3.3528
LTRIM := 0.635
LTRIM6 := 0.606425

MAINBUSF := 0.0227724747
MAINBUSD := -MAINBUSF

KTRIMB8D := 0
KTRIMD8F := 0

HQUADF:    QUADRUPOLE, L = LQUAD, K1 = MAINBUSF
HQUADD:    QUADRUPOLE, L = LQUAD, K1 = MAINBUSD
HQUAD1F:   QUADRUPOLE, L = LQUAD1, K1 = MAINBUSF
HQUAD1D:   QUADRUPOLE, L = LQUAD1, K1 = MAINBUSD
HQUAD2F:   QUADRUPOLE, L = LQUAD2, K1 = MAINBUSF
HQUAD2D:   QUADRUPOLE, L = LQUAD2, K1 = MAINBUSD
HQUAD3F:   QUADRUPOLE, L = LQUAD3, K1 = MAINBUSF
HQUAD3D:   QUADRUPOLE, L = LQUAD3, K1 = MAINBUSD
HQUAD4F:   QUADRUPOLE, L = LQUAD4, K1 = MAINBUSF
HQUAD4D:   QUADRUPOLE, L = LQUAD4, K1 = MAINBUSD
HQUAD5F:   QUADRUPOLE, L = LQUAD5, K1 = MAINBUSF
HQUAD5D:   QUADRUPOLE, L = LQUAD5, K1 = MAINBUSD
HQUADB6F:  QUADRUPOLE, L = LQUAD, K1 = MAINBUSF
HQUADB6D:  QUADRUPOLE, L = LQUAD, K1 = MAINBUSD
HQUADD6F:  QUADRUPOLE, L = LQUAD, K1 = MAINBUSF
HQUADD6D:  QUADRUPOLE, L = LQUAD, K1 = MAINBUSD

TQF33:    QUADRUPOLE, L = 0, K1 = 0
TQF34:    QUADRUPOLE, L = 0, K1 = 0
TQA45:    QUADRUPOLE, L = LQUADC, K1 = KTRIMB8D
TQB15:    QUADRUPOLE, L = LQUADC, K1 = KTRIMD8F
TQC45:    QUADRUPOLE, L = LQUADC, K1 = KTRIMB8D
TQD15:    QUADRUPOLE, L = LQUADC, K1 = KTRIMD8F

A0QXR:     QUADRUPOLE, L =  1.016, K1 = 0.
D0QXR:     QUADRUPOLE, L =  1.016, K1 = 0.
A0BUK:     QUADRUPOLE, L =  1.016, K1 = 0.
D0BUK:     QUADRUPOLE, L =  1.016, K1 = 0.

KQFT := -2.298235 / BRHO
KQDT := 0.488651685 / BRHO
SCHROMF := 0
SCHROMD := 0

! Next settings are for 2f08i2

KQFT    := -0.953300E-3
KQFET   := -0.003644E-3
KQFFT   := -1.658101E-3

KQFE19T := -1.155578E-3
KQFE26T := -1.366206E-3
KQFE28T := -1.567001E-3
KQFF28T := -1.653973E-3
KQFF32T := -0.091360E-3

KQDT    :=  0.892531E-3
KQDET   := -0.088330E-3
KQDFT   :=  2.050908E-3
KQDE47T :=  0.959393E-3
KQDF33T := -0.057842E-3

TQF:      QUADRUPOLE, L = LQUADC, K1 = KQFT
TQD:      QUADRUPOLE, L = LQUADC, K1 = KQDT
TQFE:     QUADRUPOLE, L = LQUADC, K1 = KQFET
TQDE:     QUADRUPOLE, L = LQUADC, K1 = KQDET
TQFF:     QUADRUPOLE, L = LQUADC, K1 = KQFFT
TQDF:     QUADRUPOLE, L = LQUADC, K1 = KQDFT
TSF:      MULTIPOLE, K2L = SCHROMF / BRHO
TSD:      MULTIPOLE, K2L = SCHROMD / BRHO

TSQ:      MULTIPOLE, K1L = 0, T1 = PI / 4
TSQA0:    MULTIPOLE, K1L = 0, T1 = PI / 4
TSQA4:    MULTIPOLE, K1L = 0, T1 = PI / 4
TSQB1:    MULTIPOLE, K1L = 0, T1 = PI / 4
TSQD0:    MULTIPOLE, K1L = 0, T1 = PI / 4
TSQE0:    MULTIPOLE, K1L = 0, T1 = PI / 4

TQF39S:   MULTIPOLE, K1L = 0
TQD39S:   MULTIPOLE, K1L = 0, T1 = PI/2

TQF39C:   MULTIPOLE, K1L = 0
TQD39C:   MULTIPOLE, K1L = 0, T1 = PI/2

TOZF:     MULTIPOLE, K3L = 0
TOZD:     MULTIPOLE, K3L = 0
TOF39S:   MULTIPOLE, K3L = 0
TOD39S:   MULTIPOLE, K3L = 0, T3 = pi/4.  ! tilt changes the sign of oct.
TOF39C:   MULTIPOLE, K3L = 0
TOD39C:   MULTIPOLE, K3L = 0, T3 = pi/4.  ! tilt changes the sign of oct.

! 
! drifts
! 
DQUAD1END: DRIFT, L = 0.184963
DBPMIN:    DRIFT, L = 0.260655
DBPMIN1:   DRIFT, L = 0.182677
DBPMOUT:   DRIFT, L = 0.200025
DBPMOUT1:  DRIFT, L = 0.159004
DHQUADC:   DRIFT, L = 0.5 * LQUADC
DBENDEND:  DRIFT, L = 0.1397
DQOUT:     DRIFT, L = 0.17178
DQOUT1:    DRIFT, L = 0.227381
DPACKIN:   DRIFT, L = 0.142875
DPACKIN2:  DRIFT, L = 0.170231
DPACKIN3:  DRIFT, L = 0.184519
DPIN5LOC:  DRIFT, L = 0.168275
DPACKU2D:  DRIFT, L = 0.4064
DPACKU2D2: DRIFT, L = 0.502818
DPACKU2D3: DRIFT, L = 0.136106
DPACKOUT:  DRIFT, L = 0.517525
DPACKOUT1: DRIFT, L = 0.164033
DPACKOUT2: DRIFT, L = 0.520751
DPACKOUT3: DRIFT, L = 0.139751
DPOUT5LOC: DRIFT, L = 0.161925
DFCANIN:   DRIFT, L = 0.20955
FCAN:      DRIFT, L = 0.4445
DFCANOUT:  DRIFT, L = 0.08255
DCOLD1:    DRIFT, L = 0.301625
DCOLD2:    DRIFT, L = 0.428625
DE11END:   DRIFT, L = 1.113676
DE11MID:   DRIFT, L = 0.2159
DE17A:     DRIFT, L = 4.18465
DE17B:     DRIFT, L = 3.254375
DE17C:     DRIFT, L = 1.84785
DE17D:     DRIFT, L = 2.365375
MEDSTR:    DRIFT, L = 0.4191
! Changes to DLONG1, DLONG4, and DLONG5 will make the 0 markers
!   exactly 1/6 of the ring from each other.     ppb  9/4/97
DLONG1:    DRIFT, L = 26.259612 + 0.151
DLONG2:    DRIFT, L = 7.362825
!  DLONG3:    DRIFT, L = 22.218548 This is old value for no C0 abort lamb.
DLONG3:  DRIFT, L = 4.809325 
DLONG4:    DRIFT, L = 26.564412 - 0.151
DLONG5:    DRIFT, L = 14.320012 - 0.151
DSEPEND:   DRIFT, L = 0.320777
DSEPEND1:  DRIFT, L = 0.401638
DSEPB:     DRIFT, L = 0.187325

DSTRAIGHT0: DRIFT, L = 2.477977
DSTRAIGHT1: DRIFT, L = 2.443251
DSTRAIGHT2: DRIFT, L = 2.227453
DSTRAIGHT3: DRIFT, L = 5.839714
DSTRAIGHT4: DRIFT, L = 2.805074
DSTRAIGHT5: DRIFT, L = 1.408836
DSTRAIGHT6: DRIFT, L = 5.895162

DLB1:      DRIFT, L = 0.155575
DLB2:      DRIFT, L = 0.2286
DLB3:      DRIFT, L = 0.535711
DLB4:      DRIFT, L = 0.506298
DLB5:      DRIFT, L = 0.280518
DLB6:      DRIFT, L = 0.167462
DLB7:      DRIFT, L = 1.034517

DTRIPOUT:  DRIFT, L = 0.054127
DTRIPB:    DRIFT, L = 0.8763
DTRIPIN:   DRIFT, L = 0.1397
DV2H:      DRIFT, L = 0.12065

DCOLLIM:   DRIFT, L = 3.048
DCOLLOUT:  DRIFT, L = 0.993064
D17EXTIN:  DRIFT, L = 1.1950575
D17SCRAPER: DRIFT, L = 1.778
D17EXTOUT: DRIFT, L = 9.4094425
LAMB1UP:   DRIFT, L = 2.2344
LAMB1DN:   DRIFT, L = 4.8
LAMB2UP:   DRIFT, L = 0.41
LAMB2DN:   DRIFT, L = 4.8

! Some new drifts for Run II collimators and F0 injection 
!  Added 9/4/97 ppb
DCTABV :   DRIFT, L =  0.60     ! space for cryo turn around and beam valve
DE0COLSP:  DRIFT, L =  0.3556
DR2COLL:   DRIFT, L =  1.8288   ! 1.5 m for collimator + 12" for bellows
DE0SP1:    DRIFT, L =  1.016    !  40"
DE0SP2:    DRIFT, L =  2.54     ! 100" 
DE0SP3:    DRIFT, L =  0.508    !  20" 
DE0SP4:    DRIFT, L = 11.009424 ! Length to make total come out right 
DPHDAMP:   DRIFT, L =  1.22555  ! Proton horz damper kicker
DPVDAMP:   DRIFT, L =  1.22555  ! Proton vert damper kicker
DPBHDAMP:  DRIFT, L =  1.22555  ! Pbar   horz damper kicker
DPBVDAMP:  DRIFT, L =  1.22555  ! Pbar   vert damper kicker

! Next section is for D17 and F17 collimators
DR2TTARG:  DRIFT, L = 0.3048   ! 5 mm tungsten target and bellows
DCOL17SP1: DRIFT, L = 0.111125
DD17SP2:   DRIFT, L = 7.4676   ! 294"
DF17SP2:   DRIFT, L = 1.066801 ! 42"
DPINJK:    DRIFT, L = 0.8890   ! 35", proton injection kicker module
DPINJKB:   DRIFT, L = 0.3302   ! 13", end effects from prot. inj. kickers.
DIONP:     DRIFT, L = 0.3048   ! Space for an ion pump

! Next section is for pbar injection kickers in E48 straight
DE48SP1:   DRIFT, L = 0.250825 ! 9.875"
DE48SP2:   DRIFT, L = 0.303987 ! Length to make total come out right
DPBINJK:   DRIFT, L = 2.305050 ! 90.75", pbar injection kicker module 396 nsec


! Next section is for new F0 straight
DRFUP:     DRIFT, L = 0.98     ! Approx. from drawings
DRFCAVITY: DRIFT, L = 2.749550 ! 108.25"
DRFSP1:    DRIFT, L = 0.073085 ! This gives center to center cavity spacing
                               !    of half a wavelength = 2.822635 m
DRFSP2:    DRIFT, L = 1.484402 ! This gives center to center cavity spacing
                               !    of 3/4 of a wavelength for between groups
!  DRFDOWN =   (DLONG4)  - 8*(DRFCAVITY) - 6*(DRFSP1) -  (DRFSP2) - (DRFUP)
!  DRFDOWN = (26.413412) - 8*(2.749550) - 6*(.073085) - (1.484402) - (0.98)
DRFDOWN:   DRIFT, L = 1.514100

!  DF0SP1 =   (DLONG1)   - (DF0SP2) - (lamb1dn) - (lamb2up) - (lamb2dn)
!  DF0SP1 = (26.410612m) - (8.00 m) -  (4.8 m)  -  (0.41 m) -  (4.8 m)
DF0SP1:     DRIFT, L = 8.400612 
DF0SP2:     DRIFT, L = 8.00     !  Approx. from drawings

! Moved horiz. separator from F17 to D48. 
! STRD48R2 used to be STRAIGHTD48
!STRD48R2:  DRIFT, L = 5.895162 - .301625 - 2.57175 - 2*.320777 -.428625
STRD48R2:  DRIFT, L = 1.951608


! More drifts for fixed target

DHALFLAMB: DRIFT, L = 5.08/2.0
DLAMBSEP:  DRIFT, L = 0.0889
DLAMB1:    DRIFT, L = 0.480812
DLAMB3:    DRIFT, L = 0.3302
DLAMBEND:  DRIFT, L = 0.191808
DEXTLAMBEND: DRIFT, L = 0.32385
D0COLLEND: DRIFT, L = 0.8763
DBARRIER:  DRIFT, L = 1.26771378
DDOGEND:   DRIFT, L = 0.14605
DSEPTASEP: DRIFT, L = 0.59055
DHALFSEPTA: DRIFT, L = LSEPTA/2.0
D0BUMPEND: DRIFT, L = 0.66675
DCMAGEND:  DRIFT, L = 0.26416

DLONG1F0:  DRIFT, L = 3.875782
DLONG1E0:  DRIFT, L = 26.409612
DLONG1A0:  DRIFT, L = 26.409612 - 3.3018
DLONG4F0:  DRIFT, L = 18.767232
DLONG5FT:  DRIFT, L = 14.170012       ! this is different from col value
DTQIN:     DRIFT, L = 0.121818   ! DPACKU2D2 - 0.5*LQUADC 
DTQOUT:    DRIFT, L = 0.139751  ! DPACKOUT2 - 0.5*LQUADC
DTQJUMP:   DRIFT, L = LQUADC
DSTRAIGHT7: DRIFT, L = 5.895162 + 3.2004
DSYNCLIGHT:  DRIFT, L = 3.2004
DC0U1:     DRIFT, L = 3.973029
DC0U2:     DRIFT, L = 4.875417 - 0.152
DC0D1:     DRIFT, L = 8.874823 + 0.152
DBYPC49:   DRIFT, L =  1.980572
DSPC1:     DRIFT, L = 0.667187
DSPC2:     DRIFT, L = 1.323975
DSPC3:     DRIFT, L = 0.942975
DSPC4:     DRIFT, L = 0.1905 
DSPC5:     DRIFT, L = 1.04775
DSPC6:     DRIFT, L = 0.78105
DSPC7:     DRIFT, L = 8.13435
DSPC8:     DRIFT, L = 0.59055
DSPC9:     DRIFT, L = 0.3810
DSPC10:    DRIFT, L = 0.704537
DSPC11:    DRIFT, L = 2.2066562
DFUDGE1:   DRIFT, L = 0.008228
DFUDGE2:   DRIFT, L = 0.007227
DQXRFILL:  DRIFT, L = 0.582574
DBUK1:     DRIFT, L = 7.1215
DQXR1:     DRIFT, L = 0.1905
DQXR2:     DRIFT, L = 0.390714
DQXR3:     DRIFT, L = 0.409
DQXR4:     DRIFT, L = 0.419
DQXR5:     DRIFT, L = 1.573


! 
! low beta quad strengths
! 
B0Q2UP := 139.73471387
B0Q3UP := -138.1004965
B0Q4 := 140.12999301
B0Q3DOWN := 137.76187488
B0Q2DOWN := -139.9076515

B0Q5 := -29.391
B0Q1 := -4.164
B0Q6UP := -94.0149983
B0QT6UP := 0.
B0Q6DOWN := 88.849999
B0QT6DOWN := 0.

AQ0 := 2.07599997
AQ9 := -37.2959988
AQ7 := 41.928

BQ7 := -42.107998
BQ9 := 41.951999
BQ0 := -0.71999998

KB0Q2F := B0Q2UP / BRHO
KB0Q3D := B0Q3UP / BRHO
KB0Q4F := B0Q4 / BRHO
KB0Q4D := -KB0Q4F
KB0Q3F := B0Q3DOWN / BRHO
KB0Q2D := B0Q2DOWN / BRHO

KB0Q5D := B0Q5 / BRHO
KB0Q1D := B0Q1 / BRHO
KB0Q1F := -KB0Q1D
KB0Q5F := -KB0Q5D

KTRIMB6F := B0Q6DOWN / BRHO
KTRIMBT6F := B0QT6DOWN / BRHO
KTRIMB6D := B0Q6UP / BRHO
KTRIMBT6D := B0QT6UP / BRHO
KTRIMB7D := BQ7 / BRHO
KTRIMB9F := BQ9 / BRHO
KTRIMBAD := BQ0 / BRHO
KTRIMBAF := AQ0 / BRHO
KTRIMB9D := AQ9 / BRHO
KTRIMB7F := AQ7 / BRHO

D0Q2UP := 139.795903
D0Q3UP := -137.8053828
D0Q4 := 140.129993
D0Q3DOWN := 137.8413468
D0Q2DOWN := -139.7459223

D0Q5 := -29.391
D0Q1 := -4.164
D0Q6UP := -94.0149983
D0QT6UP := 0.
D0Q6DOWN := 88.849999
D0QT6DOWN := 0.

CQ0 := 2.07599997
CQ9 := -37.2959988
CQ7 := 41.928

DQ7 := -42.107998
DQ9 := 41.951999
DQ0 := -0.71999998

KD0Q2F := D0Q2UP / BRHO
KD0Q3D := D0Q3UP / BRHO
KD0Q4F := D0Q4 / BRHO
KD0Q4D := -KD0Q4F
KD0Q3F := D0Q3DOWN / BRHO
KD0Q2D := D0Q2DOWN / BRHO

KD0Q5D := D0Q5 / BRHO
KD0Q1D := D0Q1 / BRHO
KD0Q1F := -KD0Q1D
KD0Q5F := -KD0Q5D

KTRIMD6F := D0Q6DOWN / BRHO
KTRIMDT6F := D0QT6DOWN / BRHO
KTRIMD6D := D0Q6UP / BRHO
KTRIMDT6D := D0QT6UP / BRHO

KTRIMDAF := CQ0 / BRHO
KTRIMD9D := CQ9 / BRHO
KTRIMD7F := CQ7 / BRHO
KTRIMD7D := DQ7 / BRHO
KTRIMD9F := DQ9 / BRHO
KTRIMDAD := DQ0 / BRHO

CAQ0:     QUADRUPOLE, L = LTRIM, K1 = KTRIMBAF
CAQ9:     QUADRUPOLE, L = LTRIM, K1 = KTRIMB9D
CAQ7:     QUADRUPOLE, L = LTRIM, K1 = KTRIMB7F
CB0Q6D:   QUADRUPOLE, L = LTRIM6, K1 = KTRIMB6D
CB0QT6D:  QUADRUPOLE, L = 0.5*LQUADC, K1 = KTRIMBT6D
CB0Q5D:   QUADRUPOLE, L = LQUADLB5, K1 = KB0Q5D
CB0Q1D:   QUADRUPOLE, L = LQUADLB4, K1 = KB0Q1D

CB0Q2F:   QUADRUPOLE, L = LQUADOUTER, K1 = KB0Q2F
CB0Q3D:   QUADRUPOLE, L = LQUADINNER, K1 = KB0Q3D
CB0Q4F:   QUADRUPOLE, L = LQUADOUTER, K1 = KB0Q4F
CB0Q4D:   QUADRUPOLE, L = LQUADOUTER, K1 = KB0Q4D
CB0Q3F:   QUADRUPOLE, L = LQUADINNER, K1 = KB0Q3F
CB0Q2D:   QUADRUPOLE, L = LQUADOUTER, K1 = KB0Q2D

CB0Q1F:   QUADRUPOLE, L = LQUADLB4, K1 = KB0Q1F
CB0Q5F:   QUADRUPOLE, L = LQUADLB5, K1 = KB0Q5F
CB0Q6F:   QUADRUPOLE, L = LTRIM6, K1 = KTRIMB6F
CB0QT6F:  QUADRUPOLE, L = 0.5*LQUADC, K1 = KTRIMBT6F
CBQ7:     QUADRUPOLE, L = LTRIM, K1 = KTRIMB7D
CBQ9:     QUADRUPOLE, L = LTRIM, K1 = KTRIMB9F
CBQ0:     QUADRUPOLE, L = LTRIM, K1 = KTRIMBAD

CCQ0:     QUADRUPOLE, L = LTRIM, K1 = KTRIMDAF
CCQ9:     QUADRUPOLE, L = LTRIM, K1 = KTRIMD9D
CCQ7:     QUADRUPOLE, L = LTRIM, K1 = KTRIMD7F
CD0Q6D:   QUADRUPOLE, L = LTRIM6, K1 = KTRIMD6D
CD0QT6D:  QUADRUPOLE, L = 0.5*LQUADC, K1 = KTRIMDT6D
CD0Q5D:   QUADRUPOLE, L = LQUADLB5, K1 = KD0Q5D
CD0Q1D:   QUADRUPOLE, L = LQUADLB4, K1 = KD0Q1D

CD0Q2F:   QUADRUPOLE, L = LQUADOUTER, K1 = KD0Q2F
CD0Q3D:   QUADRUPOLE, L = LQUADINNER, K1 = KD0Q3D
CD0Q4F:   QUADRUPOLE, L = LQUADOUTER, K1 = KD0Q4F
CD0Q4D:   QUADRUPOLE, L = LQUADOUTER, K1 = KD0Q4D
CD0Q3F:   QUADRUPOLE, L = LQUADINNER, K1 = KD0Q3F
CD0Q2D:   QUADRUPOLE, L = LQUADOUTER, K1 = KD0Q2D

CD0Q1F:   QUADRUPOLE, L = LQUADLB4, K1 = KD0Q1F
CD0Q5F:   QUADRUPOLE, L = LQUADLB5, K1 = KD0Q5F
CD0Q6F:   QUADRUPOLE, L = LTRIM6, K1 = KTRIMD6F
CD0QT6F:  QUADRUPOLE, L = 0.5*LQUADC, K1 = KTRIMDT6F
CDQ7:     QUADRUPOLE, L = LTRIM, K1 = KTRIMD7D
CDQ9:     QUADRUPOLE, L = LTRIM, K1 = KTRIMD9F
CDQ0:     QUADRUPOLE, L = LTRIM, K1 = KTRIMDAD

! 
! Feed down sextupoles 
! 
CS1E2A:   MULTIPOLE, type= fdsext, K2L = 0
CS1F2A:   MULTIPOLE, type= fdsext, K2L = 0
CS1F3A:   MULTIPOLE, type= fdsext, K2L = 0
CS1B1A:   MULTIPOLE, type= fdsext, K2L = 0
CS1B3A:   MULTIPOLE, type= fdsext, K2L = 0
CS1C2A:   MULTIPOLE, type= fdsext, K2L = 0

CS2F1A:   MULTIPOLE, type= fdsext, K2L = 0
CS2F2A:   MULTIPOLE, type= fdsext, K2L = 0
CS2F4A:   MULTIPOLE, type= fdsext, K2L = 0
CS2A1A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12
CS2A3A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12
CS2B4A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12
CS2C3A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12
CS2D2A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12

CS3E1A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12
CS3E3A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12
CS3A2A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12
CS3A3A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12   ! not used 
CS3D2A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12
CS3D4A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12

CS4F2A:   MULTIPOLE, type= fdsext, K2L = 0
CS4C2A:   MULTIPOLE, type= fdsext, K2L = 0
CS4C2B:   MULTIPOLE, type= fdsext, K2L = 0

CS5F1A:   MULTIPOLE, type= fdsext, K2L = 0
CS5F3A:   MULTIPOLE, type= fdsext, K2L = 0
CS5A2A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12
CS5A3A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12
CS5D2A:   MULTIPOLE, type= fdsext, K2L = 0, T2 = TWOPI / 12


! 
! separators 
! 
F17HANG := 0
A17VANG := 0
A49HANG := 0
A49VANG := 0
B11HANG := 0.
B11VANG := 0.
B17HANG := 0.
C17VANG := 0.
C49HANG := 0
C49VANG := 0
D11HANG := 0
D11VANG := 0

D48HANG := 0.

ESEP:      ELSEPARATOR, L = 2.57175, E = 0
F17HESEP:  ELSEPARATOR, L = 2.57175, E = F17HANG, TILT = -pi/2
A17VESEP:  ELSEPARATOR, L = 2.57175, E = A17VANG, TILT = 0
A49HESEP:  ELSEPARATOR, L = 2.57175, E = A49HANG, TILT = -pi/2
A49VESEP:  ELSEPARATOR, L = 2.57175, E = A49VANG, TILT = 0
B11HESEP:  ELSEPARATOR, L = 2.57175, E = B11HANG, TILT = -pi/2
B11VESEP:  ELSEPARATOR, L = 2.57175, E = B11VANG, TILT = 0
B17HESEP:  ELSEPARATOR, L = 2.57175, E = B17HANG, TILT = -pi/2
C17VESEP:  ELSEPARATOR, L = 2.57175, E = C17VANG, TILT = 0
C49HESEP:  ELSEPARATOR, L = 2.57175, E = C49HANG, TILT = -pi/2
C49VESEP:  ELSEPARATOR, L = 2.57175, E = C49VANG, TILT = 0
D11HESEP:  ELSEPARATOR, L = 2.57175, E = D11HANG, TILT = -pi/2
D11VESEP:  ELSEPARATOR, L = 2.57175, E = D11VANG, TILT = 0

! Next line is for Run II. We plan to move the F17 Horz sep to D48
D48HESEPR2:ELSEPARATOR, L = 2.57175, E = D48HANG, TILT = -pi/2

! 
! unused multipole circuits

TQX:      QUADRUPOLE, L = 0, K1 = 0
TQ2:      QUADRUPOLE, L = 0, K1 = 0
TQ4:      QUADRUPOLE, L = 0, K1 = 0
TR1:      QUADRUPOLE, L = 0, K1 = 0, TILT = TWOPI / 4
TR2:      QUADRUPOLE, L = 0, K1 = 0, TILT = TWOPI / 4
TR3:      QUADRUPOLE, L = 0, K1 = 0, TILT = TWOPI / 4

TSX:      MULTIPOLE, K2L = 0
TS1:      MULTIPOLE, K2L = 0
TS2:      MULTIPOLE, K2L = 0
TS3:      MULTIPOLE, K2L = 0
TS4:      MULTIPOLE, K2L = 0

TX1:      MULTIPOLE, K2L = 0, T2 = TWOPI / 12
TX2:      MULTIPOLE, K2L = 0, T2 = TWOPI / 12
TX3:      MULTIPOLE, K2L = 0, T2 = TWOPI / 12
TX4:      MULTIPOLE, K2L = 0, T2 = TWOPI / 12

! 
! markers
! 
ME0:       MARKER
HFWE11:    MARKER
VFWE11:    MARKER
ME11:      MARKER
ME12:      MARKER
ME13:      MARKER
ME14:      MARKER
ME15:      MARKER
ME16:      MARKER
ME17:      MARKER
ME17KHORZ: MARKER
HFWE17:    MARKER
MPINGVERT: MARKER
ME18:      MARKER
ME19:      MARKER
ME21:      MARKER
ME22:      MARKER
ME23:      MARKER
ME24:      MARKER
ME25:      MARKER
ME26:      MARKER
ME27:      MARKER
ME28:      MARKER
ME29:      MARKER
ME32:      MARKER
ME33:      MARKER
ME34:      MARKER
ME35:      MARKER
ME36:      MARKER
ME37:      MARKER
ME38:      MARKER
ME39:      MARKER
ME42:      MARKER
ME43:      MARKER
ME44:      MARKER
ME45:      MARKER
ME46:      MARKER
ME47:      MARKER
ME48:      MARKER
ME49:      MARKER
MF0U:      MARKER

MF0:       MARKER
MF11:      MARKER
MF12:      MARKER
MF13:      MARKER
MF14:      MARKER
MF15:      MARKER
MF16:      MARKER
MF17:      MARKER
MF18:      MARKER
MF19:      MARKER
MF21:      MARKER
MF22:      MARKER
MF23:      MARKER
MF24:      MARKER
MF25:      MARKER
MF26:      MARKER
MF27:      MARKER
MF28:      MARKER
MF29:      MARKER
MF32:      MARKER
MF33:      MARKER
MF34:      MARKER
MF35:      MARKER
MF36:      MARKER
MF37:      MARKER
MF38:      MARKER
MF39:      MARKER
MF42:      MARKER
MF43:      MARKER
MF44:      MARKER
MF45:      MARKER
MF46:      MARKER
MF47:      MARKER
MF48:      MARKER
MF49:      MARKER
MA0U:      MARKER

MA0:       MARKER
MA11:      MARKER
MA12:      MARKER
MA13:      MARKER
MA14:      MARKER
MA15:      MARKER
MA16:      MARKER
MA17:      MARKER
MA18:      MARKER
MA19:      MARKER
MA21:      MARKER
MA22:      MARKER
MA23:      MARKER
MA24:      MARKER
MA25:      MARKER
MA26:      MARKER
MA27:      MARKER
MA28:      MARKER
MA29:      MARKER
MA32:      MARKER
MA33:      MARKER
MA34:      MARKER
MA35:      MARKER
MA36:      MARKER
MA37:      MARKER
MA38:      MARKER
MA39:      MARKER
MA42:      MARKER
MA43:      MARKER
MA44:      MARKER
MA45:      MARKER
MA46:      MARKER
MA47:      MARKER
MA48:      MARKER
MA49:      MARKER
MB0U:      MARKER

MB0:       MARKER
MB11:      MARKER
MB12:      MARKER
MB13:      MARKER
MB14:      MARKER
MB15:      MARKER
MB16:      MARKER
MB17:      MARKER
MB18:      MARKER
MB19:      MARKER
MB21:      MARKER
MB22:      MARKER
MB23:      MARKER
MB24:      MARKER
MB25:      MARKER
MB26:      MARKER
MB27:      MARKER
MB28:      MARKER
MB29:      MARKER
MB32:      MARKER
MB33:      MARKER
MB34:      MARKER
MB35:      MARKER
MB36:      MARKER
MB37:      MARKER
MB38:      MARKER
MB39:      MARKER
MB42:      MARKER
MB43:      MARKER
MB44:      MARKER
MB45:      MARKER
MB46:      MARKER
MB47:      MARKER
MB48:      MARKER
MB49:      MARKER
MC0U:      MARKER

MC0:       MARKER
MC11:      MARKER
MC12:      MARKER
MC13:      MARKER
MC14:      MARKER
MC15:      MARKER
MC16:      MARKER
MC17:      MARKER
MC18:      MARKER
MC19:      MARKER
MC21:      MARKER
MC22:      MARKER
MC23:      MARKER
MC24:      MARKER
MC25:      MARKER
MC26:      MARKER
MC27:      MARKER
MC28:      MARKER
MC29:      MARKER
MC32:      MARKER
MC33:      MARKER
MC34:      MARKER
MC35:      MARKER
MC36:      MARKER
MC37:      MARKER
MC38:      MARKER
MC39:      MARKER
MC42:      MARKER
MC43:      MARKER
MC44:      MARKER
MC45:      MARKER
MC46:      MARKER
MC47:      MARKER
MC48:      MARKER
MC49:      MARKER
MD0U:      MARKER

MD0:       MARKER
MD11:      MARKER
MD12:      MARKER
MD13:      MARKER
MD14:      MARKER
MD15:      MARKER
MD16:      MARKER
MD17:      MARKER
MD18:      MARKER
MD19:      MARKER
MD21:      MARKER
MD22:      MARKER
MD23:      MARKER
MD24:      MARKER
MD25:      MARKER
MD26:      MARKER
MD27:      MARKER
MD28:      MARKER
MD29:      MARKER
MD32:      MARKER
MD33:      MARKER
MD34:      MARKER
MD35:      MARKER
MD36:      MARKER
MD37:      MARKER
MD38:      MARKER
MD39:      MARKER
MD42:      MARKER
MD43:      MARKER
MD44:      MARKER
MD45:      MARKER
MD46:      MARKER
MD47:      MARKER
MD48:      MARKER
MD49:      MARKER
ME0U:      MARKER

MPSYNC:    MARKER
MPBSYNC:   MARKER

MD0COLL:   MARKER
MEXTLAMBU: MARKER
MEXTLAMBD: MARKER
MSEPTAU:   MARKER
MSEPTAD:   MARKER

ME0CL1FNT:   MARKER, TYPE = colmark
ME0CL1BCK:   MARKER, TYPE = colmark
ME0CL2FNT:   MARKER, TYPE = colmark
ME0CL2BCK:   MARKER, TYPE = colmark
ME0CL3FNT:   MARKER, TYPE = colmark
ME0CL3BCK:   MARKER, TYPE = colmark

MF17TGFNT:   MARKER, TYPE = colmark
MF17TGBCK:   MARKER, TYPE = colmark
MF17CL1FNT:  MARKER, TYPE = colmark
MF17CL1BCK:  MARKER, TYPE = colmark
MF17CL2FNT:  MARKER, TYPE = colmark
MF17CL2BCK:  MARKER, TYPE = colmark

MD17TGFNT:   MARKER, TYPE = colmark
MD17TGBCK:   MARKER, TYPE = colmark
MD17CL1FNT:  MARKER, TYPE = colmark
MD17CL1BCK:  MARKER, TYPE = colmark
MD17CL2FNT:  MARKER, TYPE = colmark
MD17CL2BCK:  MARKER, TYPE = colmark

! 
! dipole correctors 
! 
HDE11:    HKICK, L = 0
VDE11:    VKICK, L = 0
VDE12:    VKICK, L = 0
HDE13:    HKICK, L = 0
VDE14:    VKICK, L = 0
HDE15:    HKICK, L = 0
VDE16:    VKICK, L = 0
HDE17:    HKICK, L = 0
VDE18:    VKICK, L = 0
HDE19:    HKICK, L = 0
VDE21:    VKICK, L = 0
HDE22:    HKICK, L = 0
VDE23:    VKICK, L = 0
HDE24:    HKICK, L = 0
VDE25:    VKICK, L = 0
HDE26:    HKICK, L = 0
VDE27:    VKICK, L = 0
HDE28:    HKICK, L = 0
VDE29:    VKICK, L = 0
HDE32:    HKICK, L = 0
VDE33:    VKICK, L = 0
HDE34:    HKICK, L = 0
VDE35:    VKICK, L = 0
HDE36:    HKICK, L = 0
VDE37:    VKICK, L = 0
HDE38:    HKICK, L = 0
VDE39:    VKICK, L = 0
HDE42:    HKICK, L = 0
VDE43:    VKICK, L = 0
HDE44:    HKICK, L = 0
VDE45:    VKICK, L = 0
HDE46:    HKICK, L = 0
VDE47:    VKICK, L = 0
HDE48:    HKICK
HDE49:    HKICK
VDE49:    VKICK

HDF11:    HKICK, L = 0
VDF11:    VKICK, L = 0
VDF12:    VKICK, L = 0
HDF13:    HKICK, L = 0
VDF14:    VKICK, L = 0
HDF15:    HKICK, L = 0
VDF16:    VKICK, L = 0
HDF17:    HKICK, L = 0
VDF18:    VKICK, L = 0
HDF19:    HKICK, L = 0
VDF21:    VKICK, L = 0
HDF22:    HKICK, L = 0
VDF23:    VKICK, L = 0
HDF24:    HKICK, L = 0
VDF25:    VKICK, L = 0
HDF26:    HKICK, L = 0
VDF27:    VKICK, L = 0
HDF28:    HKICK, L = 0
VDF29:    VKICK, L = 0
HDF32:    HKICK, L = 0
VDF33:    VKICK, L = 0
HDF34:    HKICK, L = 0
VDF35:    VKICK, L = 0
HDF36:    HKICK, L = 0
VDF37:    VKICK, L = 0
HDF38:    HKICK, L = 0
VDF39:    VKICK, L = 0
HDF42:    HKICK, L = 0
VDF43:    VKICK, L = 0
HDF44:    HKICK, L = 0
VDF45:    VKICK, L = 0
HDF46:    HKICK, L = 0
VDF47:    VKICK, L = 0
HDF48:    HKICK
HDF49:    HKICK
VDF49:    VKICK

VDA11:    VKICK, L = 0
HDA11:    HKICK, L = 0
VDA12:    VKICK, L = 0
HDA13:    HKICK, L = 0
VDA14:    VKICK, L = 0
HDA15:    HKICK, L = 0
VDA16:    VKICK, L = 0
HDA17:    HKICK, L = 0
VDA18:    VKICK, L = 0
HDA19:    HKICK, L = 0
VDA21:    VKICK, L = 0
HDA22:    HKICK, L = 0
VDA23:    VKICK, L = 0
HDA24:    HKICK, L = 0
VDA25:    VKICK, L = 0
HDA26:    HKICK, L = 0
VDA27:    VKICK, L = 0
HDA28:    HKICK, L = 0
VDA29:    VKICK, L = 0
HDA32:    HKICK, L = 0
VDA33:    VKICK, L = 0
HDA34:    HKICK, L = 0
VDA35:    VKICK, L = 0
HDA36:    HKICK, L = 0
VDA37:    VKICK, L = 0
HDA38:    HKICK, L = 0
VDA39:    VKICK, L = 0
HDA42:    HKICK, L = 0
VDA43:    VKICK, L = 0
HDA44:    HKICK, L = 0
VDA45:    VKICK, L = 0
HDA46:    HKICK, L = 0
VDA47:    VKICK, L = 0
VDA48:    VKICK
HDA48:    HKICK
HDA48C:   HKICK
HDA49:    HKICK
VDA49:    VKICK

HDB11:    HKICK, L = 0
VDB11:    VKICK, L = 0
VDB12:    VKICK, L = 0
HDB12:    HKICK, L = 0
HDB13:    HKICK, L = 0
VDB14:    VKICK, L = 0
HDB15:    HKICK, L = 0
VDB16:    VKICK, L = 0
HDB17:    HKICK, L = 0
VDB18:    VKICK, L = 0
HDB19:    HKICK, L = 0
VDB21:    VKICK, L = 0
HDB22:    HKICK, L = 0
VDB23:    VKICK, L = 0
HDB24:    HKICK, L = 0
VDB25:    VKICK, L = 0
HDB26:    HKICK, L = 0
VDB27:    VKICK, L = 0
HDB28:    HKICK, L = 0
VDB29:    VKICK, L = 0
HDB32:    HKICK, L = 0
VDB33:    VKICK, L = 0
HDB34:    HKICK, L = 0
VDB35:    VKICK, L = 0
HDB36:    HKICK, L = 0
VDB37:    VKICK, L = 0
HDB38:    HKICK, L = 0
VDB39:    VKICK, L = 0
HDB42:    HKICK, L = 0
VDB43:    VKICK, L = 0
HDB44:    HKICK, L = 0
VDB45:    VKICK, L = 0
HDB46:    HKICK, L = 0
VDB47:    VKICK, L = 0
HDB48:    HKICK
HDB49:    HKICK
VDB49:    VKICK


HDC11:    HKICK, L = 0
VDC11:    VKICK, L = 0
VDC12:    VKICK, L = 0
HDC13:    HKICK, L = 0
VDC14:    VKICK, L = 0
HDC15:    HKICK, L = 0
VDC16:    VKICK, L = 0
HDC17:    HKICK, L = 0
VDC18:    VKICK, L = 0
HDC19:    HKICK, L = 0
VDC21:    VKICK, L = 0
HDC22:    HKICK, L = 0
VDC23:    VKICK, L = 0
HDC24:    HKICK, L = 0
VDC25:    VKICK, L = 0
HDC26:    HKICK, L = 0
VDC27:    VKICK, L = 0
HDC28:    HKICK, L = 0
VDC29:    VKICK, L = 0
HDC32:    HKICK, L = 0
VDC33:    VKICK, L = 0
HDC34:    HKICK, L = 0
VDC35:    VKICK, L = 0
HDC36:    HKICK, L = 0
VDC37:    VKICK, L = 0
HDC38:    HKICK, L = 0
VDC39:    VKICK, L = 0
HDC42:    HKICK, L = 0
VDC43:    VKICK, L = 0
HDC44:    HKICK, L = 0
VDC45:    VKICK, L = 0
HDC46:    HKICK, L = 0
VDC47:    VKICK, L = 0
HDC48:    HKICK
HDC48C:   HKICK
VDC48:    VKICK
HDC49:    HKICK
VDC49:    VKICK

D0BUMPK1: HKICK, L = 0
D0BUMPK2: HKICK, L = 0

HDD11:    HKICK, L = 0
VDD11:    VKICK, L = 0
VDD12:    VKICK, L = 0
HDD12:    HKICK, L = 0
HDD13:    HKICK, L = 0
VDD14:    VKICK, L = 0
HDD15:    HKICK, L = 0
VDD16:    VKICK, L = 0
HDD17:    HKICK, L = 0
VDD18:    VKICK, L = 0
HDD19:    HKICK, L = 0
VDD21:    VKICK, L = 0
HDD22:    HKICK, L = 0
VDD23:    VKICK, L = 0
HDD24:    HKICK, L = 0
VDD25:    VKICK, L = 0
HDD26:    HKICK, L = 0
VDD27:    VKICK, L = 0
HDD28:    HKICK, L = 0
VDD29:    VKICK, L = 0
HDD32:    HKICK, L = 0
VDD33:    VKICK, L = 0
HDD34:    HKICK, L = 0
VDD35:    VKICK, L = 0
HDD36:    HKICK, L = 0
VDD37:    VKICK, L = 0
HDD38:    HKICK, L = 0
VDD39:    VKICK, L = 0
HDD42:    HKICK, L = 0
VDD43:    VKICK, L = 0
HDD44:    HKICK, L = 0
VDD45:    VKICK, L = 0
HDD46:    HKICK, L = 0
VDD47:    VKICK, L = 0
HDD48:    HKICK
HDD49:    HKICK
VDD49:    VKICK

! 
! bpm's
! 

HBPME11:  HMONITOR
VBPME11:  VMONITOR
VBPME12:  VMONITOR
HBPME13:  HMONITOR
VBPME14:  VMONITOR
HBPME15:  HMONITOR
VBPME16:  VMONITOR
HBPME17:  HMONITOR
VBPME18:  VMONITOR
HBPME19:  HMONITOR
VBPME21:  VMONITOR
HBPME22:  HMONITOR
VBPME23:  VMONITOR
HBPME24:  HMONITOR
VBPME25:  VMONITOR
HBPME26:  HMONITOR
VBPME27:  VMONITOR
HBPME28:  HMONITOR
VBPME29:  VMONITOR
HBPME32:  HMONITOR
VBPME33:  VMONITOR
HBPME34:  HMONITOR
VBPME35:  VMONITOR
HBPME36:  HMONITOR
VBPME37:  VMONITOR
HBPME38:  HMONITOR
VBPME39:  VMONITOR
HBPME42:  HMONITOR
VBPME43:  VMONITOR
HBPME44:  HMONITOR
VBPME45:  VMONITOR
HBPME46:  HMONITOR
VBPME47:  VMONITOR
HBPME48:  HMONITOR
HBPME49:  HMONITOR
VBPME49:  VMONITOR

HBPMF11:  HMONITOR
VBPMF11:  VMONITOR
VBPMF12:  VMONITOR
HBPMF13:  HMONITOR
VBPMF14:  VMONITOR
HBPMF15:  HMONITOR
VBPMF16:  VMONITOR
HBPMF17:  HMONITOR
VBPMF18:  VMONITOR
HBPMF19:  HMONITOR
VBPMF21:  VMONITOR
HBPMF22:  HMONITOR
VBPMF23:  VMONITOR
HBPMF24:  HMONITOR
VBPMF25:  VMONITOR
HBPMF26:  HMONITOR
VBPMF27:  VMONITOR
HBPMF28:  HMONITOR
VBPMF29:  VMONITOR
HBPMF32:  HMONITOR
VBPMF33:  VMONITOR
HBPMF34:  HMONITOR
VBPMF35:  VMONITOR
HBPMF36:  HMONITOR
VBPMF37:  VMONITOR
HBPMF38:  HMONITOR
VBPMF39:  VMONITOR
HBPMF42:  HMONITOR
VBPMF43:  VMONITOR
HBPMF44:  HMONITOR
VBPMF45:  VMONITOR
HBPMF46:  HMONITOR
VBPMF47:  VMONITOR
HBPMF48:  HMONITOR
HBPMF49:  HMONITOR
VBPMF49:  VMONITOR

HBPMA11:  HMONITOR
VBPMA11:  VMONITOR
VBPMA12:  VMONITOR
HBPMA13:  HMONITOR
VBPMA14:  VMONITOR
HBPMA15:  HMONITOR
VBPMA16:  VMONITOR
HBPMA17:  HMONITOR
VBPMA18:  VMONITOR
HBPMA19:  HMONITOR
VBPMA21:  VMONITOR
HBPMA22:  HMONITOR
VBPMA23:  VMONITOR
HBPMA24:  HMONITOR
VBPMA25:  VMONITOR
HBPMA26:  HMONITOR
VBPMA27:  VMONITOR
HBPMA28:  HMONITOR
VBPMA29:  VMONITOR
HBPMA32:  HMONITOR
VBPMA33:  VMONITOR
HBPMA34:  HMONITOR
VBPMA35:  VMONITOR
HBPMA36:  HMONITOR
VBPMA37:  VMONITOR
HBPMA38:  HMONITOR
VBPMA39:  VMONITOR
HBPMA42:  HMONITOR
VBPMA43:  VMONITOR
HBPMA44:  HMONITOR
VBPMA45:  VMONITOR
HBPMA46:  HMONITOR
VBPMA47:  VMONITOR
HBPMA48:  HMONITOR
VBPMA48:  VMONITOR
HBPMA49:  HMONITOR
VBPMA49:  VMONITOR
HBPMB0U:  HMONITOR
VBPMB0U:  VMONITOR

VBPMB0D:  VMONITOR
HBPMB0D:  HMONITOR
VBPMB11:  VMONITOR
HBPMB11:  HMONITOR
HBPMB12:  HMONITOR
VBPMB12:  VMONITOR
HBPMB13:  HMONITOR
VBPMB14:  VMONITOR
HBPMB15:  HMONITOR
VBPMB16:  VMONITOR
HBPMB17:  HMONITOR
VBPMB18:  VMONITOR
HBPMB19:  HMONITOR
VBPMB21:  VMONITOR
HBPMB22:  HMONITOR
VBPMB23:  VMONITOR
HBPMB24:  HMONITOR
VBPMB25:  VMONITOR
HBPMB26:  HMONITOR
VBPMB27:  VMONITOR
HBPMB28:  HMONITOR
VBPMB29:  VMONITOR
HBPMB32:  HMONITOR
VBPMB33:  VMONITOR
HBPMB34:  HMONITOR
VBPMB35:  VMONITOR
HBPMB36:  HMONITOR
VBPMB37:  VMONITOR
HBPMB38:  HMONITOR
VBPMB39:  VMONITOR
HBPMB42:  HMONITOR
VBPMB43:  VMONITOR
HBPMB44:  HMONITOR
VBPMB45:  VMONITOR
HBPMB46:  HMONITOR
VBPMB47:  VMONITOR
HBPMB48:  HMONITOR
HBPMB49:  HMONITOR
VBPMB49:  VMONITOR

HBPMC11:  HMONITOR
VBPMC11:  VMONITOR
VBPMC12:  VMONITOR
HBPMC13:  HMONITOR
VBPMC14:  VMONITOR
HBPMC15:  HMONITOR
VBPMC16:  VMONITOR
HBPMC17:  HMONITOR
VBPMC18:  VMONITOR
HBPMC19:  HMONITOR
VBPMC21:  VMONITOR
HBPMC22:  HMONITOR
VBPMC23:  VMONITOR
HBPMC24:  HMONITOR
VBPMC25:  VMONITOR
HBPMC26:  HMONITOR
VBPMC27:  VMONITOR
HBPMC28:  HMONITOR
VBPMC29:  VMONITOR
HBPMC32:  HMONITOR
VBPMC33:  VMONITOR
HBPMC34:  HMONITOR
VBPMC35:  VMONITOR
HBPMC36:  HMONITOR
VBPMC37:  VMONITOR
HBPMC38:  HMONITOR
VBPMC39:  VMONITOR
HBPMC42:  HMONITOR
VBPMC43:  VMONITOR
HBPMC44:  HMONITOR
VBPMC45:  VMONITOR
HBPMC46:  HMONITOR
VBPMC47:  VMONITOR
HBPMC48:  HMONITOR
VBPMC48:  VMONITOR
HBPMC49:  HMONITOR
VBPMC49:  VMONITOR
HBPMD0U:  HMONITOR
VBPMD0U:  VMONITOR

VBPMD0D:  VMONITOR
HBPMD0D:  HMONITOR
VBPMD11:  VMONITOR
HBPMD11:  HMONITOR
HBPMD12:  HMONITOR
VBPMD12:  VMONITOR
HBPMD13:  HMONITOR
VBPMD14:  VMONITOR
HBPMD15:  HMONITOR
VBPMD16:  VMONITOR
HBPMD17:  HMONITOR
VBPMD18:  VMONITOR
HBPMD19:  HMONITOR
VBPMD21:  VMONITOR
HBPMD22:  HMONITOR
VBPMD23:  VMONITOR
HBPMD24:  HMONITOR
VBPMD25:  VMONITOR
HBPMD26:  HMONITOR
VBPMD27:  VMONITOR
HBPMD28:  HMONITOR
VBPMD29:  VMONITOR
HBPMD32:  HMONITOR
VBPMD33:  VMONITOR
HBPMD34:  HMONITOR
VBPMD35:  VMONITOR
HBPMD36:  HMONITOR
VBPMD37:  VMONITOR
HBPMD38:  HMONITOR
VBPMD39:  VMONITOR
HBPMD42:  HMONITOR
VBPMD43:  VMONITOR
HBPMD44:  HMONITOR
VBPMD45:  VMONITOR
HBPMD46:  HMONITOR
VBPMD47:  VMONITOR
HBPMD48:  HMONITOR
HBPMD49:  HMONITOR
VBPMD49:  VMONITOR


LONGSTRE0D: LINE = ( DLONG1 )

!  In the standard version, I've moved ME0 so that it is exactly 1/6 of 
!     the ring from MD0. This moves it by 15.2 cm upstream. 
! For Run II, I've also put in the proton removal insert with 
!     4 b2 magnets used as a dogleg.        ppb    9/4/97
!   For Run II, the marker ME0 is inside the last DOGLEGM. 
!   So I've split this into two pieces. 
E0DOGLEGM:  LINE = ( DDOGEND, E0DOGM, DDOGEND )
E0DOGLEGP:  LINE = ( DDOGEND, E0DOGP, DDOGEND )
E0COLL2:    LINE = ( ME0CL2FNT, DR2COLL, ME0CL2BCK )
E0COLL3:    LINE = ( ME0CL3FNT, DR2COLL, ME0CL3BCK )
E0DAMP:     LINE = ( DPHDAMP, DPVDAMP, DPBHDAMP, DPBVDAMP )
LSTRE0DR2: LINE = ( ME0, E0DOGMP2, DDOGEND, DE0SP3, E0DAMP, DE0SP4, &
                      E0COLL2, E0COLL3, DCTABV )

QUADE0D:  LINE = ( DQUAD1END, HQUAD1F, DQUAD1END )
COLDBYP1: LINE = ( DCOLD1 )
STRAIGHTE0D:  LINE = ( DE11END, HFWE11, DE11MID, VFWE11, DE11END )
COLDBYP2: LINE = ( DCOLD2 )
E0DOWN:   LINE = ( ME0, LONGSTRE0D, QUADE0D, COLDBYP1, STRAIGHTE0D, &
           COLDBYP2 )
E0DOWNR2: LINE = ( LSTRE0DR2, QUADE0D, COLDBYP1, STRAIGHTE0D, COLDBYP2 )
QUADE11:  LINE = ( DBPMIN, HBPME11, DBPMOUT, HQUAD2D, DQOUT1 )
PACKE11:  LINE = (DBPMIN1,VBPME11,DBPMOUT1,DHQUADC,TSQE0,TR3,HDE11,VDE11,&
           DHQUADC, DPACKOUT1 )
DIPOLE:    LINE = ( DBENDEND, BENDQ, BEND, BENDQ, DBENDEND )
E11:       LINE = ( ME11, QUADE11, PACKE11, 4*DIPOLE )
QUADE12:  LINE = ( DBPMIN, VBPME12, DBPMOUT, HQUAD3D, DQOUT )
PACKE12:  LINE = ( DPACKIN, DHQUADC, TSX, TQX, VDE12, DHQUADC, &
           DPACKU2D, DPACKOUT )
E12:       LINE = ( ME12, QUADE12, PACKE12, 4*DIPOLE )
QUADE13:  LINE = ( DBPMIN, HBPME13, DBPMOUT, HQUADF, DQOUT )
PACKE13:  LINE = ( DPACKIN, TQFE, TSF, HDE13, DPACKU2D, TSQ, DPACKOUT )
E13:       LINE = ( ME13, QUADE13, PACKE13, 4*DIPOLE )
QUADE14:  LINE = ( DBPMIN, VBPME14, DBPMOUT, HQUADD, DQOUT )
PACKE14:  LINE = ( DPACKIN, TQDE, TSD, VDE14, DPACKU2D, DPACKOUT )
E14:       LINE = ( ME14, QUADE14, PACKE14, 4*DIPOLE )
QUADE15:  LINE = ( DBPMIN, HBPME15, DBPMOUT, HQUADF, DQOUT )
PACKE15:  LINE = ( DPIN5LOC, TQFE, TSF, HDE15, DPOUT5LOC )
FEEDCAN:  LINE = ( DFCANIN, FCAN, DFCANOUT )
E15:       LINE = ( ME15, QUADE15, PACKE15, FEEDCAN, 4*DIPOLE )
QUADE16:  LINE = ( DBPMIN, VBPME16, DBPMOUT, HQUADD, DQOUT )
PACKE16:  LINE = ( DPACKIN, TQDE, TSD, VDE16, DPACKU2D, DPACKOUT )
E16:       LINE = ( ME16, QUADE16, PACKE16, 4*DIPOLE )
QUADE17:  LINE = ( DBPMIN, HBPME17, DBPMOUT, HQUADF, DQOUT )
PACKE17:  LINE = ( DPACKIN, TQFE, TSF, HDE17, DPACKU2D, TOD39S, CS3E1A, TSQ, &
           DPACKOUT )
KICKE17:  LINE = ( DE17A, ME17KHORZ, DE17B, HFWE17, DE17C, MPINGVERT, DE17D )
E17:       LINE = ( ME17, QUADE17, PACKE17, COLDBYP1, KICKE17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
QUADE18:  LINE = ( DBPMIN, VBPME18, DBPMOUT, HQUADD, DQOUT )
PACKE18:  LINE = ( DPACKIN, TQDE, TSD, VDE18, DPACKU2D, DPACKOUT )
E18:       LINE = ( ME18, QUADE18, PACKE18, 4*DIPOLE )
QUADE19:  LINE = ( DBPMIN, HBPME19, DBPMOUT, HQUADF, DQOUT )
PACKE19:  LINE = ( DPACKIN, TQFE, TSF, HDE19, DPACKU2D, TOF39S, DPACKOUT )
E19:       LINE = ( ME19, QUADE19, PACKE19, 4*DIPOLE )
ETEN:     LINE = ( E11, E12, E13, E14, E15, E16, E17, E18, E19 )
QUADE21:  LINE = ( DBPMIN, VBPME21, DBPMOUT, HQUADD, DQOUT )
PACKE21:  LINE = ( DPACKIN, TQDE, TSD, VDE21, DPACKU2D, DPACKOUT )
E21:       LINE = ( ME21, QUADE21, PACKE21, 4*DIPOLE )
QUADE22:  LINE = ( DBPMIN, HBPME22, DBPMOUT, HQUADF, DQOUT )
PACKE22:  LINE = ( DPACKIN, TQFE, TSF, HDE22, DPACKU2D, CS3E1A,TSQ,TOD39C,&
           DPACKOUT )
E22:       LINE = ( ME22, QUADE22, PACKE22, 4*DIPOLE )
QUADE23:  LINE = ( DBPMIN, VBPME23, DBPMOUT, HQUADD, DQOUT )
PACKE23:  LINE = ( DPACKIN, TQDE, TSD, VDE23, DPACKU2D, TOZD, TQ2, &
           DPACKOUT )
E23:       LINE = ( ME23, QUADE23, PACKE23, 4*DIPOLE )
QUADE24:  LINE = ( DBPMIN, HBPME24, DBPMOUT, HQUADF, DQOUT )
PACKE24:  LINE = ( DPACKIN, TQFE, TSF, HDE24, DPACKU2D, CS1E2A, TOF39C, &
           DPACKOUT )
E24:       LINE = ( ME24, QUADE24, PACKE24, 4*DIPOLE )
QUADE25:  LINE = ( DBPMIN, VBPME25, DBPMOUT, HQUADD, DQOUT )
PACKE25:  LINE = ( DPIN5LOC, TQDE, TSD, VDE25, DPOUT5LOC )
E25:       LINE = ( ME25, QUADE25, PACKE25, FEEDCAN, 4*DIPOLE )
QUADE26:  LINE = ( DBPMIN, HBPME26, DBPMOUT, HQUADF, DQOUT )
PACKE26:  LINE = ( DPACKIN, TQFE, TSF, HDE26, DPACKU2D, TOF39S, TSQ, &
           DPACKOUT )
E26:       LINE = ( ME26, QUADE26, PACKE26, 4*DIPOLE )
QUADE27:  LINE = ( DBPMIN, VBPME27, DBPMOUT, HQUADD, DQOUT )
PACKE27:  LINE = ( DPACKIN, TQDE, TSD, VDE27, DPACKU2D, TOZD, TQ4, &
           DPACKOUT )
E27:       LINE = ( ME27, QUADE27, PACKE27, 4*DIPOLE )
QUADE28:  LINE = ( DBPMIN, HBPME28, DBPMOUT, HQUADF, DQOUT )
PACKE28:  LINE = ( DPACKIN, TQFE, TSF, HDE28, DPACKU2D, TOD39S, CS1E2A, &
           DPACKOUT )
E28:       LINE = ( ME28, QUADE28, PACKE28, 4*DIPOLE )
QUADE29:  LINE = ( DBPMIN, VBPME29, DBPMOUT, HQUADD, DQOUT )
PACKE29:  LINE = ( DPACKIN, TQDE, TSD, VDE29, DPACKU2D, DPACKOUT )
E29:       LINE = ( ME29, QUADE29, PACKE29, 4*DIPOLE )
ETWENTY:  LINE = ( E21, E22, E23, E24, E25, E26, E27, E28, E29 )
QUADE32:  LINE = ( DBPMIN, HBPME32, DBPMOUT, HQUADF, DQOUT )
PACKE32:  LINE = ( DPACKIN, TQFE, TSF, HDE32, DPACKU2D, CS3E3A,TSQ,TOF39C,&
           DPACKOUT )
E32:       LINE = ( ME32, QUADE32, PACKE32, 4*DIPOLE )
QUADE33:  LINE = ( DBPMIN, VBPME33, DBPMOUT, HQUADD, DQOUT )
PACKE33:  LINE = ( DPACKIN, TQDE, TSD, VDE33, DPACKU2D, TOZD, TQ2, &
           DPACKOUT )
E33:       LINE = ( ME33, QUADE33, PACKE33, 4*DIPOLE )
QUADE34:  LINE = ( DBPMIN, HBPME34, DBPMOUT, HQUADF, DQOUT )
PACKE34:  LINE = ( DPACKIN, TQFE, TSF, HDE34, DPACKU2D, TOD39C, DPACKOUT )
E34:       LINE = ( ME34, QUADE34, PACKE34, 4*DIPOLE )
QUADE35:  LINE = ( DBPMIN, VBPME35, DBPMOUT, HQUADD, DQOUT )
PACKE35:  LINE = ( DPIN5LOC, TQDE, TSD, VDE35, DPOUT5LOC )
E35:       LINE = ( ME35, QUADE35, PACKE35, FEEDCAN, 4*DIPOLE )
QUADE36:  LINE = ( DBPMIN, HBPME36, DBPMOUT, HQUADF, DQOUT )
PACKE36:  LINE = ( DPACKIN, TQFE, TSF, HDE36, DPACKU2D, TOZF, CS3E3A, TSQ, &
           DPACKOUT )
E36:       LINE = ( ME36, QUADE36, PACKE36, 4*DIPOLE )
QUADE37:  LINE = ( DBPMIN, VBPME37, DBPMOUT, HQUADD, DQOUT )
PACKE37:  LINE = ( DPACKIN, TQDE, TSD, VDE37, DPACKU2D, TOZD, TQ4, &
           DPACKOUT )
E37:       LINE = ( ME37, QUADE37, PACKE37, 4*DIPOLE )
QUADE38:  LINE = ( DBPMIN, HBPME38, DBPMOUT, HQUADF, DQOUT )
PACKE38:  LINE = ( DPACKIN, TQFE, TSF, HDE38, DPACKU2D, DPACKOUT )
E38:       LINE = ( ME38, QUADE38, PACKE38, 4*DIPOLE )
QUADE39:  LINE = ( DBPMIN, VBPME39, DBPMOUT, HQUADD, DQOUT )
PACKE39:  LINE = ( DPACKIN, TQDE, TSD, VDE39, DPACKU2D, DPACKOUT )
E39:       LINE = ( ME39, QUADE39, PACKE39, 4*DIPOLE )
ETHIRTY:  LINE = ( E32, E33, E34, E35, E36, E37, E38, E39 )
QUADE42:  LINE = ( DBPMIN, HBPME42, DBPMOUT, HQUADF, DQOUT )
PACKE42:  LINE = ( DPACKIN, TQFE, TSF, HDE42, DPACKU2D, TOZF, TSQ, &
           DPACKOUT )
E42:       LINE = ( ME42, QUADE42, PACKE42, 4*DIPOLE )
QUADE43:  LINE = ( DBPMIN, VBPME43, DBPMOUT, HQUADD, DQOUT )
PACKE43:  LINE = ( DPACKIN, TQDE, TSD, VDE43, DPACKU2D, DPACKOUT )
E43:       LINE = ( ME43, QUADE43, PACKE43, 4*DIPOLE )
QUADE44:  LINE = ( DBPMIN, HBPME44, DBPMOUT, HQUADF, DQOUT )
PACKE44:  LINE = ( DPACKIN, TQFE, TSF, HDE44, DPACKU2D, DPACKOUT )
E44:       LINE = ( ME44, QUADE44, PACKE44, 4*DIPOLE )
QUADE45:  LINE = ( DBPMIN, VBPME45, DBPMOUT, HQUADD, DQOUT )
PACKE45:  LINE = ( DPIN5LOC, TQDE, TSD, VDE45, DPOUT5LOC )
E45:       LINE = ( ME45, QUADE45, PACKE45, FEEDCAN, 4*DIPOLE )
QUADE46:  LINE = ( DBPMIN, HBPME46, DBPMOUT, HQUADF, DQOUT )
PACKE46:  LINE = ( DPACKIN, TQFE, TSF, HDE46, DPACKU2D, TSQ, DPACKOUT )
E46:       LINE = ( ME46, QUADE46, PACKE46, 4*DIPOLE )
QUADE47:  LINE = ( DBPMIN, VBPME47, DBPMOUT, HQUADD, DQOUT )
PACKE47:  LINE = ( DPACKIN, TQDE, TSD, VDE47, DPACKU2D, DPACKOUT )
E47:       LINE = ( ME47, QUADE47, PACKE47, 4*DIPOLE )
QUADE48:  LINE = ( DBPMIN, HBPME48, DBPMOUT, HQUAD3F, DQOUT )
PACKE48:  LINE = ( DPACKIN, DHQUADC, TSX, TQX, HDE48, DHQUADC, &
           DPACKU2D, DPACKOUT )
STRAIGHTE48:  LINE = ( DSTRAIGHT6 )
E48:       LINE = ( ME48, QUADE48, PACKE48, STRAIGHTE48, 3*DIPOLE )

! For Run II, the pbar injection kickers will be in the E48 straight.
E48WSTRR2:  LINE = ( DE48SP1, DPBINJK, DPBINJK, DE48SP2 )
E48R2:     LINE = ( ME48, QUADE48, PACKE48, COLDBYP1, E48WSTRR2, &
                    COLDBYP2, 3*DIPOLE )

QUADE49:  LINE = ( DBPMIN, HBPME49, DBPMOUT, HQUAD2F, DQOUT1 )
STRAIGHTE49:  LINE = ( DSTRAIGHT5 )
PACKE49:  LINE = ( DBPMIN1, VBPME49, DBPMOUT1, DHQUADC, TR3, VDE49, HDE49, &
           DHQUADC, DPACKOUT1 )
E49:       LINE = ( ME49, QUADE49, COLDBYP2, STRAIGHTE49, COLDBYP1, PACKE49 )
EFORTY:   LINE = ( E42, E43, E44, E45, E46, E47, E48, E49 )
EFORTYR2: LINE = ( E42, E43, E44, E45, E46, E47, E48R2, E49 )
QUADF0U:  LINE = ( DQUAD1END, HQUAD1D, DQUAD1END )
LONGSTRF0U: LINE = ( DLONG4 )
F0UP:     LINE = ( MF0U, QUADF0U, LONGSTRF0U )

! Next bit is new version of F0 for Run II. 
!   DRFUP and DRFDOWN are approximate values measured
!   with a ruler off of xeroxed drawings.     ppb 9/7/97
RFGROUP:   LINE = ( DRFCAVITY, DRFSP1, DRFCAVITY, DRFSP1, &
                    DRFCAVITY, DRFSP1, DRFCAVITY )
RFSTRAIGHT: LINE = ( DRFUP, RFGROUP, DRFSP2, RFGROUP, DRFDOWN )
F0UPR2:   LINE = ( MF0U, QUADF0U, RFSTRAIGHT )

SEXTANTE:  LINE = ( E0DOWN, ETEN, ETWENTY, ETHIRTY, EFORTY, F0UP )
SEXTANTER2:LINE = (E0DOWNR2,ETEN, ETWENTY, ETHIRTY, EFORTYR2, F0UPR2 )
LONGSTRF0D: LINE = ( DLONG1 )
QUADF0D:  LINE = ( DQUAD1END, HQUAD1F, DQUAD1END )
STRAIGHTF0D:  LINE = ( DSTRAIGHT1 )
F0DOWN:   LINE = ( MF0, LONGSTRF0D, QUADF0D, COLDBYP1, STRAIGHTF0D, &
           COLDBYP2 )

! Next bit is new version of F0 for Run II. 
!   DF0SP1, and DF0SP2 are approximate values measured
!   with a ruler off of xeroxed drawings.     ppb 9/7/97
LSTRF0DR2: LINE = ( DF0SP1, LAMB1DN, LAMB2UP, LAMB2DN, DF0SP2 )
F0DOWNR2: LINE = ( MF0, LSTRF0DR2, QUADF0D, COLDBYP1, STRAIGHTF0D, &
           COLDBYP2 )

QUADF11:  LINE = ( DBPMIN, HBPMF11, DBPMOUT, HQUAD2D, DQOUT1 )
PACKF11:  LINE = ( DBPMIN1, VBPMF11, DBPMOUT1, DHQUADC, TR3, HDF11, VDF11, &
           DHQUADC, DPACKOUT1 )
F11:       LINE = ( MF11, QUADF11, PACKF11, 4*DIPOLE )
QUADF12:  LINE = ( DBPMIN, VBPMF12, DBPMOUT, HQUAD3D, DQOUT )
PACKF12:  LINE = ( DPACKIN, DHQUADC, TSX, TQX,VDF12,DHQUADC,DPACKU2D,CS2F1A, &
           DPACKOUT )
F12:       LINE = ( MF12, QUADF12, PACKF12, 4*DIPOLE )
QUADF13:  LINE = ( DBPMIN, HBPMF13, DBPMOUT, HQUADF, DQOUT )
PACKF13:  LINE = ( DPACKIN, TQFF, TSF, HDF13, DPACKU2D, TSQ, DPACKOUT )
F13:       LINE = ( MF13, QUADF13, PACKF13, 4*DIPOLE )
QUADF14:  LINE = ( DBPMIN, VBPMF14, DBPMOUT, HQUADD, DQOUT )
PACKF14:  LINE = ( DPACKIN, TQDF, TSD, VDF14, DPACKU2D, CS5F1A, DPACKOUT )
F14:       LINE = ( MF14, QUADF14, PACKF14, 4*DIPOLE )
QUADF15:  LINE = ( DBPMIN, HBPMF15, DBPMOUT, HQUADF, DQOUT )
PACKF15:  LINE = ( DPIN5LOC, TQFF, TSF, HDF15, DPOUT5LOC )
F15:       LINE = ( MF15, QUADF15, PACKF15, FEEDCAN, 4*DIPOLE )
QUADF16:  LINE = ( DBPMIN, VBPMF16, DBPMOUT, HQUADD, DQOUT )
PACKF16:  LINE = ( DPACKIN, TQDF, TSD, VDF16, DPACKU2D, CS2F1A, DPACKOUT )
F16:       LINE = ( MF16, QUADF16, PACKF16, 4*DIPOLE )
QUADF17:  LINE = ( DBPMIN, HBPMF17, DBPMOUT, HQUADF, DQOUT )
PACKF17:  LINE = ( DPACKIN, TQFF, TSF, HDF17, DPACKU2D, TSQ, TOF39S, DPACKOUT )
ESEPF17:  LINE = ( DSEPEND1, F17HESEP, DSEPB, ESEP, DSEPB, ESEP, DSEPB, &
           ESEP, DSEPEND1 )
F17:       LINE = ( MF17, QUADF17, PACKF17, COLDBYP1, ESEPF17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )

! For Run II we intend to move the horz separator at F17 to D48 and
!   the F17 warm straight will be filled with the proton injection kickers
!   and a scraping insert.       ppb  9/4/97
F17TARG:   LINE = ( MF17TGBCK, DR2TTARG, MF17TGFNT )
F17COLL1:  LINE = ( MF17CL1BCK, DR2COLL, MF17CL1FNT )
F17COLL2:  LINE = ( MF17CL2BCK, DR2COLL, MF17CL2FNT )
! F17PINJK:  LINE = ( 5*(DPINJK, DPINJKB) )
F17PINJK:  LINE = ( DPINJK, DPINJKB, DPINJK, DPINJKB, DPINJK, DPINJKB, DPINJK, DPINJKB, DPINJK, DPINJKB )
F17WSTRR2: LINE = ( DCOL17SP1, F17COLL2, F17COLL1, F17PINJK, DIONP, &
                    DF17SP2, F17TARG, DCOL17SP1 )
F17R2:     LINE = ( MF17, QUADF17, PACKF17, COLDBYP1, F17WSTRR2, &
           COLDBYP2, 2*DIPOLE, MEDSTR )

QUADF18:  LINE = ( DBPMIN, VBPMF18, DBPMOUT, HQUADD, DQOUT )
PACKF18:  LINE = ( DPACKIN, TQDF, TSD, VDF18, DPACKU2D, TS3, DPACKOUT )
F18:       LINE = ( MF18, QUADF18, PACKF18, 4*DIPOLE )
QUADF19:  LINE = ( DBPMIN, HBPMF19, DBPMOUT, HQUADF, DQOUT )
PACKF19:  LINE = ( DPACKIN, TQFF, TSF, HDF19, DPACKU2D, TOD39S, CS1F2A, &
           DPACKOUT )
F19:       LINE = ( MF19, QUADF19, PACKF19, 4*DIPOLE )
FTEN:     LINE = ( F11, F12, F13, F14, F15, F16, F17, F18, F19 )
FTENR2:   LINE = ( F11, F12, F13, F14, F15, F16, F17R2, F18, F19 )
QUADF21:  LINE = ( DBPMIN, VBPMF21, DBPMOUT, HQUADD, DQOUT )
PACKF21:  LINE = ( DPACKIN, TQDF, TSD, VDF21, DPACKU2D, DPACKOUT )
F21:       LINE = ( MF21, QUADF21, PACKF21, 4*DIPOLE )
QUADF22:  LINE = ( DBPMIN, HBPMF22, DBPMOUT, HQUADF, DQOUT )
PACKF22:  LINE = ( DPACKIN, TQFF, TSF, HDF22, DPACKU2D,TS2,TSQ,TOF39C, &
           DPACKOUT )
F22:       LINE = ( MF22, QUADF22, PACKF22, 4*DIPOLE )
QUADF23:  LINE = ( DBPMIN, VBPMF23, DBPMOUT, HQUADD, DQOUT )
PACKF23:  LINE = ( DPACKIN, TQDF, TSD, VDF23, DPACKU2D, TOZD, CS2F2A, TQ2, &
           DPACKOUT )
F23:       LINE = ( MF23, QUADF23, PACKF23, 4*DIPOLE )
QUADF24:  LINE = ( DBPMIN, HBPMF24, DBPMOUT, HQUADF, DQOUT )
PACKF24:  LINE = ( DPACKIN, TQFF, TSF, HDF24, DPACKU2D, CS4F2A, TOD39C, &
           DPACKOUT )
F24:       LINE = ( MF24, QUADF24, PACKF24, 4*DIPOLE )
QUADF25:  LINE = ( DBPMIN, VBPMF25, DBPMOUT, HQUADD, DQOUT )
PACKF25:  LINE = ( DPIN5LOC, TQDF, TSD, VDF25, DPOUT5LOC )
F25:       LINE = ( MF25, QUADF25, PACKF25, FEEDCAN, 4*DIPOLE )
QUADF26:  LINE = ( DBPMIN, HBPMF26, DBPMOUT, HQUADF, DQOUT )
PACKF26:  LINE = ( DPACKIN, TQFF, TSF, HDF26, DPACKU2D, TOD39S, CS1F2A, TSQ, &
           DPACKOUT )
F26:       LINE = ( MF26, QUADF26, PACKF26, 4*DIPOLE )
QUADF27:  LINE = ( DBPMIN, VBPMF27, DBPMOUT, HQUADD, DQOUT )
PACKF27:  LINE = ( DPACKIN, TQDF, TSD, VDF27, DPACKU2D, TOZD, TS4, TQ4, &
           DPACKOUT )
F27:       LINE = ( MF27, QUADF27, PACKF27, 4*DIPOLE )
QUADF28:  LINE = ( DBPMIN, HBPMF28, DBPMOUT, HQUADF, DQOUT )
PACKF28:  LINE = ( DPACKIN, TQFF, TSF, HDF28, DPACKU2D, TOF39S, CS4F2A, &
           DPACKOUT )
F28:       LINE = ( MF28, QUADF28, PACKF28, 4*DIPOLE )
QUADF29:  LINE = ( DBPMIN, VBPMF29, DBPMOUT, HQUADD, DQOUT )
PACKF29:  LINE = ( DPACKIN, TQDF, TSD, VDF29, DPACKU2D, DPACKOUT )
F29:       LINE = ( MF29, QUADF29, PACKF29, 4*DIPOLE )
FTWENTY:  LINE = ( F21, F22, F23, F24, F25, F26, F27, F28, F29 )
QUADF32:  LINE = ( DBPMIN, HBPMF32, DBPMOUT, HQUADF, DQOUT )
PACKF32:  LINE = ( DPACKIN, TQFF, TSF, HDF32, DPACKU2D,TS1,TSQ,TOD39C, &
           DPACKOUT )
F32:       LINE = ( MF32, QUADF32, PACKF32, 4*DIPOLE )
QUADF33:  LINE = ( DBPMIN, VBPMF33, DBPMOUT, HQUADD, DQOUT )
PACKF33:  LINE = ( DPACKIN, TQDF, TSD, VDF33, DPACKU2D, TOZD, CS5F3A, TQF33, &
           DPACKOUT )
F33:       LINE = ( MF33, QUADF33, PACKF33, 4*DIPOLE )
QUADF34:  LINE = ( DBPMIN, HBPMF34, DBPMOUT, HQUADF, DQOUT )
PACKF34:  LINE = ( DPACKIN, TQFF, TSF, HDF34, DPACKU2D, CS1F3A, TOF39C,&
           TQF34, DPACKOUT )
F34:       LINE = ( MF34, QUADF34, PACKF34, 4*DIPOLE )
QUADF35:  LINE = ( DBPMIN, VBPMF35, DBPMOUT, HQUADD, DQOUT )
PACKF35:  LINE = ( DPIN5LOC, TQDF, TSD, VDF35, DPOUT5LOC )
F35:       LINE = ( MF35, QUADF35, PACKF35, FEEDCAN, 4*DIPOLE )
QUADF36:  LINE = ( DBPMIN, HBPMF36, DBPMOUT, HQUADF, DQOUT )
PACKF36:  LINE = ( DPACKIN, TQFF, TSF, HDF36, DPACKU2D, TOZF, TS1, TSQ, &
           DPACKOUT )
F36:       LINE = ( MF36, QUADF36, PACKF36, 4*DIPOLE )
QUADF37:  LINE = ( DBPMIN, VBPMF37, DBPMOUT, HQUADD, DQOUT )
PACKF37:  LINE = ( DPACKIN, TQDF, TSD, VDF37, DPACKU2D, TOZD, TS4, TQ4, &
           DPACKOUT )
F37:       LINE = ( MF37, QUADF37, PACKF37, 4*DIPOLE )
QUADF38:  LINE = ( DBPMIN, HBPMF38, DBPMOUT, HQUADF, DQOUT )
PACKF38:  LINE = ( DPACKIN, TQFF, TSF, HDF38, DPACKU2D, CS1F3A, DPACKOUT )
F38:       LINE = ( MF38, QUADF38, PACKF38, 4*DIPOLE )
QUADF39:  LINE = ( DBPMIN, VBPMF39, DBPMOUT, HQUADD, DQOUT )
PACKF39:  LINE = ( DPACKIN, TQDF, TSD, VDF39, DPACKU2D, DPACKOUT )
F39:       LINE = ( MF39, QUADF39, PACKF39, 4*DIPOLE )
FTHIRTY:  LINE = ( F32, F33, F34, F35, F36, F37, F38, F39 )
QUADF42:  LINE = ( DBPMIN, HBPMF42, DBPMOUT, HQUADF, DQOUT )
PACKF42:  LINE = ( DPACKIN, TQFF, TSF, HDF42, DPACKU2D, TOZF, TSQ, &
           DPACKOUT )
F42:       LINE = ( MF42, QUADF42, PACKF42, 4*DIPOLE )
QUADF43:  LINE = ( DBPMIN, VBPMF43, DBPMOUT, HQUADD, DQOUT )
PACKF43:  LINE = ( DPACKIN, TQDF, TSD, VDF43, DPACKU2D, CS2F4A, DPACKOUT )
F43:       LINE = ( MF43, QUADF43, PACKF43, 4*DIPOLE )
QUADF44:  LINE = ( DBPMIN, HBPMF44, DBPMOUT, HQUADF, DQOUT )
PACKF44:  LINE = ( DPACKIN, TQFF, TSF, HDF44, DPACKU2D, DPACKOUT )
F44:       LINE = ( MF44, QUADF44, PACKF44, 4*DIPOLE )
QUADF45:  LINE = ( DBPMIN, VBPMF45, DBPMOUT, HQUADD, DQOUT )
PACKF45:  LINE = ( DPIN5LOC, TQDF, TSD, VDF45, DPOUT5LOC )
F45:       LINE = ( MF45, QUADF45, PACKF45, FEEDCAN, 4*DIPOLE )
QUADF46:  LINE = ( DBPMIN, HBPMF46, DBPMOUT, HQUADF, DQOUT )
PACKF46:  LINE = ( DPACKIN, TQFF, TSF, HDF46, DPACKU2D, TSQ, DPACKOUT )
F46:       LINE = ( MF46, QUADF46, PACKF46, 4*DIPOLE )
QUADF47:  LINE = ( DBPMIN, VBPMF47, DBPMOUT, HQUADD, DQOUT )
PACKF47:  LINE = ( DPACKIN, TQDF, TSD, VDF47, DPACKU2D, DPACKOUT )
F47:       LINE = ( MF47, QUADF47, PACKF47, 4*DIPOLE )
QUADF48:  LINE = ( DBPMIN, HBPMF48, DBPMOUT, HQUAD5F, DQOUT )
PACKF48:  LINE = ( DPACKIN, DHQUADC, TSX, TQX, HDF48, DHQUADC, &
           DPACKU2D, DPACKOUT )
STRAIGHTF48:  LINE = ( DSTRAIGHT3 )
STRAIGHTF48FT:LINE = ( DQXR2, A0QXR, DQXR3, A0BUK, DQXR4, A0QXR, DQXR5 )
F48:       LINE = ( MF48, QUADF48, PACKF48, STRAIGHTF48, 3*DIPOLE )
F48FT:     LINE = ( MF48, QUADF48, PACKF48, STRAIGHTF48FT, 3*DIPOLE )
QUADF49:  LINE = ( DBPMIN, HBPMF49, DBPMOUT, HQUAD4D, DQOUT )
STRAIGHTF49:  LINE = ( DSTRAIGHT2 )
PACKF49:  LINE = ( DBPMIN1, VBPMF49, DBPMOUT1, DHQUADC, TSQA0, HDF49, VDF49, &
           DHQUADC, DPACKOUT1 )
F49:       LINE = ( MF49, QUADF49, STRAIGHTF49, PACKF49 )
FFORTY:   LINE = ( F42, F43, F44, F45, F46, F47, F48, F49 )
FFORTYFT: LINE = ( F42, F43, F44, F45, F46, F47, F48FT, F49 )
QUADA0U:  LINE = ( DQUAD1END, HQUAD1F, DQUAD1END )
LONGSTRA0U: LINE = ( DLONG4 )
A0UP:     LINE = ( MA0U, QUADA0U, LONGSTRA0U )
SEXTANTF:  LINE = ( F0DOWN, FTEN, FTWENTY, FTHIRTY, FFORTY, A0UP )
SEXTANTFR2:LINE = ( F0DOWNR2, FTENR2, FTWENTY, FTHIRTY, FFORTY, A0UP )
! 
! Next group is for fixed target
EXTLAMB:  LINE = (DEXTLAMBEND, DHALFLAMB, DHALFLAMB, DEXTLAMBEND)
A0LAMBS:  LINE = (MEXTLAMBU, EXTLAMB, DLAMBSEP, EXTLAMB, DLAMBSEP,&
           EXTLAMB, DLAMB3, EXTLAMB, DLAMBSEP, EXTLAMB, MEXTLAMBD )
A0UPFT:   LINE = ( MA0U, QUADA0U, DLAMB1, A0LAMBS )
SEXTANTFFT: LINE = ( F0DOWN, FTEN, FTWENTY, FTHIRTY, FFORTYFT, A0UPFT )
!
! I've deliberately left MA0 out of A0DOWNFT, because it would be in a 
!  different location than the MA0 in collider mode. 
A0DOWNFT: LINE = ( DLONG1A0, QUADA0D, COLDBYP1, DSTRAIGHT0, COLDBYP2 )
! 
QUADA0D:  LINE = ( DQUAD1END, HQUAD1D, DQUAD1END )
A0DOWN:   LINE = ( MA0, DLONG1, QUADA0D, COLDBYP1, DSTRAIGHT0, COLDBYP2 )
QUADA11:  LINE = ( DBPMIN, HBPMA11, DBPMOUT, HQUAD4F, DQOUT )
PACKA11:  LINE = ( DBPMIN1, VBPMA11, DBPMOUT1, TSQA0, DHQUADC, VDA11, HDA11, &
           DHQUADC, DPACKOUT1 )
A11:       LINE = ( MA11, QUADA11, PACKA11, 4*DIPOLE )
QUADA12:  LINE = ( DBPMIN, VBPMA12, DBPMOUT, HQUAD5D, DQOUT )
PACKA12:  LINE = ( DPACKIN, DHQUADC, TQX, TSX, VDA12, DHQUADC, DPACKU2D, TX3, &
           DPACKOUT )
A12:       LINE = ( MA12, QUADA12, PACKA12, 4*DIPOLE )
QUADA13:  LINE = ( DBPMIN, HBPMA13, DBPMOUT, HQUADF, DQOUT )
PACKA13:  LINE = ( DPACKIN, TQF, TSF, HDA13, DPACKU2D, TSQ, DPACKOUT )
A13:       LINE = ( MA13, QUADA13, PACKA13, 4*DIPOLE )
QUADA14:  LINE = ( DBPMIN, VBPMA14, DBPMOUT, HQUADD, DQOUT )
PACKA14:  LINE = ( DPACKIN, TQD, TSD, VDA14, DPACKU2D, CS2A1A, DPACKOUT )
A14:       LINE = ( MA14, QUADA14, PACKA14, 4*DIPOLE )
QUADA15:  LINE = ( DBPMIN, HBPMA15, DBPMOUT, HQUADF, DQOUT )
PACKA15:  LINE = ( DPIN5LOC, TQF, TSF, HDA15, DPOUT5LOC )
A15:       LINE = ( MA15, QUADA15, PACKA15, FEEDCAN, 4*DIPOLE )
QUADA16:  LINE = ( DBPMIN, VBPMA16, DBPMOUT, HQUADD, DQOUT )
PACKA16:  LINE = ( DPACKIN, TQD, TSD, VDA16, DPACKU2D, TX3, DPACKOUT )
A16:       LINE = ( MA16, QUADA16, PACKA16, 4*DIPOLE )
QUADA17:  LINE = ( DBPMIN, HBPMA17, DBPMOUT, HQUADF, DQOUT )
PACKA17:  LINE = ( DPACKIN, TQF, TSF, HDA17, DPACKU2D, CS3A2A, TSQ, &
           DPACKOUT )
! Next 2 lines are the old version that was in use before 1/97
!ESEPA17:  LINE = ( DSEPEND1, A17VESEP, DSEPB, ESEP, DSEPB, ESEP, DSEPB, ESEP,&
!           DSEPEND1 )
ESEPA17:  LINE = ( DSEPEND1, ESEP, DSEPB, ESEP, DSEPB, ESEP, DSEPB, A17VESEP,&
           DSEPEND1 )
A17:       LINE = ( MA17, QUADA17, PACKA17, COLDBYP1, ESEPA17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
QUADA18:  LINE = ( DBPMIN, VBPMA18, DBPMOUT, HQUADD, DQOUT )
PACKA18:  LINE = ( DPACKIN, TQD, TSD, VDA18, DPACKU2D, CS5A2A, DPACKOUT )
A18:       LINE = ( MA18, QUADA18, PACKA18, 4*DIPOLE )
QUADA19:  LINE = ( DBPMIN, HBPMA19, DBPMOUT, HQUADF, DQOUT )
PACKA19:  LINE = ( DPACKIN, TQF, TSF, HDA19, DPACKU2D, TR1, DPACKOUT )
A19:       LINE = ( MA19, QUADA19, PACKA19, 4*DIPOLE )
ATEN:     LINE = ( A11, A12, A13, A14, A15, A16, A17, A18, A19 )
QUADA21:  LINE = ( DBPMIN, VBPMA21, DBPMOUT, HQUADD, DQOUT )
PACKA21:  LINE = ( DPACKIN, TQD, TSD, VDA21, DPACKU2D, DPACKOUT )
A21:       LINE = ( MA21, QUADA21, PACKA21, 4*DIPOLE )
QUADA22:  LINE = ( DBPMIN, HBPMA22, DBPMOUT, HQUADF, DQOUT )
PACKA22:  LINE = ( DPACKIN, TQF, TSF, HDA22, DPACKU2D, TX2, TSQ, &
           DPACKOUT )
A22:       LINE = ( MA22, QUADA22, PACKA22, 4*DIPOLE )
QUADA23:  LINE = ( DBPMIN, VBPMA23, DBPMOUT, HQUADD, DQOUT )
PACKA23:  LINE = ( DPACKIN, TQD, TSD, VDA23, DPACKU2D, TOZD, DPACKOUT )
A23:       LINE = ( MA23, QUADA23, PACKA23, 4*DIPOLE )
QUADA24:  LINE = ( DBPMIN, HBPMA24, DBPMOUT, HQUADF, DQOUT )
PACKA24:  LINE = ( DPACKIN, TQF, TSF, HDA24, DPACKU2D, CS3A2A, TR2, &
           DPACKOUT )
A24:       LINE = ( MA24, QUADA24, PACKA24, 4*DIPOLE )
QUADA25:  LINE = ( DBPMIN, VBPMA25, DBPMOUT, HQUADD, DQOUT )
PACKA25:  LINE = ( DPIN5LOC, TQD, TSD, VDA25, DPOUT5LOC )
A25:       LINE = ( MA25, QUADA25, PACKA25, FEEDCAN, 4*DIPOLE )
QUADA26:  LINE = ( DBPMIN, HBPMA26, DBPMOUT, HQUADF, DQOUT )
PACKA26:  LINE = ( DPACKIN, TQF, TSF, HDA26, DPACKU2D, TX2, TSQ, &
           DPACKOUT )
A26:       LINE = ( MA26, QUADA26, PACKA26, 4*DIPOLE )
QUADA27:  LINE = ( DBPMIN, VBPMA27, DBPMOUT, HQUADD, DQOUT )
PACKA27:  LINE = ( DPACKIN, TQD, TSD, VDA27, DPACKU2D, TOZD, TX4, &
           DPACKOUT )
A27:       LINE = ( MA27, QUADA27, PACKA27, 4*DIPOLE )
QUADA28:  LINE = ( DBPMIN, HBPMA28, DBPMOUT, HQUADF, DQOUT )
PACKA28:  LINE = ( DPACKIN, TQF, TSF, HDA28, DPACKU2D, TX2, TR1, &
           DPACKOUT )
A28:       LINE = ( MA28, QUADA28, PACKA28, 4*DIPOLE )
QUADA29:  LINE = ( DBPMIN, VBPMA29, DBPMOUT, HQUADD, DQOUT )
PACKA29:  LINE = ( DPACKIN, TQD, TSD, VDA29, DPACKU2D, DPACKOUT )
A29:       LINE = ( MA29, QUADA29, PACKA29, 4*DIPOLE )
ATWENTY:  LINE = ( A21, A22, A23, A24, A25, A26, A27, A28, A29 )
QUADA32:  LINE = ( DBPMIN, HBPMA32, DBPMOUT, HQUADF, DQOUT )
PACKA32:  LINE = ( DPACKIN, TQF, TSF, HDA32, DPACKU2D, TX1, TSQ, &
           DPACKOUT )
A32:       LINE = ( MA32, QUADA32, PACKA32, 4*DIPOLE )
QUADA33:  LINE = ( DBPMIN, VBPMA33, DBPMOUT, HQUADD, DQOUT )
PACKA33:  LINE = ( DPACKIN, TQD, TSD, VDA33, DPACKU2D, TOZD, CS2A3A, &
           DPACKOUT )
A33:       LINE = ( MA33, QUADA33, PACKA33, 4*DIPOLE )
QUADA34:  LINE = ( DBPMIN, HBPMA34, DBPMOUT, HQUADF, DQOUT )
PACKA34:  LINE = ( DPACKIN, TQF, TSF, HDA34, DPACKU2D, TX1, TR2, &
           DPACKOUT )
A34:       LINE = ( MA34, QUADA34, PACKA34, 4*DIPOLE )
QUADA35:  LINE = ( DBPMIN, VBPMA35, DBPMOUT, HQUADD, DQOUT )
PACKA35:  LINE = ( DPIN5LOC, TQD, TSD, VDA35, DPOUT5LOC )
A35:       LINE = ( MA35, QUADA35, PACKA35, FEEDCAN, 4*DIPOLE )
QUADA36:  LINE = ( DBPMIN, HBPMA36, DBPMOUT, HQUADF, DQOUT )
PACKA36:  LINE = ( DPACKIN, TQF, TSF, HDA36, DPACKU2D, TOZF, CS3A3A, TSQ, &
           DPACKOUT )
A36:       LINE = ( MA36, QUADA36, PACKA36, 4*DIPOLE )
QUADA37:  LINE = ( DBPMIN, VBPMA37, DBPMOUT, HQUADD, DQOUT )
PACKA37:  LINE = ( DPACKIN, TQD, TSD, VDA37, DPACKU2D, TOZD, CS5A3A, &
           DPACKOUT )
A37:       LINE = ( MA37, QUADA37, PACKA37, 4*DIPOLE )
QUADA38:  LINE = ( DBPMIN, HBPMA38, DBPMOUT, HQUADF, DQOUT )
PACKA38:  LINE = ( DPACKIN, TQF, TSF, HDA38, DPACKU2D, TX1, DPACKOUT )
A38:       LINE = ( MA38, QUADA38, PACKA38, 4*DIPOLE )
QUADA39:  LINE = ( DBPMIN, VBPMA39, DBPMOUT, HQUADD, DQOUT )
PACKA39:  LINE = ( DPACKIN, TQD, TSD, VDA39, DPACKU2D, DPACKOUT )
A39:       LINE = ( MA39, QUADA39, PACKA39, 4*DIPOLE )
ATHIRTY:  LINE = ( A32, A33, A34, A35, A36, A37, A38, A39 )
QUADA42:  LINE = ( DBPMIN, HBPMA42, DBPMOUT, HQUADF, DQOUT )
PACKA42:  LINE = ( DPACKIN, TQF, TSF, HDA42, DPACKU2D, TOZF, TSQ, &
           DPACKOUT )
A42:       LINE = ( MA42, QUADA42, PACKA42, 4*DIPOLE )
QUADA43:  LINE = ( DBPMIN, VBPMA43, DBPMOUT, HQUADD, DQOUT )
PACKA43:  LINE = ( DPACKIN2, CAQ0, DPACKU2D2, TSD, VDA43, DPACKOUT2 )
PACKA43FT:LINE = ( DPACKIN2, CAQ0, DTQIN, TQD, TSD, VDA43, DTQOUT )
A43:       LINE = ( MA43, QUADA43, PACKA43, 4*DIPOLE )
A43FT:     LINE = ( MA43, QUADA43, PACKA43FT, 4*DIPOLE )
QUADA44:  LINE = ( DBPMIN, HBPMA44, DBPMOUT, HQUADF, DQOUT )
PACKA44:  LINE = ( DPACKIN2, CAQ9, DPACKU2D2, TSF, HDA44, DPACKOUT2 )
PACKA44FT:LINE = ( DPACKIN2, CAQ9, DTQIN, TQF, TSF, HDA44, DTQOUT )
A44:       LINE = ( MA44, QUADA44, PACKA44, 4*DIPOLE )
A44FT:     LINE = ( MA44, QUADA44, PACKA44FT, 4*DIPOLE )
QUADA45:  LINE = ( DBPMIN, VBPMA45, DBPMOUT, HQUADD, DQOUT )
PACKA45:  LINE = ( DPIN5LOC, TQA45, TSD, VDA45, DPOUT5LOC )
PACKA45FT:LINE = ( DPIN5LOC, TQD, TSD, VDA45, DPOUT5LOC )
A45:       LINE = ( MA45, QUADA45, PACKA45, FEEDCAN, 4*DIPOLE )
A45FT:     LINE = ( MA45, QUADA45, PACKA45FT, FEEDCAN, 4*DIPOLE )
QUADA46:  LINE = ( DBPMIN, HBPMA46, DBPMOUT, HQUADF, DQOUT )
PACKA46:  LINE = ( DPACKIN2, CAQ7, DPACKU2D2, TSF, HDA46, DPACKOUT2 )
PACKA46FT:LINE = ( DPACKIN2, CAQ7, DTQIN, TQF, TSF, HDA46, DTQOUT )
A46:       LINE = ( MA46, QUADA46, PACKA46, 4*DIPOLE )
A46FT:     LINE = ( MA46, QUADA46, PACKA46FT, 4*DIPOLE )
QUADA47:  LINE = ( DBPMIN, VBPMA47, DBPMOUT, HQUADB6D, DQOUT )
PACKA47:  LINE = ( DPACKIN3, CB0Q6D, DPACKU2D3, CB0QT6D, TSD, VDA47, CB0QT6D,&
           DPACKOUT3 )
PACKA47FT:LINE = ( DPACKIN3, CB0Q6D, DPACKU2D3, TQD, TSD, VDA47, &
           DPACKOUT3 )
A47:       LINE = ( MA47, QUADA47, PACKA47, 4*DIPOLE )
A47FT:     LINE = ( MA47, QUADA47, PACKA47FT, 4*DIPOLE )
QUADA48:  LINE = ( DLB6, CB0Q5D, DLB5 )
PACKA48A: LINE = ( DLB4, VDA48, HDA48C, DLB3, HBPMA48, DLB2, VBPMA48, DLB1 )
PACKA48B: LINE = ( DPIN5LOC, DHQUADC, HDA48, TSX, TQX, DHQUADC, DPOUT5LOC )
STRAIGHTA48:  LINE = ( DSTRAIGHT4 )
PACKA48C: LINE = ( DBPMIN1, DBPMOUT1, DHQUADC, TR3, DHQUADC, DPACKOUT1 )
A48:       LINE = ( MA48, QUADA48, PACKA48A, PACKA48B, COLDBYP2, &
           STRAIGHTA48, COLDBYP1, PACKA48C, 3*DIPOLE )
QUADA49:  LINE = ( DLB6, CB0Q1D, DLB5 )
PACKA49:  LINE = ( DLB4, HDA49, VDA49, TSQA4, DLB3, HBPMA49, DLB2, VBPMA49, &
           DLB1 )
A49:       LINE = ( MA49, QUADA49, PACKA49 )
AFORTY:   LINE = ( A42, A43, A44, A45, A46, A47, A48, A49 )
AFORTYFT:   LINE = ( A42, A43FT, A44FT, A45FT, A46FT, A47FT, A48, A49 )
ESEPB0U:  LINE = ( DSEPEND, A49HESEP, DSEPB, A49VESEP, DSEPB, A49VESEP, &
           DSEPEND )
TRIPLETB0U: LINE = ( DTRIPOUT, CB0Q2F, DTRIPB, CB0Q3D, DTRIPB, &
           CB0Q4F, DTRIPIN, HBPMB0U, DV2H, VBPMB0U )
B0UP:     LINE = ( MB0U, COLDBYP2, ESEPB0U, COLDBYP1, FEEDCAN, &
           TRIPLETB0U, DLONG2 )
SEXTANTA:  LINE = ( A0DOWN, ATEN, ATWENTY, ATHIRTY, AFORTY, B0UP )
SEXTANTAFT:LINE = ( A0DOWNFT, ATEN, ATWENTY, ATHIRTY, AFORTYFT, B0UP )
TRIPLETB0D: LINE = ( VBPMB0D, DV2H, HBPMB0D, DTRIPIN, CB0Q4D, DTRIPB, &
           CB0Q3F, DTRIPB, CB0Q2D, DTRIPOUT )
ESEPB0D:  LINE = ( DSEPEND, B11HESEP, DSEPB, B11HESEP, DSEPB, B11VESEP, &
           DSEPEND )
B0DOWN:   LINE = ( MB0, DLONG2, TRIPLETB0D, FEEDCAN, COLDBYP1, &
           ESEPB0D, COLDBYP2 )
PACKB11:  LINE = ( DLB1, VBPMB11, DLB2, HBPMB11, DLB3, HDB11, VDB11, TSQB1, &
           DLB4 )
QUADB11:  LINE = ( DLB5, CB0Q1F, DLB6 )
SPOOLB11: LINE = ( DLB7 )
B11:       LINE = ( MB11, PACKB11, QUADB11, SPOOLB11, 4*DIPOLE )
QUADB12:  LINE = ( DLB6, CB0Q5F, DLB5 )
PACKB12:  LINE = ( DLB4, VDB12, HDB12, DLB3, HBPMB12, DLB2, VBPMB12, DLB1 )
B12:       LINE = ( MB12, QUADB12, PACKB12, 4*DIPOLE )
QUADB13:  LINE = ( DBPMIN, HBPMB13, DBPMOUT, HQUADB6F, DQOUT )
PACKB13:  LINE = ( DPACKIN3, CB0Q6F, DPACKU2D3, CB0QT6F, TSF, HDB13, CB0QT6F, &
           DPACKOUT3 )
PACKB13FT:LINE = ( DPACKIN3, CB0Q6F, DPACKU2D3, TQF, TSF, HDB13, &
           DPACKOUT3 )
B13:       LINE = ( MB13, QUADB13, PACKB13, 4*DIPOLE )
B13FT:     LINE = ( MB13, QUADB13, PACKB13FT, 4*DIPOLE )
QUADB14:  LINE = ( DBPMIN, VBPMB14, DBPMOUT, HQUADD, DQOUT )
PACKB14:  LINE = ( DPACKIN2, CBQ7, DPACKU2D2, TSD, VDB14, DPACKOUT2 )
PACKB14FT:LINE = ( DPACKIN2, CBQ7, DTQIN, TQD, TSD, VDB14, DTQOUT )
B14:       LINE = ( MB14, QUADB14, PACKB14, 4*DIPOLE )
B14FT:     LINE = ( MB14, QUADB14, PACKB14FT, 4*DIPOLE )
QUADB15:  LINE = ( DBPMIN, HBPMB15, DBPMOUT, HQUADF, DQOUT )
PACKB15:  LINE = ( DPIN5LOC, TQB15, TSF, HDB15, DPOUT5LOC )
PACKB15FT:LINE = ( DPIN5LOC, TQF, TSF, HDB15, DPOUT5LOC )
B15:       LINE = ( MB15, QUADB15, PACKB15, FEEDCAN, 4*DIPOLE )
B15FT:     LINE = ( MB15, QUADB15, PACKB15FT, FEEDCAN, 4*DIPOLE )
QUADB16:  LINE = ( DBPMIN, VBPMB16, DBPMOUT, HQUADD, DQOUT )
PACKB16:  LINE = ( DPACKIN2, CBQ9, DPACKU2D2, TSD, VDB16, DPACKOUT2 )
PACKB16FT:LINE = ( DPACKIN2, CBQ9, DTQIN, TQD, TSD, VDB16, DTQOUT )
B16:       LINE = ( MB16, QUADB16, PACKB16, 4*DIPOLE )
B16FT:     LINE = ( MB16, QUADB16, PACKB16FT, 4*DIPOLE )
QUADB17:  LINE = ( DBPMIN, HBPMB17, DBPMOUT, HQUADF, DQOUT )
PACKB17:  LINE = ( DPACKIN2, CBQ0, DPACKU2D2, TSF, HDB17, DPACKOUT2 )
PACKB17FT:LINE = ( DPACKIN2, CBQ0, DTQIN, TQF, TSF, HDB17, DTQOUT )
ESEPB17:  LINE = ( DSEPEND1, B17HESEP, DSEPB, B17HESEP, DSEPB, B17HESEP, &
           DSEPB, B17HESEP, DSEPEND1 )
B17:       LINE = ( MB17, QUADB17, PACKB17, COLDBYP1, ESEPB17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
B17FT:     LINE = ( MB17, QUADB17, PACKB17FT, COLDBYP1, ESEPB17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
QUADB18:  LINE = ( DBPMIN, VBPMB18, DBPMOUT, HQUADD, DQOUT )
PACKB18:  LINE = ( DPACKIN, TQD, TSD, VDB18, DPACKU2D, DPACKOUT )
B18:       LINE = ( MB18, QUADB18, PACKB18, 4*DIPOLE )
QUADB19:  LINE = ( DBPMIN, HBPMB19, DBPMOUT, HQUADF, DQOUT )
PACKB19:  LINE = ( DPACKIN, TQF, TSF, HDB19, DPACKU2D, CS1B1A,TQF39S,TOD39S, &
           DPACKOUT )
B19:       LINE = ( MB19, QUADB19, PACKB19, 4*DIPOLE )
BTEN:     LINE = ( B11, B12, B13, B14, B15, B16, B17, B18, B19 )
BTENFT:   LINE = ( B11, B12, B13FT, B14FT, B15FT, B16FT, B17FT, B18, B19 )
QUADB21:  LINE = ( DBPMIN, VBPMB21, DBPMOUT, HQUADD, DQOUT )
PACKB21:  LINE = ( DPACKIN, TQD, TSD, VDB21, DPACKU2D, DPACKOUT )
B21:       LINE = ( MB21, QUADB21, PACKB21, 4*DIPOLE )
QUADB22:  LINE = ( DBPMIN, HBPMB22, DBPMOUT, HQUADF, DQOUT )
PACKB22:  LINE = ( DPACKIN, TQF, TSF, HDB22, DPACKU2D, TSQ, TOF39C, &
           DPACKOUT )
B22:       LINE = ( MB22, QUADB22, PACKB22, 4*DIPOLE )
QUADB23:  LINE = ( DBPMIN, VBPMB23, DBPMOUT, HQUADD, DQOUT )
PACKB23:  LINE = ( DPACKIN, TQD, TSD, VDB23, DPACKU2D, TOZD, TQ2, &
           DPACKOUT )
B23:       LINE = ( MB23, QUADB23, PACKB23, 4*DIPOLE )
QUADB24:  LINE = ( DBPMIN, HBPMB24, DBPMOUT, HQUADF, DQOUT )
PACKB24:  LINE = ( DPACKIN, TQF, TSF, HDB24, DPACKU2D, TQF39C, TOD39C, &
           DPACKOUT )
B24:       LINE = ( MB24, QUADB24, PACKB24, 4*DIPOLE )
QUADB25:  LINE = ( DBPMIN, VBPMB25, DBPMOUT, HQUADD, DQOUT )
PACKB25:  LINE = ( DPIN5LOC, TQD, TSD, VDB25, DPOUT5LOC )
B25:       LINE = ( MB25, QUADB25, PACKB25, FEEDCAN, 4*DIPOLE )
QUADB26:  LINE = ( DBPMIN, HBPMB26, DBPMOUT, HQUADF, DQOUT )
PACKB26:  LINE = ( DPACKIN, TQF, TSF, HDB26, DPACKU2D, TOD39S, TSQ, &
           DPACKOUT )
B26:       LINE = ( MB26, QUADB26, PACKB26, 4*DIPOLE )
QUADB27:  LINE = ( DBPMIN, VBPMB27, DBPMOUT, HQUADD, DQOUT )
PACKB27:  LINE = ( DPACKIN, TQD, TSD, VDB27, DPACKU2D, TOZD, TQ4, &
           DPACKOUT )
B27:       LINE = ( MB27, QUADB27, PACKB27, 4*DIPOLE )
QUADB28:  LINE = ( DBPMIN, HBPMB28, DBPMOUT, HQUADF, DQOUT )
PACKB28:  LINE = ( DPACKIN, TQF, TSF, HDB28, DPACKU2D, TOF39S, TQD39S, &
           DPACKOUT )
B28:       LINE = ( MB28, QUADB28, PACKB28, 4*DIPOLE )
QUADB29:  LINE = ( DBPMIN, VBPMB29, DBPMOUT, HQUADD, DQOUT )
PACKB29:  LINE = ( DPACKIN, TQD, TSD, VDB29, DPACKU2D, DPACKOUT )
B29:       LINE = ( MB29, QUADB29, PACKB29, 4*DIPOLE )
BTWENTY:  LINE = ( B21, B22, B23, B24, B25, B26, B27, B28, B29 )
QUADB32:  LINE = ( DBPMIN, HBPMB32, DBPMOUT, HQUADF, DQOUT )
PACKB32:  LINE = ( DPACKIN, TQF, TSF, HDB32, DPACKU2D, TSQ, TOD39C, DPACKOUT )
B32:       LINE = ( MB32, QUADB32, PACKB32, 4*DIPOLE )
QUADB33:  LINE = ( DBPMIN, VBPMB33, DBPMOUT, HQUADD, DQOUT )
PACKB33:  LINE = ( DPACKIN, TQD, TSD, VDB33, DPACKU2D, TOZD, TQ2, &
           DPACKOUT )
B33:       LINE = ( MB33, QUADB33, PACKB33, 4*DIPOLE )
QUADB34:  LINE = ( DBPMIN, HBPMB34, DBPMOUT, HQUADF, DQOUT )
PACKB34:  LINE = ( DPACKIN, TQF, TSF, HDB34, DPACKU2D, TQD39C, TOF39C, &
           DPACKOUT )
B34:       LINE = ( MB34, QUADB34, PACKB34, 4*DIPOLE )
QUADB35:  LINE = ( DBPMIN, VBPMB35, DBPMOUT, HQUADD, DQOUT )
PACKB35:  LINE = ( DPIN5LOC, TQD, TSD, VDB35, DPOUT5LOC )
B35:       LINE = ( MB35, QUADB35, PACKB35, FEEDCAN, 4*DIPOLE )
QUADB36:  LINE = ( DBPMIN, HBPMB36, DBPMOUT, HQUADF, DQOUT )
PACKB36:  LINE = ( DPACKIN, TQF, TSF, HDB36, DPACKU2D, TOZF, TSQ, &
           DPACKOUT )
B36:       LINE = ( MB36, QUADB36, PACKB36, 4*DIPOLE )
QUADB37:  LINE = ( DBPMIN, VBPMB37, DBPMOUT, HQUADD, DQOUT )
PACKB37:  LINE = ( DPACKIN, TQD, TSD, VDB37, DPACKU2D, TOZD, TQ4, &
           DPACKOUT )
B37:       LINE = ( MB37, QUADB37, PACKB37, 4*DIPOLE )
QUADB38:  LINE = ( DBPMIN, HBPMB38, DBPMOUT, HQUADF, DQOUT )
PACKB38:  LINE = ( DPACKIN, TQF, TSF, HDB38, DPACKU2D, CS1B3A, DPACKOUT )
B38:       LINE = ( MB38, QUADB38, PACKB38, 4*DIPOLE )
QUADB39:  LINE = ( DBPMIN, VBPMB39, DBPMOUT, HQUADD, DQOUT )
PACKB39:  LINE = ( DPACKIN, TQD, TSD, VDB39, DPACKU2D, DPACKOUT )
B39:       LINE = ( MB39, QUADB39, PACKB39, 4*DIPOLE )
BTHIRTY:  LINE = ( B32, B33, B34, B35, B36, B37, B38, B39 )
QUADB42:  LINE = ( DBPMIN, HBPMB42, DBPMOUT, HQUADF, DQOUT )
PACKB42:  LINE = ( DPACKIN, TQF, TSF, HDB42, DPACKU2D, TOZF, TSQ, &
           DPACKOUT )
B42:       LINE = ( MB42, QUADB42, PACKB42, 4*DIPOLE )
QUADB43:  LINE = ( DBPMIN, VBPMB43, DBPMOUT, HQUADD, DQOUT )
PACKB43:  LINE = ( DPACKIN, TQD, TSD, VDB43, DPACKU2D, CS2B4A, DPACKOUT )
B43:       LINE = ( MB43, QUADB43, PACKB43, 4*DIPOLE )
QUADB44:  LINE = ( DBPMIN, HBPMB44, DBPMOUT, HQUADF, DQOUT )
PACKB44:  LINE = ( DPACKIN, TQF, TSF, HDB44, DPACKU2D, DPACKOUT )
B44:       LINE = ( MB44, QUADB44, PACKB44, 4*DIPOLE )
QUADB45:  LINE = ( DBPMIN, VBPMB45, DBPMOUT, HQUADD, DQOUT )
PACKB45:  LINE = ( DPIN5LOC, TQD, TSD, VDB45, DPOUT5LOC )
B45:       LINE = ( MB45, QUADB45, PACKB45, FEEDCAN, 4*DIPOLE )
QUADB46:  LINE = ( DBPMIN, HBPMB46, DBPMOUT, HQUADF, DQOUT )
PACKB46:  LINE = ( DPACKIN, TQF, TSF, HDB46, DPACKU2D, TSQ, DPACKOUT )
B46:       LINE = ( MB46, QUADB46, PACKB46, 4*DIPOLE )
QUADB47:  LINE = ( DBPMIN, VBPMB47, DBPMOUT, HQUADD, DQOUT )
PACKB47:  LINE = ( DPACKIN, TQD, TSD, VDB47, DPACKU2D, CS2B4A, DPACKOUT )
B47:       LINE = ( MB47, QUADB47, PACKB47, 4*DIPOLE )
QUADB48:  LINE = ( DBPMIN, HBPMB48, DBPMOUT, HQUAD3F, DQOUT )
PACKB48:  LINE = ( DPACKIN, DHQUADC, TSX, TQX, HDB48, DHQUADC, &
           DPACKU2D, DPACKOUT )
STRAIGHTB48:  LINE = ( DSTRAIGHT7 )
HDIPOLE:  LINE = ( DBENDEND, BENDQ, HBEND, BENDQ, DBENDEND )
B48:       LINE = ( MB48, QUADB48, PACKB48, STRAIGHTB48, HDIPOLE, 2*DIPOLE )
QUADB49:  LINE = ( DBPMIN, HBPMB49, DBPMOUT, HQUAD2F, DQOUT1 )
STRAIGHTB49:  LINE = ( DSTRAIGHT5 )
PACKB49:  LINE = ( DBPMIN1, VBPMB49, DBPMOUT1, DHQUADC, TR3, VDB49, HDB49, &
           DHQUADC, DPACKOUT1 )
B49:       LINE = ( MB49, QUADB49, COLDBYP2, STRAIGHTB49, COLDBYP1, PACKB49 )
BFORTY:   LINE = ( B42, B43, B44, B45, B46, B47, B48, B49 )
QUADC0U:  LINE = ( DQUAD1END, HQUAD1D, DQUAD1END )
LAMB:     LINE = ( DLAMBEND, LAMBBEND, DLAMBEND )
LONGSTRC0U: LINE = ( DC0U1, LAMB, LAMB, LAMB, DC0U2 )
C0UP:     LINE = ( MC0U, QUADC0U, LONGSTRC0U )
SEXTANTB:  LINE = ( B0DOWN, BTEN, BTWENTY, BTHIRTY, BFORTY, C0UP )
SEXTANTBFT:LINE = ( B0DOWN, BTENFT, BTWENTY, BTHIRTY, BFORTY, C0UP )
CMAG:     LINE = ( DCMAGEND, CMAGBEND, DCMAGEND )
LONGSTRC0D: LINE = ( DC0D1, CMAG, CMAG, DLONG3 )
COLLIMC0: LINE = ( DCOLLIM, DCOLLOUT )
QUADC0D:  LINE = ( DQUAD1END, HQUAD1F, DQUAD1END )
STRAIGHTC0D:  LINE = ( DSTRAIGHT1 )
C0DOWN:   LINE = ( MC0, LONGSTRC0D, COLLIMC0, QUADC0D, COLDBYP1, &
           STRAIGHTC0D, COLDBYP2 )
QUADC11:  LINE = ( DBPMIN, HBPMC11, DBPMOUT, HQUAD2D, DQOUT1 )
PACKC11:  LINE = ( DBPMIN1, VBPMC11, DBPMOUT1, DHQUADC, TR3, HDC11, VDC11, &
           DHQUADC, DPACKOUT1 )
SLPDIPOLE:LINE = ( DBENDEND, BENDQ, MPSYNC, BEND, BENDQ, DBENDEND )
SLPBHDIPOLE: LINE = ( DBENDEND, BENDQ, HBEND, MPBSYNC, BENDQ, DBENDEND )
C11:       LINE = ( MC11, QUADC11, PACKC11, SLPDIPOLE, DSYNCLIGHT, &
           SLPBHDIPOLE, 2*DIPOLE )
QUADC12:  LINE = ( DBPMIN, VBPMC12, DBPMOUT, HQUAD3D, DQOUT )
PACKC12:  LINE = ( DPACKIN, DHQUADC, TSX, TQX, VDC12, TS3, DHQUADC, &
           DPACKU2D, DPACKOUT )
C12:       LINE = ( MC12, QUADC12, PACKC12, 4*DIPOLE )
QUADC13:  LINE = ( DBPMIN, HBPMC13, DBPMOUT, HQUADF, DQOUT )
PACKC13:  LINE = ( DPACKIN, TQF, TSF, HDC13, DPACKU2D, TSQ, DPACKOUT )
C13:       LINE = ( MC13, QUADC13, PACKC13, 4*DIPOLE )
QUADC14:  LINE = ( DBPMIN, VBPMC14, DBPMOUT, HQUADD, DQOUT )
PACKC14:  LINE = ( DPACKIN, TQD, TSD, VDC14, DPACKU2D, TS3, DPACKOUT )
C14:       LINE = ( MC14, QUADC14, PACKC14, 4*DIPOLE )
QUADC15:  LINE = ( DBPMIN, HBPMC15, DBPMOUT, HQUADF, DQOUT )
PACKC15:  LINE = ( DPIN5LOC, TQF, TSF, HDC15, DPOUT5LOC )
C15:       LINE = ( MC15, QUADC15, PACKC15, FEEDCAN, 4*DIPOLE )
QUADC16:  LINE = ( DBPMIN, VBPMC16, DBPMOUT, HQUADD, DQOUT )
PACKC16:  LINE = ( DPACKIN, TQD, TSD, VDC16, DPACKU2D, TS3, DPACKOUT )
C16:       LINE = ( MC16, QUADC16, PACKC16, 4*DIPOLE )
QUADC17:  LINE = ( DBPMIN, HBPMC17, DBPMOUT, HQUADF, DQOUT )
PACKC17:  LINE = ( DPACKIN, TQF, TSF, HDC17, DPACKU2D, TOD39S, TSQ, &
           DPACKOUT )
ESEPC17:  LINE = ( DSEPEND1, C17VESEP, DSEPB, C17VESEP, DSEPB, C17VESEP, &
           DSEPB, C17VESEP, DSEPEND1 )
C17:       LINE = ( MC17, QUADC17, PACKC17, COLDBYP1, ESEPC17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
QUADC18:  LINE = ( DBPMIN, VBPMC18, DBPMOUT, HQUADD, DQOUT )
PACKC18:  LINE = ( DPACKIN, TQD, TSD, VDC18, DPACKU2D, TS3, DPACKOUT )
C18:       LINE = ( MC18, QUADC18, PACKC18, 4*DIPOLE )
QUADC19:  LINE = ( DBPMIN, HBPMC19, DBPMOUT, HQUADF, DQOUT )
PACKC19:  LINE = ( DPACKIN, TQF, TSF, HDC19, DPACKU2D, TOF39S, CS4C2A,TQD39S,&
           DPACKOUT )
C19:       LINE = ( MC19, QUADC19, PACKC19, 4*DIPOLE )
CTEN:     LINE = ( C11, C12, C13, C14, C15, C16, C17, C18, C19 )
QUADC21:  LINE = ( DBPMIN, VBPMC21, DBPMOUT, HQUADD, DQOUT )
PACKC21:  LINE = ( DPACKIN, TQD, TSD, VDC21, DPACKU2D, DPACKOUT )
C21:       LINE = ( MC21, QUADC21, PACKC21, 4*DIPOLE )
QUADC22:  LINE = ( DBPMIN, HBPMC22, DBPMOUT, HQUADF, DQOUT )
PACKC22:  LINE = ( DPACKIN, TQF, TSF, HDC22, DPACKU2D,CS4C2B,TSQ,TOD39C,&
           DPACKOUT )
C22:       LINE = ( MC22, QUADC22, PACKC22, 4*DIPOLE )
QUADC23:  LINE = ( DBPMIN, VBPMC23, DBPMOUT, HQUADD, DQOUT )
PACKC23:  LINE = ( DPACKIN, TQD, TSD, VDC23, DPACKU2D, TOZD, TS4, TQ2, &
           DPACKOUT )
C23:       LINE = ( MC23, QUADC23, PACKC23, 4*DIPOLE )
QUADC24:  LINE = ( DBPMIN, HBPMC24, DBPMOUT, HQUADF, DQOUT )
PACKC24:  LINE = ( DPACKIN, TQF, TSF, HDC24,DPACKU2D,CS1C2A,TOF39C,TQD39C,&
           DPACKOUT )
C24:       LINE = ( MC24, QUADC24, PACKC24, 4*DIPOLE )
QUADC25:  LINE = ( DBPMIN, VBPMC25, DBPMOUT, HQUADD, DQOUT )
PACKC25:  LINE = ( DPIN5LOC, TQD, TSD, VDC25, DPOUT5LOC )
C25:       LINE = ( MC25, QUADC25, PACKC25, FEEDCAN, 4*DIPOLE )
QUADC26:  LINE = ( DBPMIN, HBPMC26, DBPMOUT, HQUADF, DQOUT )
PACKC26:  LINE = ( DPACKIN, TQF, TSF, HDC26, DPACKU2D, TOF39S, CS4C2A, TSQ, &
           DPACKOUT )
C26:       LINE = ( MC26, QUADC26, PACKC26, 4*DIPOLE )
QUADC27:  LINE = ( DBPMIN, VBPMC27, DBPMOUT, HQUADD, DQOUT )
PACKC27:  LINE = ( DPACKIN, TQD, TSD, VDC27, DPACKU2D, TOZD, CS2C3A, TQ4, &
           DPACKOUT )
C27:       LINE = ( MC27, QUADC27, PACKC27, 4*DIPOLE )
QUADC28:  LINE = ( DBPMIN, HBPMC28, DBPMOUT, HQUADF, DQOUT )
PACKC28:  LINE = ( DPACKIN, TQF, TSF, HDC28, DPACKU2D, TOD39S, CS4C2B,TQF39S,&
           DPACKOUT )
C28:       LINE = ( MC28, QUADC28, PACKC28, 4*DIPOLE )
QUADC29:  LINE = ( DBPMIN, VBPMC29, DBPMOUT, HQUADD, DQOUT )
PACKC29:  LINE = ( DPACKIN, TQD, TSD, VDC29, DPACKU2D, DPACKOUT )
C29:       LINE = ( MC29, QUADC29, PACKC29, 4*DIPOLE )
CTWENTY:  LINE = ( C21, C22, C23, C24, C25, C26, C27, C28, C29 )
QUADC32:  LINE = ( DBPMIN, HBPMC32, DBPMOUT, HQUADF, DQOUT )
PACKC32:  LINE = ( DPACKIN, TQF, TSF, HDC32, DPACKU2D,CS1C2A,TSQ,TOF39C, &
           DPACKOUT )
C32:       LINE = ( MC32, QUADC32, PACKC32, 4*DIPOLE )
QUADC33:  LINE = ( DBPMIN, VBPMC33, DBPMOUT, HQUADD, DQOUT )
PACKC33:  LINE = ( DPACKIN, TQD, TSD, VDC33, DPACKU2D, TOZD, CS2C3A, TQ2, &
           DPACKOUT )
C33:       LINE = ( MC33, QUADC33, PACKC33, 4*DIPOLE )
QUADC34:  LINE = ( DBPMIN, HBPMC34, DBPMOUT, HQUADF, DQOUT )
PACKC34:  LINE = ( DPACKIN, TQF, TSF, HDC34, DPACKU2D,TS1,TOD39C,TQF39C, &
           DPACKOUT )
C34:       LINE = ( MC34, QUADC34, PACKC34, 4*DIPOLE )
QUADC35:  LINE = ( DBPMIN, VBPMC35, DBPMOUT, HQUADD, DQOUT )
PACKC35:  LINE = ( DPIN5LOC, TQD, TSD, VDC35, DPOUT5LOC )
C35:       LINE = ( MC35, QUADC35, PACKC35, FEEDCAN, 4*DIPOLE )
QUADC36:  LINE = ( DBPMIN, HBPMC36, DBPMOUT, HQUADF, DQOUT )
PACKC36:  LINE = ( DPACKIN, TQF, TSF, HDC36, DPACKU2D, TOZF, TS1, TSQ, &
           DPACKOUT )
C36:       LINE = ( MC36, QUADC36, PACKC36, 4*DIPOLE )
QUADC37:  LINE = ( DBPMIN, VBPMC37, DBPMOUT, HQUADD, DQOUT )
PACKC37:  LINE = ( DPACKIN, TQD, TSD, VDC37, DPACKU2D, TOZD, TS4, TQ4, &
           DPACKOUT )
C37:       LINE = ( MC37, QUADC37, PACKC37, 4*DIPOLE )
QUADC38:  LINE = ( DBPMIN, HBPMC38, DBPMOUT, HQUADF, DQOUT )
PACKC38:  LINE = ( DPACKIN, TQF, TSF, HDC38, DPACKU2D, TS1, DPACKOUT )
C38:       LINE = ( MC38, QUADC38, PACKC38, 4*DIPOLE )
QUADC39:  LINE = ( DBPMIN, VBPMC39, DBPMOUT, HQUADD, DQOUT )
PACKC39:  LINE = ( DPACKIN, TQD, TSD, VDC39, DPACKU2D, DPACKOUT )
C39:       LINE = ( MC39, QUADC39, PACKC39, 4*DIPOLE )
CTHIRTY:  LINE = ( C32, C33, C34, C35, C36, C37, C38, C39 )
QUADC42:  LINE = ( DBPMIN, HBPMC42, DBPMOUT, HQUADF, DQOUT )
PACKC42:  LINE = ( DPACKIN, TQF, TSF, HDC42, DPACKU2D, TOZF, TSQ, &
           DPACKOUT )
C42:       LINE = ( MC42, QUADC42, PACKC42, 4*DIPOLE )
QUADC43:  LINE = ( DBPMIN, VBPMC43, DBPMOUT, HQUADD, DQOUT )
PACKC43:  LINE = ( DPACKIN2, CCQ0, DPACKU2D2, TSD, VDC43, DPACKOUT2 )
PACKC43FT:LINE = ( DPACKIN2, CCQ0, DTQIN, TQD, TSD, VDC43, DTQOUT )
C43:       LINE = ( MC43, QUADC43, PACKC43, 4*DIPOLE )
C43FT:     LINE = ( MC43, QUADC43, PACKC43FT, 4*DIPOLE )
QUADC44:  LINE = ( DBPMIN, HBPMC44, DBPMOUT, HQUADF, DQOUT )
PACKC44:  LINE = ( DPACKIN2, CCQ9, DPACKU2D2, TSF, HDC44, DPACKOUT2 )
PACKC44FT:LINE = ( DPACKIN2, CCQ9, DTQIN, TQF, TSF, HDC44, DTQOUT )
C44:       LINE = ( MC44, QUADC44, PACKC44, 4*DIPOLE )
C44FT:     LINE = ( MC44, QUADC44, PACKC44FT, 4*DIPOLE )
QUADC45:  LINE = ( DBPMIN, VBPMC45, DBPMOUT, HQUADD, DQOUT )
PACKC45:  LINE = ( DPIN5LOC, TQC45, TSD, VDC45, DPOUT5LOC )
PACKC45FT:LINE = ( DPIN5LOC, TQD, TSD, VDC45, DPOUT5LOC )
C45:       LINE = ( MC45, QUADC45, PACKC45, FEEDCAN, 4*DIPOLE )
C45FT:     LINE = ( MC45, QUADC45, PACKC45FT, FEEDCAN, 4*DIPOLE )
QUADC46:  LINE = ( DBPMIN, HBPMC46, DBPMOUT, HQUADF, DQOUT )
PACKC46:  LINE = ( DPACKIN2, CCQ7, DPACKU2D2, TSF, HDC46, DPACKOUT2 )
PACKC46FT:LINE = ( DPACKIN2, CCQ7, DTQIN, TQF, TSF, HDC46, DTQOUT )
C46:       LINE = ( MC46, QUADC46, PACKC46, 4*DIPOLE )
C46FT:     LINE = ( MC46, QUADC46, PACKC46FT, 4*DIPOLE )
QUADC47:  LINE = ( DBPMIN, VBPMC47, DBPMOUT, HQUADD6D, DQOUT )
PACKC47:  LINE = ( DPACKIN3, CD0Q6D, DPACKU2D3, CD0QT6D, TSD, VDC47, CD0QT6D, &
           DPACKOUT3 )
PACKC47FT:LINE = ( DPACKIN3, CD0Q6D, DPACKU2D3, TQD, TSD, VDC47, &
           DPACKOUT3 )
C47:       LINE = ( MC47, QUADC47, PACKC47, 4*DIPOLE )
C47FT:     LINE = ( MC47, QUADC47, PACKC47FT, 4*DIPOLE )
QUADC48:  LINE = ( DLB6, CD0Q5D, DLB5 )
PACKC48A: LINE = ( DLB4, VDC48, HDC48C, DLB3, HBPMC48, DLB2, VBPMC48, DLB1 )
PACKC48B: LINE = ( DPIN5LOC, DHQUADC, HDC48, TSX, TQX, DHQUADC, DPOUT5LOC )
STRAIGHTC48:  LINE = ( DSTRAIGHT4 )
STRAIGHTC48FT:LINE = ( D0QXR, DQXR1, D0QXR, DQXRFILL )
PACKC48C: LINE = ( DBPMIN1, DBPMOUT1, DHQUADC, DHQUADC, DPACKOUT1 )
C48:       LINE = ( MC48, QUADC48, PACKC48A, PACKC48B, COLDBYP2, &
           STRAIGHTC48, COLDBYP1, PACKC48C, 3*DIPOLE )
C48FT:     LINE = ( MC48, QUADC48, PACKC48A, PACKC48B, COLDBYP2, &
           STRAIGHTC48FT, COLDBYP1, PACKC48C, 3*DIPOLE )
QUADC49:  LINE = ( DLB6, CD0Q1D, DLB5 )
PACKC49:  LINE = ( DLB4, HDC49, VDC49, TSQD0, DLB3, HBPMC49, DLB2, VBPMC49, &
           DLB1 )
C49:       LINE = ( MC49, QUADC49, PACKC49 )
CFORTY:   LINE = ( C42, C43, C44, C45, C46, C47, C48, C49 )
CFORTYFT: LINE = ( C42, C43FT, C44FT, C45FT, C46FT, C47FT, C48FT )
ESEPD0U:  LINE = ( DSEPEND, C49HESEP, DSEPB, C49VESEP, DSEPB, C49VESEP, &
           DSEPEND )
TRIPLETD0U: LINE = ( DTRIPOUT, CD0Q2F, DTRIPB, CD0Q3D, DTRIPB, &
           CD0Q4F, DTRIPIN, HBPMD0U, DV2H, VBPMD0U )
D0UP:     LINE = ( MD0U, COLDBYP2, ESEPD0U, COLDBYP1, FEEDCAN, &
           TRIPLETD0U, DLONG2 )
!
! Next group of elements are for fixed target.
QUADC49U: LINE = ( DBPMIN, DBPMOUT, HQUAD2D, DQOUT1 )
QUADC49D: LINE = ( DQUAD1END, HQUAD1F, DQUAD1END )
DOGLEGM:  LINE = ( DDOGEND, DOGMBEND, DDOGEND )
DOGLEGP:  LINE = ( DDOGEND, DOGPBEND, DDOGEND )
D0SEPTA:  LINE = ( MSEPTAU, DHALFSEPTA, DHALFSEPTA, DSEPTASEP, &
           DHALFSEPTA, DHALFSEPTA, MSEPTAD )
D0BUMP1:  LINE = ( D0BUMPEND, D0BUMPK1, D0BUMPEND )
D0BUMP2:  LINE = ( D0BUMPEND, D0BUMPK2, D0BUMPEND )
D0UPFT:   LINE = ( MC49, QUADC49U, DBYPC49, PACKC49, QUADC49D, DSPC1, &
           DOGLEGM, DSPC2, D0SEPTA, DSPC3, DOGLEGP, DSPC4, D0BUMP1, DSPC5, &
           DFUDGE1 )
SEXTANTCFT:  LINE = ( C0DOWN, CTEN, CTWENTY, CTHIRTY, CFORTYFT, D0UPFT )
D0COLL:   LINE = ( D0COLLEND, MD0COLL, D0COLLEND )
QUADD0U:  LINE = ( DQUAD1END, HQUAD1D, DQUAD1END )
QUADD0D:  LINE = ( HQUAD2F, DQOUT1)
!
SEXTANTC:  LINE = ( C0DOWN, CTEN, CTWENTY, CTHIRTY, CFORTY, D0UP )
TRIPLETD0D: LINE = ( VBPMD0D, DV2H, HBPMD0D, DTRIPIN, CD0Q4D, DTRIPB, &
           CD0Q3F, DTRIPB, CD0Q2D, DTRIPOUT )
ESEPD0D:  LINE = ( DSEPEND, D11HESEP, DSEPB, D11HESEP, DSEPB, D11VESEP, &
           DSEPEND )
D0DOWN:   LINE = ( MD0, DLONG2, TRIPLETD0D, FEEDCAN, COLDBYP1, &
           ESEPD0D, COLDBYP2 )
PACKD11:  LINE = ( DLB1, VBPMD11, DLB2, HBPMD11, DLB3, HDD11, VDD11, TSQD0, &
           DLB4 )
D0DOWNFT: LINE = ( MD0, DSPC6, DOGLEGP, DBUK1, D0BUK, D0COLL, DSPC8, &
           DOGLEGM, DSPC9, D0BUMP2, DSPC10, DFUDGE2, QUADD0U, DSPC11 )
QUADD11:  LINE = ( DLB5, CD0Q1F, DLB6 )
SPOOLD11: LINE = ( DLB7 )
D11:       LINE = ( MD11, PACKD11, QUADD11, SPOOLD11, 4*DIPOLE )
! I've deliberately left MD11 out of D11FT, because it would be in a 
!  different location than the MD11 in collider mode. 
D11FT:     LINE = ( PACKD11, QUADD0D, DBARRIER, 4*DIPOLE )
QUADD12:  LINE = ( DLB6, CD0Q5F, DLB5 )
PACKD12:  LINE = ( DLB4, VDD12, HDD12, DLB3, HBPMD12, DLB2, VBPMD12, DLB1 )
D12:       LINE = ( MD12, QUADD12, PACKD12, 4*DIPOLE )
QUADD13:  LINE = ( DBPMIN, HBPMD13, DBPMOUT, HQUADD6F, DQOUT )
PACKD13:  LINE = ( DPACKIN3, CD0Q6F, DPACKU2D3, CD0QT6F, TSF, HDD13,CD0QT6F,&
           DPACKOUT3 )
PACKD13FT:LINE = ( DPACKIN3, CD0Q6F, DPACKU2D3, TQF, TSF, HDD13, &
           DPACKOUT3 )
D13:       LINE = ( MD13, QUADD13, PACKD13, 4*DIPOLE )
D13FT:     LINE = ( MD13, QUADD13, PACKD13FT, 4*DIPOLE )
QUADD14:  LINE = ( DBPMIN, VBPMD14, DBPMOUT, HQUADD, DQOUT )
PACKD14:  LINE = ( DPACKIN2, CDQ7, DPACKU2D2, TSD, VDD14, DPACKOUT2 )
PACKD14FT:LINE = ( DPACKIN2, CDQ7, DTQIN, TQD, TSD, VDD14, DTQOUT )
D14:       LINE = ( MD14, QUADD14, PACKD14, 4*DIPOLE )
D14FT:     LINE = ( MD14, QUADD14, PACKD14FT, 4*DIPOLE )
QUADD15:  LINE = ( DBPMIN, HBPMD15, DBPMOUT, HQUADF, DQOUT )
PACKD15:  LINE = ( DPIN5LOC, TQD15, TSF, HDD15, DPOUT5LOC )
PACKD15FT:LINE = ( DPIN5LOC, TQF, TSF, HDD15, DPOUT5LOC )
D15:       LINE = ( MD15, QUADD15, PACKD15, FEEDCAN, 4*DIPOLE )
D15FT:     LINE = ( MD15, QUADD15, PACKD15FT, FEEDCAN, 4*DIPOLE )
QUADD16:  LINE = ( DBPMIN, VBPMD16, DBPMOUT, HQUADD, DQOUT )
PACKD16:  LINE = ( DPACKIN2, CDQ9, DPACKU2D2, TSD, VDD16, DPACKOUT2 )
PACKD16FT:LINE = ( DPACKIN2, CDQ9, DTQIN, TQD, TSD, VDD16, DTQOUT )
D16:       LINE = ( MD16, QUADD16, PACKD16, 4*DIPOLE )
D16FT:     LINE = ( MD16, QUADD16, PACKD16FT, 4*DIPOLE )
QUADD17:  LINE = ( DBPMIN, HBPMD17, DBPMOUT, HQUADF, DQOUT )
PACKD17:  LINE = ( DPACKIN2, CDQ0, DPACKU2D2, TSF, HDD17, DPACKOUT2 )
PACKD17FT:LINE = ( DPACKIN2, CDQ0, DTQIN, TQF, TSF, HDD17, DTQOUT )
D17:       LINE = ( MD17, QUADD17, PACKD17, D17EXTIN, D17SCRAPER, &
           D17EXTOUT, 2*DIPOLE, MEDSTR )
D17FT:     LINE = ( MD17, QUADD17, PACKD17FT, D17EXTIN, D17SCRAPER, &
           D17EXTOUT, 2*DIPOLE, MEDSTR )

! This scraping insert will be modified for Run II. 
!     ppb   9/4/97
D17TARG:   LINE = ( MD17TGFNT, DR2TTARG, MD17TGBCK )
D17COLL1:  LINE = ( MD17CL1FNT, DR2COLL, MD17CL1BCK )
D17COLL2:  LINE = ( MD17CL2FNT, DR2COLL, MD17CL2BCK )
D17WSTRR2: LINE=( DCOL17SP1, D17TARG, DD17SP2, D17COLL1, D17COLL2, DCOL17SP1)
D17R2:     LINE = ( MD17, QUADD17, PACKD17, COLDBYP1, D17WSTRR2, &
           COLDBYP2, 2*DIPOLE, MEDSTR )

QUADD18:  LINE = ( DBPMIN, VBPMD18, DBPMOUT, HQUADD, DQOUT )
PACKD18:  LINE = ( DPACKIN, TQD, TSD, VDD18, DPACKU2D, TX3, DPACKOUT )
D18:       LINE = ( MD18, QUADD18, PACKD18, 4*DIPOLE )
QUADD19:  LINE = ( DBPMIN, HBPMD19, DBPMOUT, HQUADF, DQOUT )
PACKD19:  LINE = ( DPACKIN, TQF, TSF, HDD19, DPACKU2D, CS3D2A, TR1, &
           DPACKOUT )
D19:       LINE = ( MD19, QUADD19, PACKD19, 4*DIPOLE )
DTEN:     LINE = ( D11, D12, D13, D14, D15, D16, D17, D18, D19 )
DTENFT:   LINE = ( D11FT, D12, D13FT, D14FT, D15FT, D16FT, D17FT, D18, D19 )
DTENR2:   LINE = ( D11, D12, D13, D14, D15, D16, D17R2, D18, D19 )
QUADD21:  LINE = ( DBPMIN, VBPMD21, DBPMOUT, HQUADD, DQOUT )
PACKD21:  LINE = ( DPACKIN, TQD, TSD, VDD21, DPACKU2D, DPACKOUT )
D21:       LINE = ( MD21, QUADD21, PACKD21, 4*DIPOLE )
QUADD22:  LINE = ( DBPMIN, HBPMD22, DBPMOUT, HQUADF, DQOUT )
PACKD22:  LINE = ( DPACKIN, TQF, TSF, HDD22, DPACKU2D, TX2, TSQ, &
           DPACKOUT )
D22:       LINE = ( MD22, QUADD22, PACKD22, 4*DIPOLE )
QUADD23:  LINE = ( DBPMIN, VBPMD23, DBPMOUT, HQUADD, DQOUT )
PACKD23:  LINE = ( DPACKIN, TQD, TSD, VDD23, DPACKU2D, TOZD, CS2D2A, &
           DPACKOUT )
D23:       LINE = ( MD23, QUADD23, PACKD23, 4*DIPOLE )
QUADD24:  LINE = ( DBPMIN, HBPMD24, DBPMOUT, HQUADF, DQOUT )
PACKD24:  LINE = ( DPACKIN, TQF, TSF, HDD24, DPACKU2D, TX2, TR2, &
           DPACKOUT )
D24:       LINE = ( MD24, QUADD24, PACKD24, 4*DIPOLE )
QUADD25:  LINE = ( DBPMIN, VBPMD25, DBPMOUT, HQUADD, DQOUT )
PACKD25:  LINE = ( DPIN5LOC, TQD, TSD, VDD25, DPOUT5LOC )
D25:       LINE = ( MD25, QUADD25, PACKD25, FEEDCAN, 4*DIPOLE )
QUADD26:  LINE = ( DBPMIN, HBPMD26, DBPMOUT, HQUADF, DQOUT )
PACKD26:  LINE = ( DPACKIN, TQF, TSF, HDD26, DPACKU2D, CS3D2A, TSQ, &
           DPACKOUT )
D26:       LINE = ( MD26, QUADD26, PACKD26, 4*DIPOLE )
QUADD27:  LINE = ( DBPMIN, VBPMD27, DBPMOUT, HQUADD, DQOUT )
PACKD27:  LINE = ( DPACKIN, TQD, TSD, VDD27, DPACKU2D, TOZD, CS2D2A, &
           DPACKOUT )
D27:       LINE = ( MD27, QUADD27, PACKD27, 4*DIPOLE )
QUADD28:  LINE = ( DBPMIN, HBPMD28, DBPMOUT, HQUADF, DQOUT )
PACKD28:  LINE = ( DPACKIN, TQF, TSF, HDD28, DPACKU2D, TX2, TR1, &
           DPACKOUT )
D28:       LINE = ( MD28, QUADD28, PACKD28, 4*DIPOLE )
QUADD29:  LINE = ( DBPMIN, VBPMD29, DBPMOUT, HQUADD, DQOUT )
PACKD29:  LINE = ( DPACKIN, TQD, TSD, VDD29, DPACKU2D, DPACKOUT )
D29:       LINE = ( MD29, QUADD29, PACKD29, 4*DIPOLE )
DTWENTY:  LINE = ( D21, D22, D23, D24, D25, D26, D27, D28, D29 )
QUADD32:  LINE = ( DBPMIN, HBPMD32, DBPMOUT, HQUADF, DQOUT )
PACKD32:  LINE = ( DPACKIN, TQF, TSF, HDD32, DPACKU2D, TX1, TSQ, &
           DPACKOUT )
D32:       LINE = ( MD32, QUADD32, PACKD32, 4*DIPOLE )
QUADD33:  LINE = ( DBPMIN, VBPMD33, DBPMOUT, HQUADD, DQOUT )
PACKD33:  LINE = ( DPACKIN, TQD, TSD, VDD33, DPACKU2D, TOZD, CS5D2A, &
           DPACKOUT )
D33:       LINE = ( MD33, QUADD33, PACKD33, 4*DIPOLE )
QUADD34:  LINE = ( DBPMIN, HBPMD34, DBPMOUT, HQUADF, DQOUT )
PACKD34:  LINE = ( DPACKIN, TQF, TSF, HDD34, DPACKU2D, TX1, TR2, &
           DPACKOUT )
D34:       LINE = ( MD34, QUADD34, PACKD34, 4*DIPOLE )
QUADD35:  LINE = ( DBPMIN, VBPMD35, DBPMOUT, HQUADD, DQOUT )
PACKD35:  LINE = ( DPIN5LOC, TQD, TSD, VDD35, DPOUT5LOC )
D35:       LINE = ( MD35, QUADD35, PACKD35, FEEDCAN, 4*DIPOLE )
QUADD36:  LINE = ( DBPMIN, HBPMD36, DBPMOUT, HQUADF, DQOUT )
PACKD36:  LINE = ( DPACKIN, TQF, TSF, HDD36, DPACKU2D, TX1, TSQ, TOZF, &
           DPACKOUT )
D36:       LINE = ( MD36, QUADD36, PACKD36, 4*DIPOLE )
QUADD37:  LINE = ( DBPMIN, VBPMD37, DBPMOUT, HQUADD, DQOUT )
PACKD37:  LINE = ( DPACKIN, TQD, TSD, VDD37, DPACKU2D, TOZD, CS5D2A, &
           DPACKOUT )
D37:       LINE = ( MD37, QUADD37, PACKD37, 4*DIPOLE )
QUADD38:  LINE = ( DBPMIN, HBPMD38, DBPMOUT, HQUADF, DQOUT )
PACKD38:  LINE = ( DPACKIN, TQF, TSF, HDD38, DPACKU2D, CS3D4A, DPACKOUT )
D38:       LINE = ( MD38, QUADD38, PACKD38, 4*DIPOLE )
QUADD39:  LINE = ( DBPMIN, VBPMD39, DBPMOUT, HQUADD, DQOUT )
PACKD39:  LINE = ( DPACKIN, TQD, TSD, VDD39, DPACKU2D, DPACKOUT )
D39:       LINE = ( MD39, QUADD39, PACKD39, 4*DIPOLE )
DTHIRTY:  LINE = ( D32, D33, D34, D35, D36, D37, D38, D39 )
QUADD42:  LINE = ( DBPMIN, HBPMD42, DBPMOUT, HQUADF, DQOUT )
PACKD42:  LINE = ( DPACKIN, TQF, TSF, HDD42, DPACKU2D, TOZF, TSQ, &
           DPACKOUT )
D42:       LINE = ( MD42, QUADD42, PACKD42, 4*DIPOLE )
QUADD43:  LINE = ( DBPMIN, VBPMD43, DBPMOUT, HQUADD, DQOUT )
PACKD43:  LINE = ( DPACKIN, TQD, TSD, VDD43, DPACKU2D, TX4, DPACKOUT )
D43:       LINE = ( MD43, QUADD43, PACKD43, 4*DIPOLE )
QUADD44:  LINE = ( DBPMIN, HBPMD44, DBPMOUT, HQUADF, DQOUT )
PACKD44:  LINE = ( DPACKIN, TQF, TSF, HDD44, DPACKU2D, DPACKOUT )
D44:       LINE = ( MD44, QUADD44, PACKD44, 4*DIPOLE )
QUADD45:  LINE = ( DBPMIN, VBPMD45, DBPMOUT, HQUADD, DQOUT )
PACKD45:  LINE = ( DPIN5LOC, TQD, TSD, VDD45, DPOUT5LOC )
D45:       LINE = ( MD45, QUADD45, PACKD45, FEEDCAN, 4*DIPOLE )
QUADD46:  LINE = ( DBPMIN, HBPMD46, DBPMOUT, HQUADF, DQOUT )
PACKD46:  LINE = ( DPACKIN, TQF, TSF, HDD46, DPACKU2D, CS3D4A, TSQ, &
           DPACKOUT )
D46:       LINE = ( MD46, QUADD46, PACKD46, 4*DIPOLE )
QUADD47:  LINE = ( DBPMIN, VBPMD47, DBPMOUT, HQUADD, DQOUT )
PACKD47:  LINE = ( DPACKIN, TQD, TSD, VDD47, DPACKU2D, DPACKOUT )
D47:       LINE = ( MD47, QUADD47, PACKD47, 4*DIPOLE )
QUADD48:  LINE = ( DBPMIN, HBPMD48, DBPMOUT, HQUAD3F, DQOUT )
PACKD48:  LINE = ( DPACKIN, DHQUADC, TSX, TQX, HDD48, DHQUADC, &
           DPACKU2D, DPACKOUT )
STRAIGHTD48:  LINE = ( DSTRAIGHT6 )
D48:       LINE = ( MD48, QUADD48, PACKD48, STRAIGHTD48, 3*DIPOLE )

! Next two lines are for Run II.
! We plan to move the F17 horz separator to D48.    ppb 9/12/97
ESEPD48R2: LINE = ( DSEPEND, D48HESEPR2, DSEPEND )
D48R2:     LINE = ( MD48, QUADD48, PACKD48, COLDBYP1, ESEPD48R2, &
                    STRD48R2, COLDBYP2, 3*DIPOLE )

QUADD49:  LINE = ( DBPMIN, HBPMD49, DBPMOUT, HQUAD2F, DQOUT1 )
STRAIGHTD49:  LINE = ( DSTRAIGHT5 )
PACKD49:  LINE = (DBPMIN1,VBPMD49,DBPMOUT1,DHQUADC,TSQE0,TR3,VDD49,HDD49,&
           DHQUADC, DPACKOUT1 )
D49:       LINE = ( MD49, QUADD49, COLDBYP2, STRAIGHTD49, COLDBYP1, &
           PACKD49 )
DFORTY:   LINE = ( D42, D43, D44, D45, D46, D47, D48, D49 )
DFORTYR2: LINE = ( D42, D43, D44, D45, D46, D47, D48R2, D49 )
QUADE0U:  LINE = ( DQUAD1END, HQUAD1D, DQUAD1END )

! I'm changing the description of the E0 straight for Run II.  9/4/97    ppb
LAMBERTE0U: LINE = ( LAMB1UP, LAMB1DN, LAMB2UP, LAMB2DN )
LONGSTRE0U: LINE = ( LAMBERTE0U, DLONG5 )

!  I've moved E0 so that it is exactly 1/6 of the ring from D0.
!   This moves it by 15.2 cm upstream. 
E0COLL1T:   LINE = ( DE0COLSP, ME0CL1FNT, DR2COLL, ME0CL1BCK, DE0COLSP )
LSTRE0UR2:  LINE = ( DCTABV, E0DOGLEGM, E0COLL1T, E0DOGLEGP, DE0SP1, &
                     E0DOGLEGP, DE0SP2, DDOGEND, E0DOGMP1 )

E0UP:     LINE = ( ME0U, QUADE0U, LONGSTRE0U )
E0UPR2:   LINE = ( ME0U, QUADE0U, LSTRE0UR2 )
SEXTANTD:  LINE = ( D0DOWN, DTEN, DTWENTY, DTHIRTY, DFORTY, E0UP )
SEXTANTDR2:LINE = ( D0DOWN,DTENR2,DTWENTY, DTHIRTY, DFORTYR2, E0UPR2 )
SEXTANTDFT:LINE = ( D0DOWNFT, DTENFT, DTWENTY, DTHIRTY, DFORTY, E0UP )

TEVE0:    LINE = ( SEXTANTE, SEXTANTF, SEXTANTA, SEXTANTB, SEXTANTC, SEXTANTD )
TEVB0:    LINE = ( SEXTANTB, SEXTANTC, SEXTANTD, SEXTANTE, SEXTANTF, SEXTANTA )

TEVE0FT:  LINE = ( SEXTANTE, SEXTANTFFT, SEXTANTAFT, SEXTANTBFT, &
            SEXTANTCFT, SEXTANTDFT )

TEVE0R2:  LINE = ( SEXTANTER2, SEXTANTFR2, SEXTANTA, SEXTANTB, SEXTANTC, &
                   SEXTANTDR2 )
TEVB0R2:  LINE = ( SEXTANTB, SEXTANTC, SEXTANTDR2, SEXTANTER2, SEXTANTFR2, &
                   SEXTANTA )


! momentum is in units of TeV
MOMENTUM := 0.9
BRHO := 3335.6400869 * MOMENTUM

BRHO := 3002.

! The following quad strengths are in Tesla/m
! C49 units are kG/m

B0Q1     :=   31.2400

B0Q2UP   :=  120.0217
B0Q2DOWN := -120.0217
B0Q3UP   := -123.9129
B0Q3DOWN :=  123.9129
B0Q4UP   :=  B0Q2UP
B0Q4DOWN :=  B0Q2DOWN
B0Q5     := -133.0426

B0Q6UP   :=  -26.6778
B0Q6DOWN := -B0Q6UP
B0QT6UP  :=   -1.9621
!B0QT6DOWN:=  B0QT6UP
B0QT6DOWN:=    0.0

AQ7 :=  33.2144
AQ9 := -46.4568
AQ0 :=   9.0872

BQ7 := -32.5636
BQ9 :=  48.3932
BQ0 := -10.7152

KB0Q1D := B0Q1 / BRHO
KB0Q1F := -KB0Q1D

KB0Q2F := B0Q2UP / BRHO
KB0Q2D := B0Q2DOWN / BRHO
KB0Q3F := B0Q3DOWN / BRHO
KB0Q3D := B0Q3UP / BRHO

KB0Q4F := B0Q4UP / BRHO
KB0Q4D := B0Q4DOWN / BRHO

KB0Q5D := B0Q5 / BRHO
KB0Q5F := -KB0Q5D
KTRIMB6D := B0Q6UP / BRHO
KTRIMB6F := B0Q6DOWN / BRHO

KTRIMBT6D := B0QT6UP / BRHO
KTRIMBT6F := B0QT6DOWN / BRHO

KTRIMB7F := AQ7 / BRHO
KTRIMB9D := AQ9 / BRHO
KTRIMBAF := AQ0 / BRHO

KTRIMB7D := BQ7 / BRHO
KTRIMB9F := BQ9 / BRHO
KTRIMBAD := BQ0 / BRHO


D0Q1     :=  b0q1
D0Q2UP   :=  b0q2up
D0Q2DOWN :=  b0q2down
D0Q3UP   :=  b0q3up
D0Q3DOWN :=  b0q3down
D0Q4UP   :=  D0Q2UP
D0Q4DOWN :=  D0Q2DOWN
D0Q5     :=  b0q5

D0Q6UP   :=  b0q6up
D0Q6DOWN := -D0Q6UP
D0QT6UP  :=  b0qt6up
!D0QT6DOWN:=  D0QT6UP
D0QT6DOWN:=  0.0

CQ7 := aq7
CQ9 := aq9
CQ0 := aq0

DQ7 := bq7
DQ9 := bq9
DQ0 := bq0

KD0Q1D := D0Q1 / BRHO
KD0Q1F := -KD0Q1D

KD0Q2F := D0Q2UP / BRHO
KD0Q2D := D0Q2DOWN / BRHO
KD0Q3D := D0Q3UP / BRHO
KD0Q3F := D0Q3DOWN / BRHO
KD0Q4F := D0Q4UP / BRHO
KD0Q4D := D0Q4DOWN / BRHO

KD0Q5D := D0Q5 / BRHO
KD0Q5F := -KD0Q5D

KTRIMD6D := D0Q6UP / BRHO
KTRIMD6F := D0Q6DOWN / BRHO
KTRIMDT6D := D0QT6UP / BRHO
KTRIMDT6F := D0QT6DOWN / BRHO

KTRIMD7F := CQ7 / BRHO
KTRIMD9D := CQ9 / BRHO
KTRIMDAF := CQ0 / BRHO

KTRIMD7D := DQ7 / BRHO
KTRIMD9F := DQ9 / BRHO
KTRIMDAD := DQ0 / BRHO


! Fit to tunes of .585, .575 gives 
!KQFT := -8.950209E-4
!KQDT :=  8.569111E-4
KQFT := -2.686853 / BRHO
KQDT :=  2.572447 / BRHO


! KBENDQ := 2.259873E-05
KBENDQ := 0.


! Next settings are for 2f08i2

TQFE26:     QUADRUPOLE, L = LQUADC, K1 = KQFE26T
TQFE28:     QUADRUPOLE, L = LQUADC, K1 = KQFE28T
TQFF28:     QUADRUPOLE, L = LQUADC, K1 = KQFF28T

PACKE26:  LINE = ( DPACKIN, TQFE26, TSF, HDE26, DPACKU2D, TOF39S, &
           TSQ, DPACKOUT )
PACKE28:  LINE = ( DPACKIN, TQFE28, TSF, HDE28, DPACKU2D, TOD39S, &
           CS1E2A, DPACKOUT )
PACKF28:  LINE = ( DPACKIN, TQFF28, TSF, HDF28, DPACKU2D, TOF39S, &
           CS4F2A, DPACKOUT )

TQFE19:     QUADRUPOLE, L = LQUADC, K1 = KQFE19T
TQFF32:     QUADRUPOLE, L = LQUADC, K1 = KQFF32T
TQDE47:     QUADRUPOLE, L = LQUADC, K1 = KQDE47T
TQDF33:     QUADRUPOLE, L = LQUADC, K1 = KQDF33T

PACKE19:  LINE = ( DPACKIN, TQFE19, TSF, HDE19, DPACKU2D, TOF39S, DPACKOUT )
PACKF32:  LINE = ( DPACKIN, TQFF32, TSF, HDF32, DPACKU2D,TS1,TSQ,TOD39C, &
           DPACKOUT )

PACKE47:  LINE = ( DPACKIN, TQDE47, TSD, VDE47, DPACKU2D, DPACKOUT )
PACKF33:  LINE = ( DPACKIN, TQDF33, TSD, VDF33, DPACKU2D, TOZD, CS5F3A, &
            TQF33, DPACKOUT )

PACKF13:  LINE = ( DPACKIN, TQFE, TSF, HDF13, DPACKU2D, TSQ, DPACKOUT )
PACKF15:  LINE = ( DPIN5LOC, TQFE, TSF, HDF15, DPOUT5LOC )

PACKF14:  LINE = ( DPACKIN, TQDE, TSD, VDF14, DPACKU2D, CS5F1A, DPACKOUT )
PACKF16:  LINE = ( DPACKIN, TQDE, TSD, VDF16, DPACKU2D, CS2F1A, DPACKOUT )

TEVB0:    LINE = ( SEXTANTB, SEXTANTC, SEXTANTD, SEXTANTE, SEXTANTF, SEXTANTA )
TEVB0R2:  LINE = ( SEXTANTB, SEXTANTC, SEXTANTDR2, SEXTANTER2, SEXTANTFR2, &
                   SEXTANTA )


psgn  := -1.
shsgn :=  1.
lhsgn := -1.
svsgn :=  1.
lvsgn := -1.

! Next separator settings are for 2f08i2.

beam, particle=proton, energy= 1000.
B11HANG :=  4.00   *psgn*shsgn
B17HANG := -2.3599 *psgn*shsgn
C49HANG :=  2.0369 *psgn*shsgn

D11HANG :=  4.00   *psgn*lhsgn
D48HANG := -1.4742 *psgn*lhsgn
A49HANG := -3.9524 *psgn*lhsgn

B11VANG := -3.7228 *psgn*svsgn
C17VANG :=  2.9712 *psgn*svsgn
C49VANG := -4.00   *psgn*svsgn

D11VANG :=  4.0137 *psgn*lvsgn
A17VANG := -3.3535 *psgn*lvsgn
A49VANG := -4.00   *psgn*lvsgn

! jj15c chromaticity recipes set up on 9/2/97
CHROMHORZ :=   5.0 - .032244 + .00105 + .00019
CHROMVERT :=   5.0 - .000271 - .04475 + .000211
SCHROMF :=   91.981354 + (CHROMHORZ* (1.168322)) + (CHROMVERT* ( 0.395231))
SCHROMD := -154.880736 + (CHROMHORZ* (-.637646)) + (CHROMVERT* (-1.993348))
TSD:      MULTIPOLE, K2L = SCHROMD / BRHO
TSF:      MULTIPOLE, K2L = SCHROMF / BRHO


! jj15c tune change recipes set up on 9/2/97
CHQX := (-0.004 + .000035) + (-0.000386 - 0.000057)
CHQY := (-0.001420) + (0.000330 + .000053)
! Base settings are for 2f08i2
KQFT    := -0.953300E-3 + ((CHQX)*(2.40508) + (CHQY)*( 0.77320))/1000.
KQFET   := -0.003644E-3 + ((CHQX)*(2.40508) + (CHQY)*( 0.77320))/1000.
KQFFT   := -1.658101E-3 + ((CHQX)*(2.40508) + (CHQY)*( 0.77320))/1000.

KQFE19T := -1.155578E-3 + ((CHQX)*(2.40508) + (CHQY)*( 0.77320))/1000.
KQFE26T := -1.366206E-3 + ((CHQX)*(2.40508) + (CHQY)*( 0.77320))/1000.
KQFE28T := -1.567001E-3 + ((CHQX)*(2.40508) + (CHQY)*( 0.77320))/1000.
KQFF28T := -1.653973E-3 + ((CHQX)*(2.40508) + (CHQY)*( 0.77320))/1000.
KQFF32T := -0.091360E-3 + ((CHQX)*(2.40508) + (CHQY)*( 0.77320))/1000.

KQDT    :=  0.892531E-3 + ((CHQX)*(-.77372) + (CHQY)*(-2.40275))/1000.
KQDET   := -0.088330E-3 + ((CHQX)*(-.77372) + (CHQY)*(-2.40275))/1000.
KQDFT   :=  2.050908E-3 + ((CHQX)*(-.77372) + (CHQY)*(-2.40275))/1000.
KQDE47T :=  0.959393E-3 + ((CHQX)*(-.77372) + (CHQY)*(-2.40275))/1000.
KQDF33T := -0.057842E-3 + ((CHQX)*(-.77372) + (CHQY)*(-2.40275))/1000.

use, tevb0r2

print, range= ma0,mb0,mc0
print, range= md0,me0,mf0
print, type= colmark
!print, range= ELSEPARATO
!print, range= marker, ELSEPARATO

twiss, couple

select, flag=optics, full
optics, filename='jj15c.efs.2f08i2c.drozhdin.orb', columns= name, s, &
l, k0, k1, k2, efield, betx, bety

stop
