#This file was created by <mokhovd> Thu Aug  5 08:54:35 1999
#LyX 1.0 (C) 1995-1999 Matthias Ettrich and the LyX Team
\lyxformat 2.15
\textclass slides
\options dvips
\language default
\inputencoding default
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Slide

title
\layout LaTeX


\backslash 
begin{center}
\layout Standard


\series bold 
\size huge 
MAD 
\series default 
parser 
\latex latex 

\backslash 

\backslash 

\size default 
\latex default 
 
\size huge 
and 
\latex latex 

\backslash 

\backslash 

\size default 
\latex default 
 
\layout Standard


\series bold 
\size huge 
CFG 
\series default 
converter
\layout LaTeX


\backslash 
end{center}
\layout LaTeX


\backslash 
vspace{3cm}
\layout LaTeX


\backslash 
begin{center}
\layout Standard


\size large 
\emph on 
Dmitri Mokhov
\emph default 
 and Oleg Krivosheev
\layout LaTeX


\backslash 
end{center}
\layout LaTeX


\backslash 
vspace{3cm}
\layout LaTeX


\backslash 
begin{center}
\layout Standard

August 1999
\layout LaTeX


\backslash 
end{center}
\layout Slide

require
\layout LaTeX


\backslash 
begin{center}
\layout Standard


\series bold 
Requirements
\layout LaTeX


\backslash 
end{center}
\layout Standard

Written code was developed and tested with:
\layout Itemize


\noun on 
GCC
\noun default 
 v.2.8.1 
\begin_inset LatexCommand \htmlurl[GNU]{http://www.gnu.org}

\end_inset 

.
 The code is fairly portable and should work with any ANSI C compatible
 compiler
\layout Itemize

Lexical generator 
\noun on 
Flex 
\noun default 
v.2.5.4 
\begin_inset LatexCommand \htmlurl[GNU]{http://www.gnu.org}

\end_inset 

.
 Should be fairly compatible with AT&T Lex, but requires small code changes.
\layout Slide

require2
\layout Itemize

Parser generator 
\noun on 
Bison
\noun default 
 v1.27 
\begin_inset LatexCommand \htmlurl[GNU]{http://www.gnu.org}

\end_inset 

.
 Again, should be quite compatible with AT&T Yacc, but requires small code
 changes.
\layout Itemize

GNU Make v.3.77 
\begin_inset LatexCommand \htmlurl[GNU]{http://www.gnu.org}

\end_inset 


\layout Itemize

C data structures library Glib v.1.2.3 
\begin_inset LatexCommand \htmlurl[GTK]{http://www.gtk.org}

\end_inset 


\layout Slide

CVS
\layout LaTeX


\backslash 
begin{center}
\layout Standard


\series bold 
Code availability
\layout LaTeX


\backslash 
end{center} 
\layout LaTeX


\latex no_latex 
Code is available via read-only anonymous
\noun on 
 CVS
\noun default 
 from server reboot.fnal.gov.
 Set your CVSROOT environment variable to
\latex default 
 
\layout LaTeX


\latex no_latex 
:pserver:anoncvs@reboot.fnal.gov:/usr/local/cvsroot
\layout Standard

then do 
\begin_inset Quotes eld
\end_inset 

cvs login
\begin_inset Quotes erd
\end_inset 

 with password 
\begin_inset Quotes eld
\end_inset 

anoncvs
\begin_inset Quotes erd
\end_inset 

, and then you can get your private copy of the sources by executing 
\begin_inset Quotes eld
\end_inset 

cvs checkout madparser
\begin_inset Quotes erd
\end_inset 

.
 Then check GNUmakefile to see how include parameters are set and then execute
 
\begin_inset Quotes eld
\end_inset 

make
\begin_inset Quotes erd
\end_inset 

.
\layout Slide

design
\layout LaTeX


\backslash 
begin{center}
\layout Standard


\series bold 
Design issues
\layout LaTeX


\backslash 
end{center}
\layout Standard

Essentially three stages:
\layout Enumerate

Read all 
\noun on 
MAD
\noun default 
 structure into memory.
 The lexer recognizes MAD keywords, identifiers, numbers, strings, and comments.
 It returns corresponding tokens and semantic values to the parser.
 The parser contains the grammar for MAD definitions and uses it to recognize
 those definitions and store them into internal data structures.
\layout Enumerate

Internal massage: checking for variable loops, sorting, dependence resolutions.
 Before outputting a CFG file, constants, variables, beam elements, and
 beam lines are sorted by the line number on which they were defined in
 the MAD file.
 Then dependences are also checked and resolved rearranging.
 Right now a circular definition (i.e., a loop) can be detected by running
 the dependency check, which will not properly terminate.
\layout Enumerate

Output.
 First, all the constants are outputted, then the variables, then the beam
 elements, and finally the beam lines, even though they might not be in
 separate blocks in the original MAD file.
 In addition, comments (changed from MAD to C++ style) are also printed
 in all sections.
\layout Slide

internals
\layout LaTeX


\backslash 
begin{center}
\layout Standard


\series bold 
Parser internals
\layout LaTeX


\backslash 
end{center}
\layout Itemize

Hash tables are kept for storing information about constants, variables,
 beam elements, and beam lines.
\layout Itemize

Trees are used for storing algebraic expressions used by constants, variables,
 and beam elements.
\layout Itemize

Doubly-linked lists are used for storing information about the elements
 of a beamline.
\layout Itemize

Arrays of pointers are used for comments.
\layout Slide

mad-yes
\layout LaTeX


\backslash 
begin{center}
\layout Standard


\series bold 
What
\noun on 
 
\noun default 
in
\noun on 
 
\noun default 
MAD is handled
\layout LaTeX


\backslash 
end{center}
\layout Itemize

Constants including built-in (
\begin_inset Formula \( \pi  \)
\end_inset 

, etc).
\layout Itemize

Variables including arbitrary arithmetic expressions as allowed by 
\noun on 
MAD 
\noun default 
syntax.
\layout Itemize

All beam element definitions are parsed (except for matrix and lump, which
 are not fully parsed).
\layout Itemize

Beamlines, including beamline expressions (inversion, inclusion).
\layout Itemize

Comments: handled by associating a comment that is on the same line as a
 statement with that statement and by associating full-line comments with
 a statement right after.
\layout Slide

mad-no
\layout LaTeX


\backslash 
begin{center}
\layout Standard


\series bold 
And what
\noun on 
 
\noun default 
in
\noun on 
 
\noun default 
MAD is NOT handled
\layout LaTeX


\backslash 
end{center}
\layout Itemize

Commands: the lexer understands them but the parser essentially throws them
 away (it outputs a message to the log).
\layout Itemize

Multiple input files: you have to concatenate them by hands.
\layout Itemize

Keywords short versions: they should be converted to their canonical names.
\layout Itemize

Matrix and lump beam elements: don't fit into beam element scheme and doesn't
 have direct bmln/mzyxptlk equivalent.
\layout Slide

bml-no
\layout Standard


\latex latex 

\backslash 
begin{center}
\layout Standard


\series bold 
Conversion problems
\layout Standard


\latex latex 

\backslash 
end{center}
\layout Itemize

Some elements (e.g., multipole and yrot) are correctly stored in the memory
 but are printed as comments to the CFG file.
\layout Itemize

Other elements (e.g., solenoid) are correctly stored in the memory but are
 printed as instances of fictitious classes.
\layout Itemize

Finally, other elements (e.g., elseparator and collimators) are replaced by
 drifts.
\layout Itemize

Output for the most elements includes comments that tell about the above
 problems and changes.
 They also list the values of parameters that don't have equivalents.
\layout Slide

howtorun
\layout Standard


\latex latex 

\backslash 
begin{center}
\layout Standard


\series bold 
How to run the converter
\layout Standard


\latex latex 

\backslash 
end{center}
\layout Standard

After compiling there is only one executable to run called MAIN.
 It has only two command-line options:
\layout Itemize

Input file
\layout Itemize

Output file (if none, then STDOUT)
\layout Standard

Logs are stored to MADPARSER.LOG
\layout Slide

example
\layout Standard


\latex latex 

\backslash 
begin{center}
\layout Standard


\series bold 
Recycler lattice
\layout Standard


\latex latex 

\backslash 
end{center}
\layout Standard

We tested the converter using recycler v18 lattice.
 The input is a 56K MAD file.
 The only preliminary work that was needed is the conversion of short bml
 names into standard ones.
 100k output file was produced which looks ok except several comments like
\layout LyX-Code


\size footnotesize 
CF_rbend ARCF ( (char*)"ARCF:arcf", LBARCMAG,
\layout LyX-Code


\size footnotesize 

\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 BRHO*(BARCANG)/(LBARCMAG), BARCANG ); 
\layout LyX-Code


\size footnotesize 
ARCF.setQuadrupole( BARCK1F ); 
\layout LyX-Code


\size footnotesize 
ARCF.setSextupole ( BARCK2F ); 
\layout LyX-Code


\size footnotesize 
ARCF.setOctupole ( 0.
 );
\layout LyX-Code


\size footnotesize 
// Ignored for ARCF: E1=0.; E2=0.; H1=0.;
\layout LyX-Code


\size footnotesize 
// 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 H2=0.; HGAP=0.; FINT=0.
\layout Slide

\layout Standard

This is the original MAD definition:
\layout LyX-Code


\size footnotesize 
ARCF: RBEND, TYPE=arcf, L=lbarcmag, ANGLE = barcang, &
\layout LyX-Code


\size footnotesize 
K1 = barck1f, K2 = barck2f
\layout Slide

constants&comments
\layout Standard

No new constants were declared in the r18 lattice, converter produced only
 one line
\layout LyX-Code


\size footnotesize 
// *** Constants ***
\layout LyX-Code


\size footnotesize 
const double PI = 3.14159265358979323846;
\layout Slide

vars
\layout Standard

Variables from r18:
\layout LyX-Code


\size footnotesize 
! Define cell lengths for arc,dispersion suppressor and
\layout LyX-Code


\size footnotesize 
! straight section
\layout LyX-Code


\size footnotesize 
!
\layout LyX-Code


\size footnotesize 
larccell= 17.288177764 !17.288180764-0.000003
\layout LyX-Code


\size footnotesize 
lsscell= 17.288639
\layout LyX-Code


\size footnotesize 
ldiscell= 12.96643319
\layout Standard

and how they were converted into CFG output:
\layout LyX-Code


\size footnotesize 
// Define cell lengths for arc,dispersion suppressor and
\layout LyX-Code


\size footnotesize 
// straight section
\layout LyX-Code


\size footnotesize 
//
\layout LyX-Code


\size footnotesize 
// 17.288180764-0.000003
\layout LyX-Code


\size footnotesize 
double LARCCELL = 17.288177764;
\layout LyX-Code


\size footnotesize 
double LSSCELL = 17.288639;
\layout LyX-Code


\size footnotesize 
double LDISCELL = 12.96643319;
\layout Slide

beam elements
\layout Standard

Beam elements from r18:
\layout LyX-Code


\size footnotesize 
! Simulate magnet moves by placing H and V correctors at the
\layout LyX-Code


\size footnotesize 
! end of the CFM magnets.
\layout LyX-Code


\size footnotesize 
!
\layout LyX-Code


\size footnotesize 
HC: hkicker, l=0.0, kick = 0.0, type=khka 
\layout Standard

and how they were converted into CFG:
\layout LyX-Code


\size footnotesize 
// Simulate magnet moves by placing H and V correctors at the
\layout LyX-Code


\size footnotesize 
// end of the CFM magnets.
\layout LyX-Code


\size footnotesize 
//
\layout LyX-Code


\size footnotesize 
hkick HC ( (char*)"HC:khka", 0.0, 0.0 );
\layout Slide

beam lines
\layout Standard

Beam lines:
\layout LyX-Code


\size footnotesize 
IJHB30DS: line=(-IJHB30US)
\layout LyX-Code


\size footnotesize 
IJHBINSRT: line=(IJHB30US,IJHB30DS)
\layout Standard

CFG output:
\layout LyX-Code


\size footnotesize 
beamline IJHB30DS ( "IJHB30DS" );
\layout LyX-Code


\size footnotesize 

\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
IJHB30DS.append( -IJHB30US );
\layout LyX-Code


\size footnotesize 
beamline IJHBINSRT ( "IJHBINSRT" );
\layout LyX-Code


\size footnotesize 

\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
IJHBINSRT.append( IJHB30US );
\layout LyX-Code


\size footnotesize 

\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
 
\protected_separator 
IJHBINSRT.append( IJHB30DS );
\layout Slide

todo
\layout LaTeX


\backslash 
begin{center}
\layout Standard


\series bold 
Issues to be resolved and ToDo List
\layout LaTeX


\backslash 
end{center}
\layout Itemize

Two reduce-reduce conflicts.
 
\noun on 
Bison 
\noun default 
chooses the right way to resolve the conflict and it works for now.
 May be a problem with AT&T 
\noun on 
Yacc
\noun default 
 or another 
\noun on 
Bison
\noun default 
 version.
\layout Itemize

Possibility to handle multiple included files.
\layout Slide

Last
\layout Standard

Thank you, Francois, Leo, and Elliott for an interesting assignment, useful
 advice, and great cooperation.
\the_end
