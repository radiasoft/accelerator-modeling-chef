General Notes

Installation
-----------------------------------------------------------------------

  [1] From your build direcotory, run configure from the library you
      wish to compile.  Run the configure script from the top of the
      source tree to compile all libraries.

  [1.1]  If configure uses the incorrect compiler, you may specify the
         compiler you wish to use.

	--with-cxx=
		g++	GNU Compiler (default)
                CC	Sun Compiler
		pgCC	PGI compiler

	--with-cc=
		gcc	GNU Compiler (default)
 		pgcc	your compiler
 		cc	Sun Compiler

	to use the Sun Compilers:

	ie. configure --with-cxx=CC --with-cc=cc

  [1.2]  If configure fails to locate the TCL-TK include directory,
         you may set the TK_INC variable to your TCL include directory.

         ie. configure TK_INC=/usr/include

  [1.3]  If configure fails to locate the X11 include directory, you
         may set the X_INC variable to your X11 include directory.

  [1.4]  If you need to enable RTTI (required for GNU compiler) or
	 exceptions, use --with-gxx_rtti and/or --with-gxx_exception

	ie. configure --with-gxx_rtti --with-gxx_exception

  [1.5]  Other options can be viewed by typing "configure --help" or
         "configure --help=recursive" for multiple libraries.

  [2] After configure has successfully completed, type "make" or
      "gmake". NOTE: Your make command *must* invoke GNU make.

  [3] [Optional] type "make install" to install the executable.  Use
      the "--prefix" option in configure to specify a location other
      than "/usr/bin".


Technical Notes
-----------------------------------------------------------------------

Adding new source files:

  After a new source file has been added, the source file list must be
  updated.  This can be done by running "updatesource" from the source
  directory which contains the new source file.  "updatesource" should
  be located in the top directory.  The diff command is invoked to
  notify you have changes.

  ie.  (in mxyzptlk/src) type "../../updatesource"

Adding new header files:

  After a new header file has been added, the header file list must be
  updated.  This can be done by running "updateheaders" from the top
  directory of the library which contains the new header file.
  "updateheaders" should be located in the top directory.  The diff
  command is invoked to notify you have changes.

  ie.  (in mxyzptlk) type "../../updateheaders"

Adding new configure options:
  Adding a new "--with" or "--enable" option involves editing the 
  "configure.in" file.  use AC_ARG_WITH(name,help,given,not-given)
  or AC_ARG_WITH(name,help,given,not-given).
  name      - The name of the feature.
  help      - The help string to show. use AC_HELP_STRING to make the
              message look better.
  given     - Shell code to execute if the argument is given.  This will
              execute if --with or --without or if --enable or --disable
              is given.
  not-given - Shell code to execute if the argument is not given.

  example: 
  AC_ARG_WITH(solaris,AC_HELP_STRING([--with-solaris],
              [Enable Solaris compiler]),CXX=CC;CC=cc;)
  
Define a new macro:
  use AC_DEFINE(name,value,description).  This is useful when used with
  configure options.

  ie. AC_DEFINE(NO_RTTI,,used when no-rtti is used)

Add a new variable to the HELP list:
  use AC_ARG_VAR(name,description)

  ie. AC_ARG_VAR([TK_INC],    [TCL-TK include directory])dnl

-----------------------------------------------------------------------
After changing any file asociated with Autoconf or Automake run the
following commands in the top folder of the modified library:

  libtoolize --force --copy
  aclocal -I config
  autoheader
  autoconf
  automake --add-missing --foreign --copy

