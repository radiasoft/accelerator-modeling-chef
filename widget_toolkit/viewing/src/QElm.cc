// *****************************************************************************
// *
// * Class QElm
// *
// *****************************************************************************
#include<QElm.h>
#include<beamline/bmlnElmnt.h>
#include<beamline/beamline.h>
#include<qpixmap.h>

static const char* drift_xpm[19]={
"  16 16 2 1",
"# c #000000",
". c #ffffff",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##......."
};

static const char* slot_xpm[19]={
"  16 16 2 1",
"# c #000000",
". c #ffffff",
".........##.....",
".......##.......",
".....####.......",
"...##..##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
".......##.......",
"...##..##.......",
".....####.......",
".......##.......",
".........##....."
};

static const char* bml_black_xpm[19]={
"  16 16 2 1",
"# c #000000",
". c #ffffff",
".......#........",
".....#####......",
".....#####......",
".......#........",
".......#........",
".....#####......",
".....#####......",
".......#........",
".......#........",
".....#####......",
".....#####......",
".......#........",
".......#........",
".....#####......",
".....#####......",
".......#........"
};

// const char* bmr_black_xpm[19]={
// "  16 16 2 1",
// "# c #000000",
// ". c #ffffff",
// "...........##...",
// "....########....",
// "...########.....",
// "..##...#........",
// ".......#........",
// ".....#####......",
// ".....#####......",
// ".......#........",
// ".......#........",
// ".....#####......",
// ".....#####......",
// ".......#........",
// ".......#...##...",
// "....########....",
// "...########.....",
// "..##............"
// };
// 
// const char* bmr_orange_xpm[19]={
// "  16 16 2 1",
// "# c #ff8800",
// ". c #ffffff",
// "...........##...",
// "....########....",
// "...########.....",
// "..##...#........",
// ".......#........",
// ".....#####......",
// ".....#####......",
// ".......#........",
// ".......#........",
// ".....#####......",
// ".....#####......",
// ".......#........",
// ".......#...##...",
// "....########....",
// "...########.....",
// "..##............"
// };

static const char* bmr_black_xpm[19]={
"  16 16 2 1",
"# c #000000",
". c #ffffff",
"................",
"....########....",
"...##########...",
"..##...#....##..",
".##....#.....##.",
"##...#####...##.",
"##...#####...##.",
"##.....#.....##.",
"##.....#.....##.",
"##...#####...##.",
"##...#####...##.",
"##.....#.....##.",
".##....#...##...",
"..##########....",
"...########.....",
"................"
};

static const char* bmr_orange_xpm[19]={
"  16 16 2 1",
"# c #ff8800",
". c #ffffff",
"................",
"....########....",
"...##########...",
"..##...#....##..",
".##....#.....##.",
"##...#####...##.",
"##...#####...##.",
"##.....#.....##.",
"##.....#.....##.",
"##...#####...##.",
"##...#####...##.",
"##.....#.....##.",
".##....#...##...",
"..##########....",
"...########.....",
"................"
};

static const char* bml_orange_xpm[19]={
"  16 16 2 1",
"# c #ff8800",
". c #ffffff",
".......#........",
".....#####......",
".....#####......",
".......#........",
".......#........",
".....#####......",
".....#####......",
".......#........",
".......#........",
".....#####......",
".....#####......",
".......#........",
".......#........",
".....#####......",
".....#####......",
".......#........"
};

static const char* dquad_xpm [19]={
"  16 16 2 1",
"# c #f00000",
". c #ffffff",
"................",
"................",
"...#########....",
"....#######.....",
".....#####......",
".....#####......",
"......###.......",
"......###.......",
"......###.......",
"......###.......",
".....#####......",
".....#####......",
"....#######.....",
"...#########....",
"................",
"................"
};

static const char* fquad_xpm [19]={
"  16 16 2 1",
"# c #f00000",
". c #ffffff",
"................",
"................",
".......#........",
"......###.......",
".....#####......",
".....#####......",
"....#######.....",
"....#######.....",
"....#######.....",
"....#######.....",
".....#####......",
".....#####......",
"......###.......",
".......#........",
"................",
"................"
};

static const char* sextupole_xpm [19]={
"  16 16 2 1",
"# c #ffff00",
". c #ffffff",
"................",
"................",
"................",
"....########....",
"...##########...",
"..############..",
".##############.",
"################",
".##############.",
"..############..",
"...##########...",
"....########....",
"................",
"................",
"................",
"................"
};

static const char* dipole_xpm[19]={
"  16 16 2 1",
"# c #008000",
". c #ffffff",
"................",
"................",
"................",
".......##.......",
".......##.......",
"......####......",
"......####......",
".....######.....",
".....######.....",
".....######.....",
"....########....",
"....########....",
"...##########...",
"...##########...",
"..############..",
"................"
};

static const char* elmnt_xpm[19]={
"  16 16 2 1",
"# c #000000",
". c #ffffff",
"................",
"................",
"................",
"................",
"................",
"................",
"......###.......",
".....#####......",
".....#####......",
"......###.......",
"................",
"................",
"................",
"................",
"................",
"................"
};

static const char* lcav_xpm[19]={
"  16 16 2 1",
"# c #000000",
". c #ffffff",
"................",
"................",
"................",
"......###.......",
".....#####......",
".....#####......",
"......###.......",
".....#####......",
".....#####......",
"......###.......",
".....#####......",
".....#####......",
"......###.......",
".....#####......",
".....#####......",
"......###......."
};


QPixmap const&   QElm::driftSymbol()
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(drift_xpm) ); 
}    
QPixmap const&   QElm::slotSymbol()        
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(slot_xpm) ); 
}    
QPixmap const&   QElm::bmlBlackSymbol()
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(bml_black_xpm) ); 
}    
QPixmap const&   QElm::bmrBlackSymbol()
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(bmr_black_xpm) ); 
}    
QPixmap const&   QElm::sextupoleSymbol()
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(sextupole_xpm) ); 
}    
QPixmap const&   QElm::fquadSymbol()
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(fquad_xpm) ); 
}    

QPixmap const&   QElm::dquadSymbol()
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(dquad_xpm) ); 
}    
QPixmap const&   QElm::bmlOrangeSymbol()
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(bml_orange_xpm) ); 
}    
QPixmap const&   QElm::bmrOrangeSymbol()
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(bmr_orange_xpm) ); 
}    
QPixmap const&   QElm::dipoleSymbol()
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(dipole_xpm) ); 
}    
QPixmap const&   QElm::lcavSymbol()
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(lcav_xpm) ); 
}    
QPixmap const&   QElm::elmntSymbol()
{ 
  static QPixmap* px = 0;
  return px ? *px : *( px = new QPixmap(elmnt_xpm) ); 
}    


//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


QElm::QElm( ElmPtr elm, double s, QListView* parent, char const* s1, char const* s2 )
  : QListViewItem( parent, s1, s2 ), elm_(elm), azimuth_(s)
{
  setRenameEnabled(0, true);
}

//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

QElm::QElm( ElmPtr elm, double s, QElm* parent, char const* s1, char const* s2 )
  : QListViewItem( parent, s1, s2 ), elm_(elm), azimuth_(s)
{
  setRenameEnabled(0, true);
}

//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

QElm::~QElm()
{}

//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

ElmPtr QElm::elm()
{ 
  return elm_;
} 

//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


QElm* QElm::root_node()
{
  if( !parent() ) { return this; }

  QListViewItem* node   = parent();

  while( node->parent() ) {
    node = node->parent();
  }

  return static_cast<QElm*>(node);
}

//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

void QElm::setOpen( bool o )
{

  if( !elm_->isBeamline() ) return; 

  BmlPtr bml = boost::dynamic_pointer_cast<beamline>( elm_); 

  if ( bml->getLineMode() == beamline::line ) { 
    if ( o ) {
      setPixmap( 0, (bmlOrangeSymbol()) );
    }
    else {
      setPixmap( 0, (bmlBlackSymbol()) );
    }
}
  else if(  bml->getLineMode() == beamline::ring ) {
    if ( o ) {
      setPixmap( 0, (bmrOrangeSymbol()) );
    }
    else {
      setPixmap( 0, (bmrBlackSymbol()) );
    }
  }
  else {
    if ( o ) {
      setPixmap( 0, (bmlOrangeSymbol()) );
    }
    else {
      setPixmap( 0, (bmlBlackSymbol()) );
    }
  }

  QListViewItem::setOpen( o );
}


//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

void QElm::setup()
{
    setExpandable( elm_->isBeamline() );
    QListViewItem::setup();
}

//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
//|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

void QElm::okRename( int col ) 
{
  QListViewItem::okRename(col);
  if (col!=0 ) return;
  if (elm_) elm_->rename( text(col).ascii() );
}
