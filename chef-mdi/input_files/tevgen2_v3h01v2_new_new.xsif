!TITLE
!
! Need to Do?
! - Change CMAG strength in mad?
! - Check rotation conventions for skew elements
! - Make a thinSeparator class for BEAMLINE C++.
! - At F0, check the locations of the BPM's and the Long. damper pick up
! - Check the order of the transverse damper pickups and kickers 
!     at D48 and E0. The order won't be known for certain until they 
!     are actually installed in the tunnel. 
! - Check orientation of target cans, is target closer to the US or DS end ? 
!
!  ********************************************************************
!  ********************************************************************
!  12/14/98 Mike Martens
!  This MAD file or (BEAMLINE cfg file) represents the geometery of 
!  the Tevatron Collider Run II, Fixed Target, and Collider Run I latttices. 
!  The information in this file originated with the work of Steve Peggs and
!  Glenn Goderre and over the years has been modified, corrected, and updated
!  by Peter Bagley, Mike Martens, Jim Holt, Leo Michelotti, ....
!  
!
!  Below follow about a billion lines of notes detailing the esoteric
!  minutiae of errors, corrections, updates, and changes.
!  ********************************************************************
!  ********************************************************************
!
! 5/10/00 Mike Martens
! - Converted BPMs at A0 from hmonitor and vmonitor to markers.
!   The BPMs exist in the tunnel, but are not part of the T39 or C50.
! - Changed collimator naming convention somewhat to agree with C10 and
!   the ACNET names.
!
! 1/25/00 Mike Martens
! - Split DR2COLL drift into two halves
! - Added markers in the centers of the Run II Collimators.
!
! 1/24/00 Mike Martens
! Updated feeddown circuits for Run II:
! - Changed polarity of thin sextupoles in circuit CS4F2A for Run II.
!   This compensates for the change in helix polarity between 
!   Run I and Run II.
! - Added an "S6" feeddown circuit by 
!      replacing T:SF in PACKA46 with CS6A4AP
!      replacing T:SF in PACKC46 with CS6C4AM
! - Added an "S7" feeddown circuit by 
!      replacing T:SD in PACKB14 with CS7B1AP
!      replacing T:SD in PACKD14 with CS7D1AP
! These changes made it neccesary to make some new R2 lines to 
! differentiate the Run II lattice from the Run I lattice.
!
! 11/04/99 Mike Martens
! Updated feedown circuits:
!  - Appended P or M to the device name to denote the polarity of the magnet.
!  - Renamed CS5D2A to CS5D3A (was a typo.)
!  - Removed CS3A3A from pack PACKA36. It is not used. 
!  - Changed which sextupoles were skew quads based on notes
!    from Glenn Goderre and Jerry Annala.
!   - All magnets in the CS2, CS3, and CS5 families are skew sextupoles.
!   - All magnets in the CS1 and CS4 families are normal sextupoles.
!
!
! 4/26/99 Mike Martens 
! Renamed BPMS near the F0 Lambertsons.
!
! 
! 3/18/99 Mike Martens
! Added names for strengths of 39th harmonic circuits.
!
!
! 1/29/99 ppb  Added several changes made by Mike Church
!  - Changed the way the collimators and targets are handled
!      Targets now have a single marker and uneven drifts from the target to
!       the edges of the can.
!      Collimators now are 1.5 m long with edges. 
!  - Added thin tungsten targets at D49 and F49 
!  - Added a collimator at F48 and at A0
!  - Added A0 Abort Kickers and Abort Blocks and B48 Abort Kickers
!  - Changed the naming convention on markers for targets, Coll., and F0 Lamb
!  - Added BPM's at F0 and A0
!  - Added a long. strip line pick up at F0
! 
! 1/25/99 ppb
!  - Added comments on quad configurations in/near the straight sections
!  - Renamed the B6F, B6D, D6F, D6D quads as standard F and D quads
!      since that is what they are. These quads are at the 47 and 13 locations
!      near B0 and D0.
!  - Changed TQX, TQ2, TQ4, TR1, TR2, and TR3 from quadrupoles to multipoles
!      since they have zero length. 
!  - Renamed the tune quad circuits and their strengths.
!
! 1/11/99 ppb
!  - Replaced DLONG2, the drift between B0, D0 and the triplet, with 
!      DB0A, DB0B, DB0C at B0 and with DD0A, DD0B, and DD0C at D0.
!      The drifts in the new version correspond to the different diameter
!      beam pipes. Mike Church requested this. 
!  - Gave the standard lattice markers the TYPE = CELLMARK
!  - Gave markers at Lamb, Septa, etc, the TYPE = INJEXTMARK
!  - Gave markers at Flying Wires, Sync Light points, etc, the TYPE = INSTRMARK
!  - At the 21, 29, and 39 locations :
!      Changed from a normal spool to a short spool.
!         Short spools are the type at 5 Locations and have no DownStream 
!         package. These are A spools at Horz. Foc. locations (15 and 48)
!         and B spools at Vert. Foc. locations (21, 29, 39, 25, 35, 45).
!         H, L, P, and S spools also do not have DS packages.
!      Making this change moves the tune quad downstream by 2.54 cm = 1"
!         and so has a very slight effect on the optics and tunes. 
!      Explicitely added the Turn Around Box, Gate Valve, Turn Around Box
!         (TABGVTAB). These locations are the boundaries between the cryo
!         houses. We have short spools at these locations to make room
!         for the Turn Around Boxes. 
!      Since it has always been this way, I made this change for 
!         both Run I and Run II.
!  - At D47 and E14, there are special versions of B spools. 
!      There used to be Roman Pots at these locations. The B spools were
!      modified so that they are also the upstream part of a cold bypass.
!      These are followed by a very short warm straight for the Roman Pots
!      and then by the downstream cold bypass. 
!      I made these modifications. 
!  - At E48, F48, B48, D48 : 
!      Changed from a normal spool to a short spool. 
!         Explicitly put in the cold bypasses
!         Gain 29" from short spool, but cold bypasses take up 28.75". 
!      No changes needed at A48 or C48 near the Interaction Points. 
!      48 Locations don't have tune quads. 
!      Since it has always been this way, I made this change for 
!         both Run I and Run II.
!      Also at D48, 
!         put in transverse damper pick ups. 
!         For Run II, D48 also has a horz sep. But since the damper pick ups
!           are only drifts and since if the separator is off, its just a
!           drift, I did NOT make a separate Run II version.
!         I made a special separator end for D48, DSEPEND48. I believe that
!           at other locations, there are extra little spacers so the 
!           separators + ends will exactly fill the warm straight section. 
!  - E0 changes based on new drawings
!      New lengths for collimators
!      Changed lengths for ends of B2 magnets (in drawings flange to flange
!         length for the B2's are 250").
!      New lengths for transverse damper kickers.
!      Added 2 transverse damper pick ups at downstream end of E0. 
!  - F0 changes based on a drawing in the Main Injector Technical Design
!      Handbook that had a couple of dimensions on it. 
!      Half a RF wavelength from F0 to the center of the first RF cavity.
!      13.222 m from F0 to middle of the 4 Lambertsons.
!      Also put in correct length for Lambertsons and for space between
!         Lambertsons based on current drawings. 
!  - Revised D17, F17. 
!      Previous version of these had preliminary versions of collimators, 
!         targets, and for F17 proton injection kickers.
!      Revised version is based on new drawings. 
!
! 12/9/98 MAM
!  Major changes to incorporate updates for Run II and to make create
!  three version of a Tevatron beamline:
!   Collider Run I,
!   Collider Run II,
!   and 1999 Fixed Target. 
!  
!  Many of the changes made between Run I and Run II are common
!    to both the 1999 Fixed Target lattice and the Run II lattice. 
!  In many places the Fixed Target beamline uses elements defined for Run II.
!
! Differences between this version and the previous tevgen.lat
!
!  - Added versions of beamlines for Run II and fixed target in many places.
!     These are denoted with a R2 or FT appeneded to the beamline name.
!
!  - Added changes for D0 FPD roman pots to Run II lattice 
!    * removed the D0 Q1 low beta quadrupoles.
!    * replaced type-P spool with type-S spool at C49 and D11.
!    * Moved separators at C49 and D11 25 inches further from D0 IR.
!    * Added markers at locations of FPD roman pots.
!
!  - Added new circuits for trim quad magnets split off from 
!     the TQFA4 and TQDD1 in the E and F sectors. 
!     The new circuits are TQFE1, TQDE2, TQFF3, TQDF4, TQE19,
!     TQE26, TQE28, TQE47, TQF28, TQF32
!
!  - Added markers at locations of extraction lambertsons, 
!     extraction septa, and D0 and F48 wire targets.
!
!  - Corrected the length of the extraction septa.
!  - Corrected locations of BPM's at C49 and D11 for fixed target.
!
!  - The magnet gradients, beamline energy, etc. are defined in
!     a separate lattice file. 
!     These include MOMENTUM, BRHO, KBENDQ, QFA4, QDD1, SCHROMF, SCHROMD
!     Separator strengths, low beta quad gradients, feedowns, etc.
!  - Re-arranged ordering of quadrupole definitions for clarity. 
!
!
! Notes:
! - The zero markers MA0, MB0, MC0, MD0, ME0, MF0 are located
!    every 1/6th (+- about 1 mm) of the way around the ring. 
!    THESE DO NOT NECESSARILY CORRESPOND TO THE LOCATION OF THE 
!    SURVEY MARKERS IN THE STRAIGHT SECTIONS!
!
! - On dipole correctors
!   Six dipole correctors in the Tevatron have a C: prefix
!    in the ACNET name (C:VA48, C:HA48, C:HB12, C:HC48, C:VC48, C:HD12)
!   HA48 and HC48 are the only dipole correctors where there is
!    BOTH a C: and a T: device.  In the MAD file the C: devices are 
!    named HDA48C and HDC48C. 
!   The steerings in the PACKA48A are C:HA48 and C:VA48.
!   The steering  in the PACKA48B is  T:HA48.
!   The steerings in the PACKC48A are C:HC48 and C:VC48.
!   The steering  in the PACKC48B is  T:HC48.
!  The C: steerings are physically different than the other correctors in 
!   the ring. The C: devices are physically stronger, that is they produce
!   more magnetic field at a given current.
!  Although they don't have a C: prefix, T:VB12 and T:VD12 are also  
!   this stronger style. 
!
!  - On low beta trim quadrupoles
! Configuration of low beta trim quads and tune trim quads in
! collider operations and fixed target operations.
!
!                            Also in                               Also in  
!        RunI   FTII   RunII  Pack             RunI   FTII   RunII  Pack   
!-------------------------------------------------------------------------
! A42    TQFA4  TQFA4  TQA42	        C42    TQFA4  TQFA4  TQC42          
! A43    JUMP   TQDD1  JUMP  (C:AQ0)    C43    JUMP   TQDD1  JUMP  (C:CQ0)  
! A44    JUMP   TQFA4  JUMP  (C:AQ9)    C44    JUMP   TQFA4  JUMP  (C:CQ9)  
! A45    TQA45  TQDD1  TQA45	        C45    TQC45  TQDD1  TQC45          
! A46    JUMP   TQFA4  JUMP  (C:AQ7)    C46    JUMP   TQFA4  JUMP  (C:CQ7)  
! A47    B0QT6  TQDD1  B0QT6 (C:B0Q6)   C47    D0QT6  TQDD1  D0QT6 (C:D0Q6) 
! A48    ----   ----   ----	        C48    ----   ----   ----           
! A49    TSQA4  TSQA4  TSQA4	        C49    TSQD0  TSQD0  TSQD0          
! 
! B11    TSQB1  TSQB1  TSQB1	        D11    TSQD0  TSQD0  TSQD0          
! B12    ----   ----   ----	        D12    ----   ----   ----           
! B13    B0QT6  TQFA4  B0QT6 (C:B0Q6)   D13    D0QT6  TQFA4  D0QT6 (C:D0Q6) 
! B14    JUMP   TQDD1  JUMP  (C:BQ7)    D14    JUMP   TQDD1  JUMP  (C:DQ7)  
! B15    TQB15  TQFA4  TQB15	        D15    TQD15  TQFA4  TQD15          
! B16    JUMP   TQDD1  JUMP  (C:BQ9)    D16    JUMP   TQDD1  JUMP  (C:DQ9)  
! B17    JUMP   TQFA4  JUMP  (C:BQ0)    D17    JUMP   TQFA4  JUMP  (C:DQ0)  
!
!
!
! - On tune quad circuits
! Configuration of E and F sector trim quad circuits in collider operations
! and fixed target operations
!
!        RunI   FTII   RunII                 RunI   FTII   RunII
!------------------------------------------------------------------
! E11    SQE0   SQE0   SQE0           F11    ----   ----   ---- 
! E12    ----   ----   ----           F12    ----   ----   ---- 
! E13    TQFA4  TQFE1  TQFE1          F13    TQFA4  TQFF3  TQFE1  <=
! E14    TQDD1  TQDE2  TQDE2          F14    TQDD1  TQDF4  TQDE2  <=
! E15    TQFA4  TQFE1  TQFE1          F15    TQFA4  TQFF3  TQFE1  <=
! E16    TQDD1  TQDE2  TQDE2          F16    TQDD1  TQDF4  TQDE2  <=
! E17    TQFA4  TQFE1  TQFE1          F17    TQFA4  TQFF3  TQFF3 
! E18    TQDD1  TQDE2  TQDE2          F18    TQDD1  TQDF4  TQDF4 
! E19    TQFA4  TQFE1  TQE19  <=      F19    TQFA4  TQFF3  TQFF3 
!                              	                                 
! E21    TQDD1  TQDE2  TQDE2          F21    TQDD1  TQDF4  TQDF4 
! E22    TQFA4  TQFE1  TQFE1          F22    TQFA4  TQFF3  TQFF3 
! E23    TQDD1  TQDE2  TQDE2          F23    TQDD1  TQDF4  TQDF4 
! E24    TQFA4  TQFE1  TQFE1          F24    TQFA4  TQFF3  TQFF3 
! E25    TQDD1  TQDE2  TQDE2          F25    TQDD1  TQDF4  TQDF4 
! E26    TQFA4  TQFE1  TQE26  <=      F26    TQFA4  TQFF3  TQFF3 
! E27    TQDD1  TQDE2  TQDE2          F27    TQDD1  TQDF4  TQDF4 
! E28    TQFA4  TQFE1  TQE28  <=      F28    TQFA4  TQFF3  TQF28  <=
! E29    TQDD1  TQDE2  TQDE2          F29    TQDD1  TQDF4  TQDF4 
!                              	                                 
! E32    TQFA4  TQFE1  TQFE1          F32    TQFA4  TQFF3  TQF32  <=
! E33    TQDD1  TQDE2  TQDE2          F33    TQDD1  TQDF4  JUMP   <= (T:QF33)
! E34    TQFA4  TQFE1  TQFE1          F34    TQFA4  TQFF3  TQFF3     (T:QF34)
! E35    TQDD1  TQDE2  TQDE2          F35    TQDD1  TQDF4  TQDF4 
! E36    TQFA4  TQFE1  TQFE1          F36    TQFA4  TQFF3  TQFF3 
! E37    TQDD1  TQDE2  TQDE2          F37    TQDD1  TQDF4  TQDF4 
! E38    TQFA4  TQFE1  TQFE1          F38    TQFA4  TQFF3  TQFF3 
! E39    TQDD1  TQDE2  TQDE2          F39    TQDD1  TQDF4  TQDF4 
!                              	                                 
! E42    TQFA4  TQFE1  TQFE1          F42    TQFA4  TQFF3  TQFF3 
! E43    TQDD1  TQDE2  TQDE2          F43    TQDD1  TQDF4  TQDF4 
! E44    TQFA4  TQFE1  TQFE1          F44    TQFA4  TQFF3  TQFF3 
! E45    TQDD1  TQDE2  TQDE2          F45    TQDD1  TQDF4  TQDF4 
! E46    TQFA4  TQFE1  TQFE1          F46    TQFA4  TQFF3  TQFF3 
! E47    TQDD1  TQDE2  TQE47  <=      F47    TQDD1  TQDF4  TQDF4 
! E48    ----   ----   ----           F48    ---   ----  ---- 
! E49    ----   ----   ----           F49    SQA0   SQA0  SQA0 
!
!
! -On Quads near some of the straight sections. 
!
!        47    48    49    0U    0D    11    12    13
!C0     66"D  32"F  83"F  99"D  99"F  83"D  32"D  66"F   (also E0 and F0)
!A0     66"D  25"F  90"D  99"F  99"D  90"F  25"D  66"F
!D0(FT) 66"D  55"F  83"D  99"F  99"D  83"F  55"D  66"F
!
! The 55" quads at C48 and D12 are the Q5's.
! A0 and D0 (FT) are high beta straights. 
!   Their 49, 0U, 0D, and 11 quads have the opposite polarity, compared to 
!    the C0, E0, and F0 straights, 
!   
! For Collider A0 has the abort, so we want the beams spread out. 
! For Fixed Target, the septa are at D0 and the Lambertsons are at A0. 
!   At the septa we want the beam spread out and we want the kick from the 
!     the septa to give a large displacement. 
!   At the Lambertsons, we want a large beta so the separation between
!     the extracted and the circulating beam is large. 
!
!
!
! - On 39th harmonic fixed target circuits.
!  The single Tevatron circuit T:Q39S is divided into two circuits 
!   in this file to account properly for the polarity of the magnets.
!  TQF39S (no tilt) and TQD39S (tilted pi/2 to give the opposite polarity).
!  TQF39S is located at B19 and C28.  
!  TQD39S is located at B28 and C19.
!
!  The single Tevatron circuit T:Q39C is divided into two circuits 
!   in this file to account properly for the polarity of the magnets.
!  TQF39C (no tilt) and TQD39C (tilted pi/2 to give the opposite polarity).
!  TQF39C is located at B24 and C34.  
!  TQD39C is located at B34 and C24.
!
!  The single Tevatron circuit T:O39S contains 15 octupole corrector
!   magnets.
!  They are at the 17, 19, 26, and 28 locations of E, F, B, and C sectors. 
!   (Except for B17, where the element was removed for the low beta insert.) 
!  T:O39S is divided into two circuits in this file to account properly 
!  for the polarity of the magnets.
!  TOF39S (no tilt) and TOD39S (pi/4 tilt to give opposite polarity).
!  TOF39S is located at E19, E26, F17, F28,      B28, C19, C26.
!  TOD39S is located at E17, E28, F19, F26, B19, B26, C17, C28.
!
!  The single Tevatron circuit T:OZF has 12 octupole magnets. 
!  They are located at the 36 and 42 locations of each of the six sectors.
!
!  The single Tevatron circuit T:OZD has 24 octupole magnets. 
!  They are at the 23, 27, 33, and 37 locations each of the six sectors.
!

! 11/30/98 mam
! Re-did PACKC49 and PACKD11 to get spool types and lengths correct.
!  PACKC49 and PACKD11 are P-type spools used in Run I (56.149 inch 
!   slot length, with power leads, horz and vert BPMs). 
!  PACKC49R2, PACKD11R2 are S-type spools used in fixed target 
!   and Run II (49.192 inch slot length, no power leads, only a vert BPM.)
!  Remember that the D11 spools are installed "backwards"
! Also changed location of horizontal BPM's at D11 to get them correct
!  for fixed target and run II.

! 11/13/98 mm
! Updated file to include changes near D0 for Run II 
!  removed Q1 low beta quad at C49 and D11
!  changed PACKC49 and PACKD11 into s-type spools PACKC49R2 and PACKD11R2
!  moved separators at C49 and D11 25 inches further away from D0 IR.
!  inserted FPD pots, at C48, C49, and D11.
!  substituted TQA42 in place of TQFA4 in PACKA42R2
!  substituted TQC42 in place of TQFA4 in PACKC42R2
!  separate trim quad circs in E and F sector for Run II beam halo scraping
!
! Updated file to include changes for the 1999 FT run.
!  put in the correct electrostatic septa lengths.
!  added E and F sector trim quad circuits
!  added definition of F0UPFT, F0DOWNFT, SEXTANTFFT to 
!  get RF Cavities into fixed target lattice.
!
! Updated file to include extra trim quad circuits
!  substituted TQE19, TQE26, TQE28, TQF28, TQF32, for TQFA4 and
!  and TQE47 for TQDD1 at the corrseponding locations
!  T:QF33 already exists in second package of F33 spool piece
!
!  Moved definition of MOMENTUM, BRHO, KBENDQ, QFA4, QDD1, SCHROMF, 
!   SCHROMD to separate lattice file.
!  Moved definition of low beta gradients (AQ0, B0Q3, B0Q4, etc.) to
!   separate lattice file. The "strengths" (KTRIMB0Q2, KTRIMBDB, etc.)
!   remain in this file and are defined in terms of the gradients.
!  Re-ordered definitions of low beta quads in this file.  

! 11/2/98 Mike Martens
!  Modified file to be consistent with the latest design of the 
!  C49 and D11 changes to accommodate the FPD roman pot detectors
!  - changed PACKC49 and PACKD11 from type-P to type-S spools
!  - moved separators 25 inches further from IR at both C49 and D11
!  - used latest LNLS design of roman pots which are 25 - 3.35 inches long
!  - rearranged ordering of the detectors in the roman pots 
!  - put markers at locations of fiber detectors.
!
! roman pots dimensions
! ---------------------
! total warm space needed (for pots + vacuum valve) is 25 inches = 0.63500
!
! vacuum valve flange-to-flange is 3.35 inches = 0.08509
! roman pot flange-to-flange is 25 - 3.35 inches = 0.54991
!
! pot flange to center of first detector is 0.184 meters (DFPDSPC1)
! center of detectors are 0.152 meters apart (DFPDSEP)
! second detector to pot flange is 
!  0.54991 - 0.184 - 0.152 = 0.21391 m (DFPDSPC2)
! 
! for all pot stations put inner and outer detectors closest to the D0 IR
!
! dipole pots in C48 straight section.
! -----------------------------------
! shorten C48 drift space by length of two roman pots
!  original 
!   DSTRAIGHT4: DRIFT, L = 2.805074
!  new
! drift = DSTRAIGHT4 - 2*(length of pot) = 2.805074 - 2 * ( 0.54991 )  
! (vacuum valves are already included)
!
! 
! remove Q1 low beta quadrupoles and move locations of new spool piece
! ---------------------------------------------------------------------
! original Q1 interface-to-interface or "slot length" is 1.849806 m = 72.827 in
!
! Removal of Q1, type-p spool, 
! and insertion of type-s spool, FPD pots, and vacuum valves
! still leaves extra warm space at C49 and D11.
! 
! Q1              = +1.849806 
! old pack c49    = +1.426184  (type-P)
! new pack C49    = -1.267714  (type-s)
! 2 FPD pots      = -1.09982  
! 2 vacuum valves = -0.17018  
!----------------   ----------
! gives           = 0.738276 meters (DFPDSPC4) of left over warm space

! 6/3/98 ppb, mm 
! Removed the TR3 from PACKE11 and PACKD49. When I had put the TSQE0 into
!  these spools, I didn't know what the TR3's were so I didn't mess with them.
!  But in fact the TR3's are the skew quad elements in these spools. 
! Also added a comment about the physically different dipole correctors. 

! 4/23/98 ppb
! No real changes, but added/modified a few comments. 
! Added notes that what are marked as PACKC48C and SPOOLD11 are 
!   actually barrier boxes and NOT spools. 
! Fixed a typo in a note about the naming conventions for the 
!   steerings in PACKC48A and PACKC48B. 
! Added notes explaining the purpose of the multiple spools at A48 and C48.

! 3/19/98 ppb
! Fixed typo in definitions of TQB15 and TQC45. 
! As long as B0 and D0 values were the same for the B15 and D15 quads
!  and the same for the A45 and C45 quads, this would NOT have had any effect.

! 9/7/97  ppb
! Adjusted the straights around the zero locations so that the zero markers
!     are multiples of 1/6 of the ring from MB0 and MD0. (to within about 1mm)
! Made a bunch of changes related to run II. 
!  New versions have an R2 suffix. I made changes to D,E, and F sectors.
!  In D sector, changed Dten, Dforty, and E0up.
!  In E sector, changed E0down, Eforty, and F0up.
!  In F sector, changed F0down and Ften. 
!    For E0up and E0down, replaced injection lamb. with collimation insert 
!          for proton removal. This includes 4 b2 magnets used as doglegs.
!          ME0 is inside a b2 magnet, so I split the b2 magnet into 2 pieces. 
!          In this file the b2's are turned OFF. 
!    For F0up and F0down, put in RF cavities and the injection lamb.
!          several of the positions are approximate. They were measured off
!          of drawings with a ruler. 
!    For Dten, at D17, put in a new version of the scraping/collimation insert.
!    For Dforty, at D48, put in a horz separator. 
!    For Eforty, at E48, put in pbar injection kickers. 
!    For Ften, at F17, removed the F17 horz separator and filled the F17 
!              straight with proton injection kickers and a scraping insert.

! 1/7/97  ppb
! Moved the A17 vertical separator from the upstream to the downstream
! end of the A17 warm straight section.

! Heavily modified 7/29 - 8/6/96  ppb
!   Most or all of these changes are just translations for MAD of what
!   Mike Martens and Andrew Braun had done. 

! At C19, switched one of the two TO39S to a TQ39S. 
! At C24, switched TO39C to a TQ39C.

! There are 42 elements of TSQ. 
! They are at the 13, 17, 22, 26, 32, 36, 42 and 46 locations. 
! except for A46, B13, B17, C46, D13, and D17.
!  Made all the skew quad circuits into multipoles rather than quads so 
!    they can have zero length but non-zero strengths. 

! At F39, removed TOZF.
! At D36, added   TOZF.
! There are now 12 elements of TOZF. 
! They are at all the 36 and 42 locations.

! There are 24 elements of TOZD. 
! They are at all the 23, 27, 33, and 37 locations. 

! Broke up TQ39S into two different elements, 
!  TQF39S (no tilt) and TQD39S (tilted pi/2 to give the opposite polarity).
!  Also made these multipoles rather than quads so they can have zero length
!    but non-zero strengths. 
!  TQF39S is at B19 and C28,  TQD39S is at B28 and C19.

! Broke up TQ39C into two different elements, 
!  TQF39C (no tilt) and TQD39C (tilted pi/2 to give the opposite polarity).
!  Also made these multipoles rather than quads so they can have zero length
!    but non-zero strengths. 
!  TQF39C is at B24 and C34,  TQD39C is at B34 and C24.

! At F17, added TO39S. 
! At B19, added TO39S.
! There are now 15 elements of TO39S, 
!  at the 17, 19, 26, and 28 locations of E, F, B, and C sectors. 
!  However the B17 element was removed for the low beta insert. 
! Broke up TO39S into two different elements,
!   TOF39S (no tilt) and TOD39S (pi/4 tilt to give opposite polarity).
!  TOF39S is at E19, E26, F17, F28,      B28, C19, C26.
!  TOD39S is at E17, E28, F19, F26, B19, B26, C17, C28.

! Put in 16 elements of TO39C. 
!   These are at the 22, 24, 32, and 34 locations in E, F, B, and C sectors.
! Used two families, 
!   TOF39C (no tilt) and TOD39C (pi/4 tilt to give opposite polarity).
!  TOF39C is at E24, E32, F22, F34, B22, B34, C24, C32.
!  TOD39C is at E22, E34, F24, F32, B24, B32, C22, C34.

! Added TSD   to spool at B43
! Added VDE11 to spool at E11.
! Added HDE49 to spool at E49.
! Added VDF11 to spool at F11.
! Added HDF49 to spool at F49.
! Added VDC11 to spool at C11.
! Added HDB49 to spool at B49.
! Added HDD49 to spool at D49.
! Removed CS1C2A from spool at C29.
! Removed unused multipole circuit TH3 because I realized this was 
!    there was only one element and it was a typo. 
!    It was at F34 and should have been a TH2.
! Removed unused multipole circuit TH2 because I realized this was 
!    another name for TO39C. 
! Corrected the name for the feed down sextupole in A24, 
!    changed it from CS2A3A to CS3A2A. 

! Put in LAMB and CMAG's at C0 for the C0 Abort. 
! Put in the proton and pbar sync light source points in C11.
! Put TSQE0 into PACKE11 and PACKD49.

! 
! constants
! 

!------------------------------------------------------
! Begin file insertion: v3h01v2_new_new.lat
!------------------------------------------------------
!------------- start of v3h01v2_new_new.lat ------------------------------

!option, -echo, verify

! momentum is in units of TeV, BRHO is in units of kG-meter
! BRHO = 3335.6400869 kG-meter at 1 Tev
MOMENTUM := 0.150    
BRHO := 3335.6400869 * MOMENTUM

beam, pc=150, particle=proton

! Strengths of main bus quads. 
! Units are in m^-2 ( or kG/m / BRHO )
! This corresponds to 76.0 T/m at 1 TeV. 
MAINBUSF := 0.0227724747 
MAINBUSD := -MAINBUSF

! The following quad strengths are in Tesla/m (	C49 units are kG/m )
! These are divided by BRHO to become the K1 of the MAD quadrupole

! pbh01i11, beta(x,y)* = (161.,174.) cm, uses AQ8

AQB     :=   -2.012395 / 0.9 * MOMENTUM
AQ0     :=   10.56755  / 0.9 * MOMENTUM
AQ9     :=  -22.35016  / 0.9 * MOMENTUM
AQ8     :=   -7.819089 / 0.9 * MOMENTUM
AQ7     :=   34.28544  / 0.9 * MOMENTUM
B0Q6UP  :=  -23.85628  / 0.9 * MOMENTUM
B0QT6UP :=    7.999998 / 0.9 * MOMENTUM

B0Q5UP  :=   23.81063  / 0.9 * MOMENTUM
B0Q1UP  :=    0.0      / 0.9 * MOMENTUM
B0Q2UP  :=  120.1891   / 0.9 * MOMENTUM
B0Q3UP  := -120.0889   / 0.9 * MOMENTUM
B0Q4UP  :=   B0Q2UP 

B0Q4DOWN := -B0Q2UP 
B0Q3DOWN := -B0Q3UP
B0Q2DOWN := -B0Q2UP
B0Q1DOWN :=   0.0 
B0Q5DOWN := -B0Q5UP

B0Q6DOWN := -B0Q6UP
B0QT6DOWN:=  B0QT6UP
BQ7     :=  -34.83883  / 0.9 * MOMENTUM
BQ8     :=    7.995186 / 0.9 * MOMENTUM
BQ9     :=   31.34052  / 0.9 * MOMENTUM
BQ0     :=  -24.35793  / 0.9 * MOMENTUM

! These are the settings for the D0 Low beta quads.
! They are nominally the same as B0.

CQB := AQB
CQ0 := AQ0
CQ9 := AQ9
CQ8 := AQ8
CQ7 := AQ7
D0Q6UP   :=  B0Q6UP
D0QT6UP  :=  B0QT6UP

D0Q5UP   :=  B0Q5UP
D0Q1UP   :=  B0Q1UP
D0Q2UP   :=  B0Q2UP
D0Q3UP   :=  B0Q3UP
D0Q4UP   :=  B0Q4UP

D0Q4DOWN :=  B0Q4DOWN
D0Q3DOWN :=  B0Q3DOWN
D0Q2DOWN :=  B0Q2DOWN
D0Q1DOWN :=  B0Q1DOWN
D0Q5DOWN :=  B0Q5DOWN

D0Q6DOWN :=  B0Q6DOWN
D0QT6DOWN:=  B0QT6DOWN
DQ7 := BQ7
DQ8 := BQ8
DQ9 := BQ9
DQ0 := BQ0

! This is the strength (in 1/m) of the thin quad placed 
! at each end of all the main dipoles.
! These are in the lattice model get the measured and
! calculated tune in closer agreement. 
KBENDQ := 2.259873E-05


! These small changes fix the tunes. 
! The following trim quad strengths are in Tesla/m
! These are divided by BRHO to become the K1 of the MAD quadrupole
QFA4 :=   1.437086E-04 * 3335.6400869 * MOMENTUM 
QDD1 :=  -7.595278E-04 * 3335.6400869 * MOMENTUM 

QFE1 := QFA4
QDE2 := QDD1
QFF3 := QFA4
QDF4 := QDD1

QE19 := QFA4
QE26 := QFA4
QE28 := QFA4
QF28 := QFA4
QF32 := QFA4

QE47 := QDD1
QF33 := QDD1

! These are the gradients of the skew quadrupoles 
! corrector magnets in the Tevatron
KSQ := 0.0
KSQA0 := 0.0
KSQA4 := 0.0
KSQB1 := 0.0
KSQD0 := 0.0
KSQE0 := 0.0


! 39th harmonics are off in Collider
Q39SINT := 0.0
Q39CINT := 0.0

! Strength of sextupole in chromaticity circuits
! Units are K2L = (length  * kG/m / BRHO) = m^-1 
!           K2L = ( L/BRHO)(d^2 B_y / dx^2)
! For BEAMLINE code use thinSextupole with strength =  K2L / 2.0 * BRHO 
SCHROMD := -128.5583991 * MOMENTUM
SCHROMF :=   77.9542956 * MOMENTUM

! These are the strengths of the feedown circuits.
! Units are (????)
! Units are K2L = (length  * kG/m / BRHO) = m^-1 
!           K2L = ( L/BRHO)(d^2 B_y / dx^2)

! For BEAMLINE code use thinSextupole with strength =  K2L / 2.0 * BRHO 
S1INTSTR := 0.0
S2INTSTR := 0.0
S3INTSTR := 0.0
S4INTSTR := 0.0
S5INTSTR := 0.0
S6INTSTR := 0.0
S7INTSTR := 0.0


! Separator strengths are in MV/m.
! approximate bend angle is theta(ur) = E_MAD(MV/m)*2.57175(m)/E(Tev)
! E_MAD(MV/m) = 2 * V_SEP(MV) / 0.05 meters
! psgn = -1 for pbar orbit,
!         0 for no helix 
!         1 for proton orbit, 

psgn  := 1.0 
injhsgn := -1.0
injvsgn := -1.0

beam, particle=proton, energy= 150.0

B11HANG :=  1.480  *psgn*injhsgn
B17HANG := -2.574  *psgn*injhsgn    ! kicks protons radial outward
C49HANG :=  0.00                    

D11HANG :=  0.00
D48HANG :=  0.00
F17HANG :=  0.0
A49HANG :=  0.00

B11VANG :=  0.905  *psgn*injvsgn
C17VANG :=  2.615  *psgn*injvsgn    ! kicks protons downward
C49VANG :=  0.00   

D11VANG :=  0.00   
A17VANG :=  0.00
A49VANG :=  0.00                  

!------------------ end of v3h01v2_new_new.lat -----------------
!------------------------------------------------------
! End file insertion: v3h01v2_new_new.lat
!------------------------------------------------------

TWOPI  := 6.2831853072
NBENDS := 774.0
BANGLE := TWOPI / NBENDS ! approx. 8.12 mrad
HANGLE =     3.87625450E-03     ! From N. Gelfand file
LAMBBANGLE = 1.83577060E-03     ! From N. Gelfand file
CMAGBANGLE = 1.48790000E-03     ! Changed slightly to make 
! 2*HANGLE + 3*LAMBANGLE + 2*CMAGANGLE = 2*BANGLE = 0.016235621
DOGANGLE = 3.272764E-3

LBFIELD  = 6.1214
LHBFIELD = 2.921        ! half dipole length according to Norm G.
LLAMB    = 5.521706     ! C0 abort lambertson
LCMAG    = 3.73888      ! C0 C-magnet
LDOGBEND = 6.0706       ! 239 inches
LSEPTA   = 3.5433

! -----------------------------
! main dipoles
! -----------------------------

! Next 4 are defined but never used. They are the magnetic fields in Tesla. 
BENDFIELD  = BANGLE*BRHO/LBFIELD
HBENDFIELD = HANGLE*BRHO/LHBFIELD
LAMBFIELD  = LAMBBANGLE*BRHO/LLAMB
CMAGFIELD  = CMAGBANGLE*BRHO/LCMAG

BEND:      SBEND, L = LBFIELD,  ANGLE = BANGLE
BENDQ:     MULTIPOLE, K1L = KBENDQ
HBEND:     SBEND, L = LHBFIELD, ANGLE = HANGLE
LAMBBEND:  SBEND, L = LLAMB,    ANGLE = LAMBBANGLE
CMAGBEND:  SBEND, L = LCMAG,    ANGLE = CMAGBANGLE

! Next bends are added for fixed target
!  They are the dogleg at D0 around the extraction septa and are on 
!  the Tevatron Main Bus. 
!  The distance between the upstream DOGPBEND, DOGMBEND is about 4 cm
!    different from the distance between the downstream DOGPBEND, DOGMBEND.
!    As a result, when these are on, the closure of the Tevatron is 
!    changed slightly. (This can only be seen in the results of a survey
!    command.) The D0BUMPK1 and D0BUMPK2 are probably intended to 
!    be used as small adjustments to close this bump, but I have not
!    ever used them for this.        ppb
DOGPBEND:  SBEND, L = LDOGBEND, ANGLE =  DOGANGLE
DOGMBEND:  SBEND, L = LDOGBEND, ANGLE = -DOGANGLE

! E0DOGP and E0DOGM are for the proton removal insert in E0. 
! They have their own power supply, the Transrex that used to be used for
!   the E0 Lambertsons. 
!  Most of the time these will be off. When they are turned on, they 
!   will bend the beams by DOGANGLE (see above)
! E0DOGBEND :=  3.272764E-3  
!  Notice that E0DOGP has a kick of -E0DOGBEND.
!    A positive kick is the same sign as the main bends. 
!    The E0 dogleg should displace the beam to the radial OUTSIDE.
!  I've chosen to put them in as closed orbit correctors to make it
!   easy to see how much they move the beam. (If I put them in as regular
!   bends, I would have to do a survey and figure out how much it moves.)
!     ppb   9/12/97
E0DOGBEND := 0.0
E0DOGP:    HKICKER, L=LDOGBEND, KICK = -E0DOGBEND
E0DOGM:    HKICKER, L=LDOGBEND, KICK =  E0DOGBEND

! Next two are just E0DOGM split into two pieces. ME0 is in between them. 
!   Modified LME01 on 1/5/99. ppb
LME01 := 1.2376306
LME02 := LDOGBEND - LME01
E0DOGK1 :=  E0DOGBEND*(LME01/LDOGBEND)
E0DOGK2 :=  E0DOGBEND*(LME02/LDOGBEND)
E0DOGMP1:  HKICKER, L=LME01, KICK = E0DOGK1
E0DOGMP2:  HKICKER, L=LME02, KICK = E0DOGK2


! ------------------------ 
! low beta quad strengths
! ------------------------ 

KTRIMBBD := AQB / BRHO
KTRIMBAF := AQ0 / BRHO
KTRIMB9D := AQ9 / BRHO
KTRIMB8D := AQ8 / BRHO
KTRIMB7F := AQ7 / BRHO
KTRIMB6D := B0Q6UP  / BRHO
KTRIMBT6D:= B0QT6UP / BRHO

KB0Q5D := B0Q5UP / BRHO
KB0Q1D := B0Q1UP / BRHO
KB0Q2F := B0Q2UP / BRHO
KB0Q3D := B0Q3UP / BRHO
KB0Q4F := B0Q4UP / BRHO

KB0Q4D := B0Q4DOWN / BRHO
KB0Q3F := B0Q3DOWN / BRHO
KB0Q2D := B0Q2DOWN / BRHO
KB0Q1F := B0Q1DOWN / BRHO
KB0Q5F := B0Q5DOWN / BRHO

KTRIMB6F := B0Q6DOWN  / BRHO
KTRIMBT6F:= B0QT6DOWN / BRHO
KTRIMB7D := BQ7 / BRHO
KTRIMB8F := BQ8 / BRHO
KTRIMB9F := BQ9 / BRHO
KTRIMBAD := BQ0 / BRHO


KTRIMDBD := CQB / BRHO
KTRIMDAF := CQ0 / BRHO
KTRIMD9D := CQ9 / BRHO
KTRIMD8D := CQ8 / BRHO
KTRIMD7F := CQ7 / BRHO
KTRIMD6D := D0Q6UP  / BRHO
KTRIMDT6D:= D0QT6UP / BRHO

KD0Q5D := D0Q5UP / BRHO
KD0Q1D := D0Q1UP / BRHO
KD0Q2F := D0Q2UP / BRHO
KD0Q3D := D0Q3UP / BRHO
KD0Q4F := D0Q4UP / BRHO

KD0Q4D := D0Q4DOWN / BRHO
KD0Q3F := D0Q3DOWN / BRHO
KD0Q2D := D0Q2DOWN / BRHO
KD0Q1F := D0Q1DOWN / BRHO
KD0Q5F := D0Q5DOWN / BRHO

KTRIMD6F := D0Q6DOWN  / BRHO
KTRIMDT6F:= D0QT6DOWN / BRHO
KTRIMD7D := DQ7 / BRHO
KTRIMD8F := DQ8 / BRHO
KTRIMD9F := DQ9 / BRHO
KTRIMDAD := DQ0 / BRHO

! Next two are the main QF and QD circuits for A-D sectors
KQFA4 := QFA4 / BRHO
KQDD1 := QDD1 / BRHO

! Next two are the QF and QD circuits for E sector
KQFE1 := QFE1 / BRHO
KQDE2 := QDE2 / BRHO
! Next two are the QF and QD circuits for F sector
KQFF3 := QFF3 / BRHO
KQDF4 := QDF4 / BRHO

! Next two are for the Q39S and Q39C circuits
KQ39SINT := Q39SINT / BRHO
KQ39CINT := Q39CINT / BRHO

! Next 2 sets are individual tune quads. 
!   The set of 5 (E19, E26, E28, F28, and F32) are at horz foc. locations
!   The set of 2 (E47 and F33) are at horz defoc. locations. 
KQE19 := QE19 / BRHO
KQE26 := QE26 / BRHO
KQE28 := QE28 / BRHO
KQF28 := QF28 / BRHO
KQF32 := QF32 / BRHO

KQE47 := QE47 / BRHO
KQF33 := QF33 / BRHO


! ------------------------
! quad lengths
! ------------------------ 
LQUAD  := 1.67894     !  66.10" , standard arc quad
LQUAD1 := 2.5248      !  99.40+"
LQUAD2 := 2.101088    !  82.72"
LQUAD3 := 0.814578    !  32.07",  used at C0, E0, and F0
LQUAD4 := 2.2908      !  90.19-", only used at A0
LQUAD5 := 0.6477      !  25.50",  only used at A0
LQUADC := 0.762       !  30.00",  These are the tune quads in the spool pieces
LQUADINNER := 5.8928  ! These are the Q3's
LQUADLB4 := 1.401826  ! These are the Q1's
LQUADLB5 := LQUADLB4  ! These are the Q5's
LQUADOUTER := 3.3528  ! These are the Q2's and Q4's
LTRIM  := 0.635       ! These are the Q7's, Q9's, and Q0's
LTRIM6 := 0.606425    ! These are the Q6's 


! -----------
! Quadrupoles
! -----------

! The next block of quads are all on the Main Tevatron Bus.
HQUADF:   QUADRUPOLE, L = LQUAD,  K1 = MAINBUSF   ! Standard arc quad
HQUADD:   QUADRUPOLE, L = LQUAD,  K1 = MAINBUSD   ! Standard arc quad
HQUAD1F:  QUADRUPOLE, L = LQUAD1, K1 = MAINBUSF   ! 99.40+" quad
HQUAD1D:  QUADRUPOLE, L = LQUAD1, K1 = MAINBUSD
HQUAD2F:  QUADRUPOLE, L = LQUAD2, K1 = MAINBUSF   ! 82.72"  quad
HQUAD2D:  QUADRUPOLE, L = LQUAD2, K1 = MAINBUSD
HQUAD3F:  QUADRUPOLE, L = LQUAD3, K1 = MAINBUSF   ! 32.07"  quad
HQUAD3D:  QUADRUPOLE, L = LQUAD3, K1 = MAINBUSD
HQUAD4F:  QUADRUPOLE, L = LQUAD4, K1 = MAINBUSF   ! 90.19-" quad
HQUAD4D:  QUADRUPOLE, L = LQUAD4, K1 = MAINBUSD
HQUAD5F:  QUADRUPOLE, L = LQUAD5, K1 = MAINBUSF   ! 25.50"  quad
HQUAD5D:  QUADRUPOLE, L = LQUAD5, K1 = MAINBUSD


TQA42:    QUADRUPOLE, L = LQUADC,     K1 = KTRIMBBD
CAQ0:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMBAF
CAQ9:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMB9D
TQA45:    QUADRUPOLE, L = LQUADC,     K1 = KTRIMB8D
CAQ7:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMB7F
CB0Q6D:   QUADRUPOLE, L = LTRIM6,     K1 = KTRIMB6D
CB0QT6D:  QUADRUPOLE, L = 0.5*LQUADC, K1 = KTRIMBT6D

CB0Q5D:   QUADRUPOLE, L = LQUADLB5,   K1 = KB0Q5D
CB0Q1D:   QUADRUPOLE, L = LQUADLB4,   K1 = KB0Q1D
CB0Q2F:   QUADRUPOLE, L = LQUADOUTER, K1 = KB0Q2F
CB0Q3D:   QUADRUPOLE, L = LQUADINNER, K1 = KB0Q3D
CB0Q4F:   QUADRUPOLE, L = LQUADOUTER, K1 = KB0Q4F

CB0Q4D:   QUADRUPOLE, L = LQUADOUTER, K1 = KB0Q4D
CB0Q3F:   QUADRUPOLE, L = LQUADINNER, K1 = KB0Q3F
CB0Q2D:   QUADRUPOLE, L = LQUADOUTER, K1 = KB0Q2D
CB0Q1F:   QUADRUPOLE, L = LQUADLB4,   K1 = KB0Q1F
CB0Q5F:   QUADRUPOLE, L = LQUADLB5,   K1 = KB0Q5F

CB0Q6F:   QUADRUPOLE, L = LTRIM6,     K1 = KTRIMB6F
CB0QT6F:  QUADRUPOLE, L = 0.5*LQUADC, K1 = KTRIMBT6F
CBQ7:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMB7D
TQB15:    QUADRUPOLE, L = LQUADC,     K1 = KTRIMB8F
CBQ9:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMB9F
CBQ0:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMBAD


TQC42:    QUADRUPOLE, L = LQUADC,     K1 = KTRIMDBD
CCQ0:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMDAF
CCQ9:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMD9D
TQC45:    QUADRUPOLE, L = LQUADC,     K1 = KTRIMD8D
CCQ7:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMD7F
CD0Q6D:   QUADRUPOLE, L = LTRIM6,     K1 = KTRIMD6D
CD0QT6D:  QUADRUPOLE, L = 0.5*LQUADC, K1 = KTRIMDT6D

CD0Q5D:   QUADRUPOLE, L = LQUADLB5,   K1 = KD0Q5D
CD0Q1D:   QUADRUPOLE, L = LQUADLB4,   K1 = KD0Q1D
CD0Q2F:   QUADRUPOLE, L = LQUADOUTER, K1 = KD0Q2F
CD0Q3D:   QUADRUPOLE, L = LQUADINNER, K1 = KD0Q3D
CD0Q4F:   QUADRUPOLE, L = LQUADOUTER, K1 = KD0Q4F

CD0Q4D:   QUADRUPOLE, L = LQUADOUTER, K1 = KD0Q4D
CD0Q3F:   QUADRUPOLE, L = LQUADINNER, K1 = KD0Q3F
CD0Q2D:   QUADRUPOLE, L = LQUADOUTER, K1 = KD0Q2D
CD0Q1F:   QUADRUPOLE, L = LQUADLB4,   K1 = KD0Q1F
CD0Q5F:   QUADRUPOLE, L = LQUADLB5,   K1 = KD0Q5F

CD0Q6F:   QUADRUPOLE, L = LTRIM6,     K1 = KTRIMD6F
CD0QT6F:  QUADRUPOLE, L = 0.5*LQUADC, K1 = KTRIMDT6F
CDQ7:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMD7D
TQD15:    QUADRUPOLE, L = LQUADC,     K1 = KTRIMD8F
CDQ9:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMD9F
CDQ0:     QUADRUPOLE, L = LTRIM,      K1 = KTRIMDAD


! House locations of HOPs supplies for the tune quads are given by 
!   the last 2 characters of the name. 
!    TQFA4  A4
!    TQFE1  E1
!    TQFF3  F3
!    TQDD1  D1
!    TQDE2  E2
!    TQDF4  F4

TQFA4:    QUADRUPOLE, L = LQUADC, K1 = KQFA4
TQDD1:    QUADRUPOLE, L = LQUADC, K1 = KQDD1

! For Fixed Target mode, we'll use the separate control of the E and F sector
!    tune quads to get the extracted beam through the F0 injection Lamb.
! For Collider mode, we'll use the separate control of the E and F sector
!    tune quads to adjust the separation between the beams at the F17
!    collimators. 

TQFE1:    QUADRUPOLE, L = LQUADC, K1 = KQFE1
TQDE2:    QUADRUPOLE, L = LQUADC, K1 = KQDE2
TQFF3:    QUADRUPOLE, L = LQUADC, K1 = KQFF3
TQDF4:    QUADRUPOLE, L = LQUADC, K1 = KQDF4

! The next 7 tune quads on individual regulators are intended for use
!   in Collider mode to cancel the beta waves and horz dispersion wave
!   outside of E and F sectors. 

! The next 5 tune quads are all at horz. focusing locations.
TQE19:    QUADRUPOLE, L = LQUADC, K1 = KQE19
TQE26:    QUADRUPOLE, L = LQUADC, K1 = KQE26
TQE28:    QUADRUPOLE, L = LQUADC, K1 = KQE28
TQF28:    QUADRUPOLE, L = LQUADC, K1 = KQF28
TQF32:    QUADRUPOLE, L = LQUADC, K1 = KQF32

! The next 2 tune quads are at vert. focusing locations.
TQE47:    QUADRUPOLE, L = LQUADC, K1 = KQE47
TQF33:    QUADRUPOLE, L = LQUADC, K1 = KQF33


TQF34:    QUADRUPOLE, L = LQUADC, K1 = 0

A0QXR:    QUADRUPOLE, L =  1.016, K1 = 0.
D0QXR:    QUADRUPOLE, L =  1.016, K1 = 0.
A0BUK:    QUADRUPOLE, L =  1.016, K1 = 0.
D0BUK:    QUADRUPOLE, L =  1.016, K1 = 0.

! Multipoles have 0 length.
! Use the tilt parameter to change the polarity of magnet.
TQF39S:   MULTIPOLE, K1L = KQ39SINT
TQD39S:   MULTIPOLE, K1L = KQ39SINT, T1 = PI/2

TQF39C:   MULTIPOLE, K1L = KQ39CINT
TQD39C:   MULTIPOLE, K1L = KQ39SINT, T1 = PI/2


TSQ:      MULTIPOLE, K1L = KSQ,   T1 = PI / 4
TSQA0:    MULTIPOLE, K1L = KSQA0, T1 = PI / 4
TSQA4:    MULTIPOLE, K1L = KSQA4, T1 = PI / 4
TSQB1:    MULTIPOLE, K1L = KSQB1, T1 = PI / 4
TSQD0:    MULTIPOLE, K1L = KSQD0, T1 = PI / 4
TSQE0:    MULTIPOLE, K1L = KSQE0, T1 = PI / 4


!
! Sextupoles
!

! Chromaticity circuites
TSF:      MULTIPOLE, K2L = SCHROMF / BRHO
TSD:      MULTIPOLE, K2L = SCHROMD / BRHO

! 
! Feed down sextupoles 
! P (plus) and M (minus) refer to the polarity of 
! individual magnets connected to a single supply
! (Some supplies have only one magnet.)
!
! Use tilt parameter to change polarity.
! Tilt by +TWOPI/6   changes polarity
! Tilt by -TWOPI/12  skews the sextupole
! Tilt by +TWOPI/6 - TWOPI/12 = TWOPI/12 skews and changes polarity
!
CS1E2AP:   MULTIPOLE, type= fdsext, K2L = S1INTSTR
CS1E2AM:   MULTIPOLE, type= fdsext, K2L = S1INTSTR, T2 = TWOPI / 6
CS1F2AP:   MULTIPOLE, type= fdsext, K2L = S1INTSTR
CS1F2AM:   MULTIPOLE, type= fdsext, K2L = S1INTSTR, T2 = TWOPI / 6
CS1F3AP:   MULTIPOLE, type= fdsext, K2L = S1INTSTR
CS1F3AM:   MULTIPOLE, type= fdsext, K2L = S1INTSTR, T2 = TWOPI / 6
CS1B1AM:   MULTIPOLE, type= fdsext, K2L = S1INTSTR, T2 = TWOPI / 6
CS1B3AP:   MULTIPOLE, type= fdsext, K2L = S1INTSTR
CS1C2AP:   MULTIPOLE, type= fdsext, K2L = S1INTSTR
CS1C2AM:   MULTIPOLE, type= fdsext, K2L = S1INTSTR, T2 = TWOPI / 6

CS2F1AP:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = -TWOPI / 12
CS2F1AM:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = TWOPI / 12
CS2F2AP:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = -TWOPI / 12
CS2F4AM:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = TWOPI / 12
CS2A1AM:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = TWOPI / 12
CS2A3AP:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = -TWOPI / 12
CS2B4AP:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = -TWOPI / 12
CS2B4AM:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = TWOPI / 12
CS2C3AP:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = -TWOPI / 12
CS2C3AM:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = TWOPI / 12
CS2D2AP:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = -TWOPI / 12
CS2D2AM:   MULTIPOLE, type= fdsext, K2L = S2INTSTR, T2 = TWOPI / 12

CS3E1AP:   MULTIPOLE, type= fdsext, K2L = S3INTSTR, T2 = -TWOPI / 12
CS3E1AM:   MULTIPOLE, type= fdsext, K2L = S3INTSTR, T2 = TWOPI / 12
CS3E3AP:   MULTIPOLE, type= fdsext, K2L = S3INTSTR, T2 = -TWOPI / 12
CS3E3AM:   MULTIPOLE, type= fdsext, K2L = S3INTSTR, T2 = TWOPI / 12
CS3A2AP:   MULTIPOLE, type= fdsext, K2L = S3INTSTR, T2 = -TWOPI / 12
CS3A2AM:   MULTIPOLE, type= fdsext, K2L = S3INTSTR, T2 = TWOPI / 12
CS3D2AP:   MULTIPOLE, type= fdsext, K2L = S3INTSTR, T2 = -TWOPI / 12
CS3D2AM:   MULTIPOLE, type= fdsext, K2L = S3INTSTR, T2 = TWOPI / 12
CS3D4AP:   MULTIPOLE, type= fdsext, K2L = S3INTSTR, T2 = -TWOPI / 12
CS3D4AM:   MULTIPOLE, type= fdsext, K2L = S3INTSTR, T2 = TWOPI / 12

CS4F2AP:   MULTIPOLE, type= fdsext, K2L = S4INTSTR
CS4F2AM:   MULTIPOLE, type= fdsext, K2L = S4INTSTR, T2 = TWOPI / 6
CS4C2AP:   MULTIPOLE, type= fdsext, K2L = S4INTSTR
CS4C2AM:   MULTIPOLE, type= fdsext, K2L = S4INTSTR, T2 = TWOPI / 6
CS4C2BP:   MULTIPOLE, type= fdsext, K2L = S4INTSTR
CS4C2BM:   MULTIPOLE, type= fdsext, K2L = S4INTSTR, T2 = TWOPI / 6

CS5F1AM:   MULTIPOLE, type= fdsext, K2L = S5INTSTR, T2 = TWOPI / 12
CS5F3AP:   MULTIPOLE, type= fdsext, K2L = S5INTSTR, T2 = -TWOPI / 12
CS5A2AP:   MULTIPOLE, type= fdsext, K2L = S5INTSTR, T2 = -TWOPI / 12
CS5A3AM:   MULTIPOLE, type= fdsext, K2L = S5INTSTR, T2 = TWOPI / 12
CS5D3AP:   MULTIPOLE, type= fdsext, K2L = S5INTSTR, T2 = -TWOPI / 12
CS5D3AM:   MULTIPOLE, type= fdsext, K2L = S5INTSTR, T2 = TWOPI / 12

CS6A4AP:   MULTIPOLE, type= fdsext, K2L = S6INTSTR
CS6C4AM:   MULTIPOLE, type= fdsext, K2L = S6INTSTR, T2 = TWOPI / 6

CS7B1AP:   MULTIPOLE, type= fdsext, K2L = S7INTSTR
CS7D1AP:   MULTIPOLE, type= fdsext, K2L = S7INTSTR

!
! Octupoles
!

TOZF:     MULTIPOLE, K3L = 0
TOZD:     MULTIPOLE, K3L = 0
TOF39S:   MULTIPOLE, K3L = 0
TOD39S:   MULTIPOLE, K3L = 0, T3 = pi/4.  ! tilt changes the sign of oct.
TOF39C:   MULTIPOLE, K3L = 0
TOD39C:   MULTIPOLE, K3L = 0, T3 = pi/4.  ! tilt changes the sign of oct.


! -------------------
! drifts
! -------------------
DQUAD1END: DRIFT, L = 0.184963
DBPMIN:    DRIFT, L = 0.260655
DBPMIN1:   DRIFT, L = 0.182677
DBPMOUT:   DRIFT, L = 0.200025
DBPMOUT1:  DRIFT, L = 0.159004
DHQUADC:   DRIFT, L = 0.5 * LQUADC
DBENDEND:  DRIFT, L = 0.1397
DQOUT:     DRIFT, L = 0.17178
DQOUT1:    DRIFT, L = 0.227381
DPACKIN:   DRIFT, L = 0.142875
DPACKIN2:  DRIFT, L = 0.170231
DPACKIN3:  DRIFT, L = 0.184519
DPIN5LOC:  DRIFT, L = 0.168275
DPACKU2D:  DRIFT, L = 0.4064
DPACKU2D2: DRIFT, L = 0.502818
DPACKU2D3: DRIFT, L = 0.136106
DPACKU2D4: DRIFT, L = 0.4064 - 0.762/2.0
DPACKOUT:  DRIFT, L = 0.517525
DPACKOUT1: DRIFT, L = 0.164033
DPACKOUT2: DRIFT, L = 0.520751
DPACKOUT3: DRIFT, L = 0.139751
DPACKOUT4: DRIFT, L = 0.517525 - 0.762/2.0
DPOUT5LOC: DRIFT, L = 0.161925
DFCANIN:   DRIFT, L = 0.20955
FCAN:      DRIFT, L = 0.4445
DFCANOUT:  DRIFT, L = 0.08255
DCOLD1:    DRIFT, L = 0.301625
DCOLD2:    DRIFT, L = 0.428625
DE11END:   DRIFT, L = 1.113676
DE11MID:   DRIFT, L = 0.2159
DE17A:     DRIFT, L = 4.18465
DE17B:     DRIFT, L = 3.254375
DE17C:     DRIFT, L = 1.84785
DE17D:     DRIFT, L = 2.365375
MEDSTR:    DRIFT, L = 0.4191
! Changes to DLONG1, DLONG4, and DLONG5 will make the 0 markers
!   almost exactly 1/6 of the ring from each other. (+- about 1mm)  ppb  9/4/97
DLONG1:    DRIFT, L = 26.259612 + 0.151

! DLONG2 was only used between the B0 and D0 IP's and the 
!  first elements of the triplets. 
! The next 6 replace the DLONG2 at B0 and at D0.
!  These are split into the sections with different beam pipe
!  diameters. The ID values and lengths came from Mike Church.
!  These values and lengths are for Run II, but since this is just
!  replacing a drift with other drifts I've also put this into the
!  Run I versions. 
!      ppb 1/6/99
!  DLONG2: DRIFT, L = 7.362825

DB0A:      DRIFT, L = 0.58674   ! 23.1", ID of  0.83" = ~21.1 mm
DB0B:      DRIFT, L = 1.07696   ! 42.4", ID of  1.19" = ~30.2 mm
DB0C:      DRIFT, L = 5.699125  !        ID of ~2.00" (?) = 50.8 mm

DD0A:      DRIFT, L = 1.5113    ! 59.5", ID of  1.37" = ~34.8 mm
DD0B:      DRIFT, L = 0.3048    ! 12.0", ID of  1.42" = ~36.1 mm
DD0C:      DRIFT, L = 5.546725  !        ID of  1.89" = ~48.0 mm 

!  DLONG3:    DRIFT, L = 22.218548 This is old value for no C0 abort lamb.
DLONG3:    DRIFT, L = 4.809325 
DLONG4:    DRIFT, L = 26.564412 - 0.151  ! Used at F0 for Run I and at
                                         !   A0 for Run I and Run II. 
DLONG5:    DRIFT, L = 14.320012 - 0.152  ! Only used at E0 for Run I and FT
DSEPEND:   DRIFT, L = 0.320777
DSEPEND1:  DRIFT, L = 0.401638
DSEPEND48: DRIFT, L = 0.2159    ! 8.5"
DSEPB:     DRIFT, L = 0.187325

DSTRAIGHT0: DRIFT, L = 2.477977  ! Only used for A0DOWN
DSTRAIGHT1: DRIFT, L = 2.443251  ! Used downstream of C0 and F0
DSTRAIGHT4: DRIFT, L = 2.805074  ! Used at A48 and (C48 Run I)
DSTRAIGHT5: DRIFT, L = 1.408836  ! Used at B49 and E49, Used to be used at D49
DSTRAIGHT6: DRIFT, L = 5.901512  ! Used to be 5.895162 before I changed
                                 !   PACKE48 to a short spool and added 
                                 !   cold bypass boxes. 

DLB1:      DRIFT, L = 0.155575
DLB2:      DRIFT, L = 0.2286
DLB3:      DRIFT, L = 0.535711
DLB4:      DRIFT, L = 0.506298
DLB5:      DRIFT, L = 0.280518
DLB6:      DRIFT, L = 0.167462
DLB7:      DRIFT, L = 1.034517
DLB1S:     DRIFT, L = 0.54610
DLB2S:     DRIFT, L = 0.560832
DLB3S:     DRIFT, L = 0.160782
DTRIPOUT:  DRIFT, L = 0.054127
DTRIPB:    DRIFT, L = 0.8763
DTRIPIN:   DRIFT, L = 0.1397
DV2H:      DRIFT, L = 0.12065

DCOLLIM:   DRIFT, L = 3.048
DCOLLOUT:  DRIFT, L = 0.993064
D17EXTIN:  DRIFT, L = 1.1950575
D17SCRAPER:DRIFT, L = 1.778
D17EXTOUT: DRIFT, L = 9.4094425
! Next 4 are for the Run I Lamb. at E0. 
LAMB1UP:   DRIFT, L = 2.2344
LAMB1DN:   DRIFT, L = 4.8
LAMB2UP:   DRIFT, L = 0.41
LAMB2DN:   DRIFT, L = 4.8

! Some new drifts for Run II collimators, F0 injection, and changes to E0.
!  Added 9/4/97 ppb
!  Modified 12/22/98 ppb
DE0SP1:    DRIFT, L = 0.1677722 !   6.605205"
DE0SP2:    DRIFT, L = 0.0889    !   3.50"
DE0SP3:    DRIFT, L = 0.5182362 !  20.403"
DE0SP4:    DRIFT, L = 0.8890    !  35.0"
DE0SP5:    DRIFT, L = 2.032     !  80.0" 
DE0SP6:    DRIFT, L = 1.0347452 !  40.738"
DE0SP7:    DRIFT, L = 8.3958684 ! 330.546"
DE0SP8:    DRIFT, L = 0.4105804 !  16.164583" Adjusted this so total E0 
                                !   length comes out right. This is 16.13"
                                !   on the blueprints. 
DE0SP9:    DRIFT, L = 0.0629718 !   2.479205" 
DGV4:      DRIFT, L = 0.085725  !   3.375" for a gate valve.
DDOGEND1:  DRIFT, L = 0.1397    !   5.5" for some reason the B2's are shown 
                                !     on the drawings as 250" flange to flange.
DBELL7A:   DRIFT, L = 0.1778    !   7.0"  Same part as DBELL7 (which is 6.875")
                                !       but here its drawn as 7" long. 
DPHDAMPK:  DRIFT, L = 1.1684    ! 46.0", Proton horz damper kicker
DPVDAMPK:  DRIFT, L = 1.1684    ! 46.0", Proton vert damper kicker
DPBHDAMPK: DRIFT, L = 1.1684    ! 46.0", Pbar   horz damper kicker
DPBVDAMPK: DRIFT, L = 1.1684    ! 46.0", Pbar   vert damper kicker
DHDAMPPU:  DRIFT, L = 1.1684    ! 46.0", Horz damper pick up
DVDAMPPU:  DRIFT, L = 1.1684    ! 46.0", Vert damper pick up
D3IN:      DRIFT, L = 0.0762    !  3.0" 
DGV:       DRIFT, L = 0.073025  !  2 7/8" for a gate valve
DD48SP:    DRIFT, L = 0.338912
DSSINF:    DRIFT, L = 0.2921    !  11.5" The space between the end of a short
                                !    spool and the turn around box. 
DTAB:      DRIFT, L = 0.17145   !  6.75" for a turn around box
DGV3:      DRIFT, L = 0.1016    !  4" for the space between the two turn
                                !    around boxes at the boundaries between 
                                !    cryo houses. This space contains a 
                                !    gate valve.

! DWSTRSS is the warm space available at the special short spools at D47 
! and E14. These B spools were modified so that they are also the upstream 
! part of a cold bypass. They are followed by this very short warm 
! straight section and then by the downstream cold bypass.
! Roman pots had been placed in the very short warm straights.
!       12/22/98 ppb
DWSTRSS:   DRIFT, L =  0.307975 !  12.125" 

! Next section is for D17 and F17 collimators
!  Several of these were changed on 12/22/98 based on new drawings of E0.
D6IN:      DRIFT, L = 0.1524    !   6.0"
DGV2:      DRIFT, L = 0.104775  !   4.125" for a gate valve
DD17SP1:   DRIFT, L = 0.0865632 !   3.408" 
DD17SP2:   DRIFT, L = 6.71195   ! 264.250"
DD17SP3:   DRIFT, L = 0.0817118 !   3.217"
DF17SP1:   DRIFT, L = 0.358776  !  14.125" + 1 um.
DBELL7:    DRIFT, L = 0.174625  !   6.875" Natural bellows length

! The new Tungsten targets are 5 mm long in a 9.75" long can.
!   The target is NOT symmetrically placed in the can, it is closer
!   to one end than the other. 
DR2TARGSE: DRIFT, L = 0.0898125   !   3 7/16 + 2.5 mm
DR2TARGLE: DRIFT, L = 0.1578375   !   remainder of 9.75" can

! Keep overall collimator length 66.00", 1.5 m for actual collimator
!   Ends are then (66.00" - 1.5 m)/2 = 0.08820 m
! DR2COLL:   DRIFT, L = 1.500       !  Collimator
DR2COLL2:  DRIFT, L = 1.500 / 2.0 !  half collimator
DR2COLLEND:DRIFT, L = 0.08820

DIONP:     DRIFT, L = 0.27305   !  10.75"  Space for Ion Pump
DPINJK:    DRIFT, L = 1.21285   !  47.75"  Proton Injection Kicker

! Next section is for pbar injection kickers in E48 straight
DE48SP1:   DRIFT, L = 0.250825 ! 9.875"
DE48SP2:   DRIFT, L = 1.040587 ! Length to make total come out right. 
                               !   Used to be 0.303987 before I changed 
                               !   PACKE48 to a short spool.
DPBINJK:   DRIFT, L = 2.305050 ! 90.75", pbar injection kicker module 396 nsec

! Next section is for new F0 straight
!  Changed definitions of DRFUP and DRFDOWN.  1/11/99 ppb
!  DRFUP =   (DLONG4)  - 8*(DRFCAVITY) - 6*(DRFSP1) -  (DRFSP2) -   (DRFDOWN)
!  DRFUP = (26.413412) - 8*(2.749550) - 6*(.073085) - (1.484402) - (1.447860)
DRFUP:     DRIFT, L = 1.046240 ! Derived.
DRFCAVITY: DRIFT, L = 2.749550 ! 108.25"
DRFSP1:    DRIFT, L = 0.073085 ! This gives center to center cavity spacing
                               !    of half a wavelength = 2.822635 m
DRFSP2:    DRIFT, L = 1.484402 ! This gives center to center cavity spacing
                               !    of 3/4 of a wavelength for between groups
DRFDOWN:   DRIFT, L = 1.447860 ! F0 to center of first cavity is half a
                               !    wavelength. 

! Put in new F0 Lamb, modified DF0SP1 and DF0SP2.   1/11/99  ppb
DLAMBF0:     DRIFT, L = 3.260725 ! 128.375" flange to flange length of F0 Lamb

!  DF0SP1 = 13.222 m - 2* (dlambf0) -   (d6in)   -   (d3in)
!  DF0SP1 = 13.222 m - 2*(3.260725) - (0.1524 m) - (0.0762 m)
!  DF0SP2 =   (DLONG1)   -   (DF0SP1)   -   4*(dlambf0)  -   3*(d6in) 
!  DF0SP2 = (26.410612m) - (6.471950 m) - 4*(3.260725 m) - 3*(0.1524 m)
!DF0SP1:     DRIFT, L = 6.471950  ! From F0 to middle of the 4 Lambs should
!                                 !   be 13.222 m. 
!DF0SP2:     DRIFT, L = 6.438562  ! Derived

DF0SP1A:    DRIFT, L = 4.933372
DF0SP2A:    DRIFT, L = 0.191

! DF0SP3 =   DF0SP1   -   DF0SP1A  - DF0SP2A
!        = (6.471950) - (4.933372) - (0.191)
DF0SP3:     DRIFT, L = 1.347578
DF0SP4:     DRIFT, L = 0.846322
DF0SP5:     DRIFT, L = 3.275
DF0SP6:     DRIFT, L = 1.12624

! DF0SP6 =   DF0SP2   -   DFPSP4   -  DFPSP5 - DFPSP2A - DF0STRIP
!        = (6.438562) - (0.846322) - (3.275) - (0.191) - (1.0)

! DF0STRIP is a stripline pick up for the longitudinal dampers. 
DF0STRIP:   DRIFT, L = 1.000
                       

! Moved horiz. separator from F17 to D48. 
! STRD48R2 used to be STRAIGHTD48
! STRD48R2:  DRIFT, L = 5.895162 - .301625 - 2.57175 - 2*.320777 -.428625
STRD48R2:  DRIFT, L = 1.951608

!  For Run II, we'll put a target in at D49 
! The location of the target in the straight is only approximate. 
! DSTRAIGHT5 = DD49SP1 +  DR2TARGSE  +  DR2TARGSE   +  DD49SP2
! (1.408836) = (0.500) + (0.0898125) + (0.1578375) + (0.661186)
DD49SP1:    DRIFT, L = .500
DD49SP2:    DRIFT, L = .661186

! Added a collimator to F48 for Run II. 
! DSTRAIGHT3 used to be 5.839714 before I changed PACKF48 to a short spool 
!   and added cold bypass boxes. Gain 29" from short spool, but 
!   cold bypasses take up 28.75".
!DSTRAIGHT3: DRIFT, L = 5.846064
! The location of the collimator in the straight is only approximate. 
!   DF48SP2  = DSTRAIGHT3 - DF48SP1 - DR2COLL - 2*DR2COLLEND
! (3.669664) = (5.846064) - (0.500) - (1.500) - 2*(0.08820)

DF48SP1:   DRIFT, L = 0.500
DF48SP2:   DRIFT, L = 3.669664

! DSTRAIGHT2 was only used at F49.
!DSTRAIGHT2: DRIFT, L = 2.227453
! Put in a thin Tungsten Target at F49 for Run II. 
! The location of the target in the straight is only approximate. 
!   DF49SP1  = DSTRAIGHT2 - DF49SP2 -  DR2TARGSE  -  DR2TARGLE 
! (1.519803) = (2.227453) - (0.460) - (0.0898125) - (0.1578375)

DF49SP1:   DRIFT, L = 1.519803
DF49SP2:   DRIFT, L = 0.460

! The A0 Abort kickers bend both the protons and the pbars DOWN.
! mchurch 1/4/99 added new drifts for A0 straight section
DA0KICK:   DRIFT, L = 1.8923     ! Kicker Module, 74.5"
DA0PAB:    DRIFT, L = 4.5593     ! Proton Abort Blocks, 179.5"
DA0PBAB:   DRIFT, L = 4.5593     ! Pbar   Abort Blocks, 179.5"
D12IN:     DRIFT, L = 0.3048
D18IN:     DRIFT, L = 0.4572
DA0SP1:    DRIFT, L =  .8649
DA0SP4:    DRIFT, L =  .4724
DA0SP5:    DRIFT, L = 6.5329
DA0SP6:    DRIFT, L =  .1905
DA0SP7:    DRIFT, L =  .7759
DA0SP8A:   DRIFT, L =  .355612

! DLONG4:    DRIFT, L = 26.564412 - 0.151 = 26.413412
! DA0SP8A =    DLONG4   -  DA0SP1  -  A0PKICK  -  DA0SP4  - A0COLL1 
!               -  DA0SP5  -  DA0SP6  -  DA0SP7  -  DA0PAB
!         = (26.413412) - (0.8649) - (10.9855) - (0.4724) - (1.6764)
!               - (6.5329) - (0.1905) - (0.7759) - (4.5593)

DA0SP8B:   DRIFT, L =  .221016
DA0SP9:    DRIFT, L =  .7188
DA0SP10:   DRIFT, L =  .2388
DA0SP11:   DRIFT, L = 8.8722
DA0SP12:   DRIFT, L =  .814996

! DLONG1:    DRIFT, L = 26.259612 + 0.151 = 26.410612
! DA0SP8B =    DLONG1   - DA0PBAB  -  DA0SP9  - DA0SP10  -  DA0SP11  
!              -  A0PBKICK -  DA0SP12
!         = (26.410612) - (4.5593) - (0.7188) - (0.2388) - (8.8722)
!              - (10.9855) - (0.814996)


! More drifts for fixed target

DHALFLAMB: DRIFT, L = 5.08/2.0
DLAMBSEP:  DRIFT, L = 0.0889
DLAMB1:    DRIFT, L = 0.480812
DLAMB3:    DRIFT, L = 0.3302
DLAMBEND:  DRIFT, L = 0.191808
DEXTLAMBEND: DRIFT, L = 0.32385
D0COLLEND: DRIFT, L = 0.8763
DBARRIER:  DRIFT, L = 1.26771378
DDOGEND:   DRIFT, L = 0.14605
DSEPTASEP: DRIFT, L =  0.8573 
DHSEPTASEP: DRIFT, L =  0.8573/2.0 
DHALFSEPTA: DRIFT, L = LSEPTA/2.0
D0BUMPEND: DRIFT, L = 0.66675
DCMAGEND:  DRIFT, L = 0.26416

DLONG1E0:  DRIFT, L = 26.259612 + 0.152  ! 26.411612, Used for E0D in Run I, FT
DLONG1A0:  DRIFT, L = 26.409612 - 3.3018 ! Used for A0D for FT
DTQIN:     DRIFT, L = 0.121818   ! DPACKU2D2 - 0.5*LQUADC 
DTQOUT:    DRIFT, L = 0.139751   ! DPACKOUT2 - 0.5*LQUADC
DTQJUMP:   DRIFT, L = LQUADC

!  DSTRAIGHT7 is only used at B48.
!  Added 0.25" to DSTRAIGHT7 when I changed PACKB48 to a short spool and 
!     added cold bypasses. 
! DSTRAIGHT7: DRIFT, L = 5.895162 + 3.2004 + 0.00635 = 9.101912
!  Put the B48 Kickers in. 
!  DB48SP2 = DSTRAIGHT7 - DB48SP1 - 3*(DB48ABTK) - 2*(DB48ABTKB) 
DB48SP1:   DRIFT, L = 0.5172
DB48SP2:   DRIFT, L = 2.310912
DB48ABTK:  DRIFT, L = 1.905       ! B48 Abort Kickers for Protons
DB48ABTKB: DRIFT, L = 0.2794      ! Space between B48 Kicker Modules
! The B48 kickers kick the protons vertically up into the field free
!  region of the Lambertsons. (The circulating Tevatron beam goes through
!  the field region of the C0 Lambertsons and is bent to the radial inside.) 
!  After the Lambertsons, the aborted beam is pointed up and to the 
!  radial outside of the circulating beam. 

DSYNCLIGHT:DRIFT, L = 3.2004
DC0U1:     DRIFT, L = 3.973029
DC0U2:     DRIFT, L = 4.875417 - 0.152
DC0D1:     DRIFT, L = 8.874823 + 0.152
DBYPC49:   DRIFT, L = 2.139042
DSPC1:     DRIFT, L = 0.667187 
DSPC2:     DRIFT, L = 1.323975 + 0.22855/2.0
DSPC3:     DRIFT, L = 0.942975 + 0.22855/2.0
DSPC4:     DRIFT, L = 0.1905 
DSPC5:     DRIFT, L = 1.04775
DSPC6:     DRIFT, L = 0.78105
DSPC7:     DRIFT, L = 8.13435
DSPC8:     DRIFT, L = 0.59055
DSPC9:     DRIFT, L = 0.3810
DSPC10:    DRIFT, L = 0.704537
DBYPD11:   DRIFT, L = 1.9044462
DFUDGE1:   DRIFT, L = 0.008228
DFUDGE2:   DRIFT, L = 0.007227
DQXRFILL:  DRIFT, L = 0.582574
DBUK1:     DRIFT, L = 7.1215
DQXR1:     DRIFT, L = 0.1905

!  I changed these drifts when I made PACKF48 into a short spool and
!  added cold bypasses to either side of the warm straight. 
!  When PACKF48 was a long spool and there were no COLDBYP's, 
!  STRAIGHTF48FT used to be 
!   DQXR2    A0QXR   DQXR3   A0BUK   DQXR4   A0QXR MF48TARGET DQXR5
! 0.390714 + 1.016 + 0.409 + 1.016 + 0.419 + 1.016            1.573 = 5.839714m
!
!  The new version is                                         MF48TARGET
!   DQXR2    A0QXR     DQXR3    A0BUK    D12IN   A0QXR     DQXR5   |   DQXR6
! 0.416814 + 1.016 + 0.536575 + 1.016 + 0.3048 + 1.016 + 0.6397625 + 0.9001125
!   = 5.846064 m = 5.839714 m + .00635 m 
!  The extra .00635 m = 0.25" is the difference between a long spool 
!    and a short spool with COLDBYP1 and COLDBYP2.      ppb 1/27/99

DQXR2:     DRIFT, L = 0.416814
DQXR3:     DRIFT, L = 0.536575
DQXR5:     DRIFT, L = 0.6397625
DQXR6:     DRIFT, L = 0.9001125


DFPDSPC4:  DRIFT, L = 0.738276


! 
! separators 
! 
ESEP:      ELSEPARATOR, L = 2.57175, E = 0
F17HESEP:  ELSEPARATOR, L = 2.57175, E = F17HANG, TILT = -pi/2
A17VESEP:  ELSEPARATOR, L = 2.57175, E = A17VANG, TILT = 0
A49HESEP:  ELSEPARATOR, L = 2.57175, E = A49HANG, TILT = -pi/2
A49VESEP:  ELSEPARATOR, L = 2.57175, E = A49VANG, TILT = 0
B11HESEP:  ELSEPARATOR, L = 2.57175, E = B11HANG, TILT = -pi/2
B11VESEP:  ELSEPARATOR, L = 2.57175, E = B11VANG, TILT = 0
B17HESEP:  ELSEPARATOR, L = 2.57175, E = B17HANG, TILT = -pi/2
C17VESEP:  ELSEPARATOR, L = 2.57175, E = C17VANG, TILT = 0
C49HESEP:  ELSEPARATOR, L = 2.57175, E = C49HANG, TILT = -pi/2
C49VESEP:  ELSEPARATOR, L = 2.57175, E = C49VANG, TILT = 0
D11HESEP:  ELSEPARATOR, L = 2.57175, E = D11HANG, TILT = -pi/2
D11VESEP:  ELSEPARATOR, L = 2.57175, E = D11VANG, TILT = 0

! Next line is for Run II. We plan to move the F17 Horz sep to D48
D48HESEPR2: ELSEPARATOR, L = 2.57175, E = D48HANG, TILT = -pi/2

! 
! unused multipole circuits

TQX:      MULTIPOLE, K1L = 0                   ! Unused quads
TQ2:      MULTIPOLE, K1L = 0                   ! Unused quads
TQ4:      MULTIPOLE, K1L = 0                   ! Unused quads
TR1:      MULTIPOLE, K1L = 0, T1 = TWOPI / 4   ! Unused skew quads
TR2:      MULTIPOLE, K1L = 0, T1 = TWOPI / 4   ! Unused skew quads
TR3:      MULTIPOLE, K1L = 0, T1 = TWOPI / 4   ! Unused skew quads

TSX:      MULTIPOLE, K2L = 0
TS1:      MULTIPOLE, K2L = 0
TS2:      MULTIPOLE, K2L = 0
TS3:      MULTIPOLE, K2L = 0
TS4:      MULTIPOLE, K2L = 0

TX1:      MULTIPOLE, K2L = 0, T2 = TWOPI / 12
TX2:      MULTIPOLE, K2L = 0, T2 = TWOPI / 12
TX3:      MULTIPOLE, K2L = 0, T2 = TWOPI / 12
TX4:      MULTIPOLE, K2L = 0, T2 = TWOPI / 12


! ------------- 
! markers
! -------------
ME0:       MARKER, TYPE = cellmark
ME11:      MARKER, TYPE = cellmark
ME12:      MARKER, TYPE = cellmark
ME13:      MARKER, TYPE = cellmark
ME14:      MARKER, TYPE = cellmark
ME15:      MARKER, TYPE = cellmark
ME16:      MARKER, TYPE = cellmark
ME17:      MARKER, TYPE = cellmark
ME18:      MARKER, TYPE = cellmark
ME19:      MARKER, TYPE = cellmark
ME21:      MARKER, TYPE = cellmark
ME22:      MARKER, TYPE = cellmark
ME23:      MARKER, TYPE = cellmark
ME24:      MARKER, TYPE = cellmark
ME25:      MARKER, TYPE = cellmark
ME26:      MARKER, TYPE = cellmark
ME27:      MARKER, TYPE = cellmark
ME28:      MARKER, TYPE = cellmark
ME29:      MARKER, TYPE = cellmark
ME32:      MARKER, TYPE = cellmark
ME33:      MARKER, TYPE = cellmark
ME34:      MARKER, TYPE = cellmark
ME35:      MARKER, TYPE = cellmark
ME36:      MARKER, TYPE = cellmark
ME37:      MARKER, TYPE = cellmark
ME38:      MARKER, TYPE = cellmark
ME39:      MARKER, TYPE = cellmark
ME42:      MARKER, TYPE = cellmark
ME43:      MARKER, TYPE = cellmark
ME44:      MARKER, TYPE = cellmark
ME45:      MARKER, TYPE = cellmark
ME46:      MARKER, TYPE = cellmark
ME47:      MARKER, TYPE = cellmark
ME48:      MARKER, TYPE = cellmark
ME49:      MARKER, TYPE = cellmark
MF0U:      MARKER, TYPE = cellmark

MF0:       MARKER, TYPE = cellmark
MF11:      MARKER, TYPE = cellmark
MF12:      MARKER, TYPE = cellmark
MF13:      MARKER, TYPE = cellmark
MF14:      MARKER, TYPE = cellmark
MF15:      MARKER, TYPE = cellmark
MF16:      MARKER, TYPE = cellmark
MF17:      MARKER, TYPE = cellmark
MF18:      MARKER, TYPE = cellmark
MF19:      MARKER, TYPE = cellmark
MF21:      MARKER, TYPE = cellmark
MF22:      MARKER, TYPE = cellmark
MF23:      MARKER, TYPE = cellmark
MF24:      MARKER, TYPE = cellmark
MF25:      MARKER, TYPE = cellmark
MF26:      MARKER, TYPE = cellmark
MF27:      MARKER, TYPE = cellmark
MF28:      MARKER, TYPE = cellmark
MF29:      MARKER, TYPE = cellmark
MF32:      MARKER, TYPE = cellmark
MF33:      MARKER, TYPE = cellmark
MF34:      MARKER, TYPE = cellmark
MF35:      MARKER, TYPE = cellmark
MF36:      MARKER, TYPE = cellmark
MF37:      MARKER, TYPE = cellmark
MF38:      MARKER, TYPE = cellmark
MF39:      MARKER, TYPE = cellmark
MF42:      MARKER, TYPE = cellmark
MF43:      MARKER, TYPE = cellmark
MF44:      MARKER, TYPE = cellmark
MF45:      MARKER, TYPE = cellmark
MF46:      MARKER, TYPE = cellmark
MF47:      MARKER, TYPE = cellmark
MF48:      MARKER, TYPE = cellmark
MF49:      MARKER, TYPE = cellmark
MA0U:      MARKER, TYPE = cellmark

MA0:       MARKER, TYPE = cellmark
MA11:      MARKER, TYPE = cellmark
MA12:      MARKER, TYPE = cellmark
MA13:      MARKER, TYPE = cellmark
MA14:      MARKER, TYPE = cellmark
MA15:      MARKER, TYPE = cellmark
MA16:      MARKER, TYPE = cellmark
MA17:      MARKER, TYPE = cellmark
MA18:      MARKER, TYPE = cellmark
MA19:      MARKER, TYPE = cellmark
MA21:      MARKER, TYPE = cellmark
MA22:      MARKER, TYPE = cellmark
MA23:      MARKER, TYPE = cellmark
MA24:      MARKER, TYPE = cellmark
MA25:      MARKER, TYPE = cellmark
MA26:      MARKER, TYPE = cellmark
MA27:      MARKER, TYPE = cellmark
MA28:      MARKER, TYPE = cellmark
MA29:      MARKER, TYPE = cellmark
MA32:      MARKER, TYPE = cellmark
MA33:      MARKER, TYPE = cellmark
MA34:      MARKER, TYPE = cellmark
MA35:      MARKER, TYPE = cellmark
MA36:      MARKER, TYPE = cellmark
MA37:      MARKER, TYPE = cellmark
MA38:      MARKER, TYPE = cellmark
MA39:      MARKER, TYPE = cellmark
MA42:      MARKER, TYPE = cellmark
MA43:      MARKER, TYPE = cellmark
MA44:      MARKER, TYPE = cellmark
MA45:      MARKER, TYPE = cellmark
MA46:      MARKER, TYPE = cellmark
MA47:      MARKER, TYPE = cellmark
MA48:      MARKER, TYPE = cellmark
MA49:      MARKER, TYPE = cellmark
MB0U:      MARKER, TYPE = cellmark

MB0:       MARKER, TYPE = cellmark
MB11:      MARKER, TYPE = cellmark
MB12:      MARKER, TYPE = cellmark
MB13:      MARKER, TYPE = cellmark
MB14:      MARKER, TYPE = cellmark
MB15:      MARKER, TYPE = cellmark
MB16:      MARKER, TYPE = cellmark
MB17:      MARKER, TYPE = cellmark
MB18:      MARKER, TYPE = cellmark
MB19:      MARKER, TYPE = cellmark
MB21:      MARKER, TYPE = cellmark
MB22:      MARKER, TYPE = cellmark
MB23:      MARKER, TYPE = cellmark
MB24:      MARKER, TYPE = cellmark
MB25:      MARKER, TYPE = cellmark
MB26:      MARKER, TYPE = cellmark
MB27:      MARKER, TYPE = cellmark
MB28:      MARKER, TYPE = cellmark
MB29:      MARKER, TYPE = cellmark
MB32:      MARKER, TYPE = cellmark
MB33:      MARKER, TYPE = cellmark
MB34:      MARKER, TYPE = cellmark
MB35:      MARKER, TYPE = cellmark
MB36:      MARKER, TYPE = cellmark
MB37:      MARKER, TYPE = cellmark
MB38:      MARKER, TYPE = cellmark
MB39:      MARKER, TYPE = cellmark
MB42:      MARKER, TYPE = cellmark
MB43:      MARKER, TYPE = cellmark
MB44:      MARKER, TYPE = cellmark
MB45:      MARKER, TYPE = cellmark
MB46:      MARKER, TYPE = cellmark
MB47:      MARKER, TYPE = cellmark
MB48:      MARKER, TYPE = cellmark
MB49:      MARKER, TYPE = cellmark
MC0U:      MARKER, TYPE = cellmark

MC0:       MARKER, TYPE = cellmark
MC11:      MARKER, TYPE = cellmark
MC12:      MARKER, TYPE = cellmark
MC13:      MARKER, TYPE = cellmark
MC14:      MARKER, TYPE = cellmark
MC15:      MARKER, TYPE = cellmark
MC16:      MARKER, TYPE = cellmark
MC17:      MARKER, TYPE = cellmark
MC18:      MARKER, TYPE = cellmark
MC19:      MARKER, TYPE = cellmark
MC21:      MARKER, TYPE = cellmark
MC22:      MARKER, TYPE = cellmark
MC23:      MARKER, TYPE = cellmark
MC24:      MARKER, TYPE = cellmark
MC25:      MARKER, TYPE = cellmark
MC26:      MARKER, TYPE = cellmark
MC27:      MARKER, TYPE = cellmark
MC28:      MARKER, TYPE = cellmark
MC29:      MARKER, TYPE = cellmark
MC32:      MARKER, TYPE = cellmark
MC33:      MARKER, TYPE = cellmark
MC34:      MARKER, TYPE = cellmark
MC35:      MARKER, TYPE = cellmark
MC36:      MARKER, TYPE = cellmark
MC37:      MARKER, TYPE = cellmark
MC38:      MARKER, TYPE = cellmark
MC39:      MARKER, TYPE = cellmark
MC42:      MARKER, TYPE = cellmark
MC43:      MARKER, TYPE = cellmark
MC44:      MARKER, TYPE = cellmark
MC45:      MARKER, TYPE = cellmark
MC46:      MARKER, TYPE = cellmark
MC47:      MARKER, TYPE = cellmark
MC48:      MARKER, TYPE = cellmark
MC49:      MARKER, TYPE = cellmark
MD0U:      MARKER, TYPE = cellmark

MD0:       MARKER, TYPE = cellmark
MD11:      MARKER, TYPE = cellmark
MD12:      MARKER, TYPE = cellmark
MD13:      MARKER, TYPE = cellmark
MD14:      MARKER, TYPE = cellmark
MD15:      MARKER, TYPE = cellmark
MD16:      MARKER, TYPE = cellmark
MD17:      MARKER, TYPE = cellmark
MD18:      MARKER, TYPE = cellmark
MD19:      MARKER, TYPE = cellmark
MD21:      MARKER, TYPE = cellmark
MD22:      MARKER, TYPE = cellmark
MD23:      MARKER, TYPE = cellmark
MD24:      MARKER, TYPE = cellmark
MD25:      MARKER, TYPE = cellmark
MD26:      MARKER, TYPE = cellmark
MD27:      MARKER, TYPE = cellmark
MD28:      MARKER, TYPE = cellmark
MD29:      MARKER, TYPE = cellmark
MD32:      MARKER, TYPE = cellmark
MD33:      MARKER, TYPE = cellmark
MD34:      MARKER, TYPE = cellmark
MD35:      MARKER, TYPE = cellmark
MD36:      MARKER, TYPE = cellmark
MD37:      MARKER, TYPE = cellmark
MD38:      MARKER, TYPE = cellmark
MD39:      MARKER, TYPE = cellmark
MD42:      MARKER, TYPE = cellmark
MD43:      MARKER, TYPE = cellmark
MD44:      MARKER, TYPE = cellmark
MD45:      MARKER, TYPE = cellmark
MD46:      MARKER, TYPE = cellmark
MD47:      MARKER, TYPE = cellmark
MD48:      MARKER, TYPE = cellmark
MD49:      MARKER, TYPE = cellmark
ME0U:      MARKER, TYPE = cellmark

HFWE11:    MARKER, TYPE = instrmark
VFWE11:    MARKER, TYPE = instrmark
HFWE17:    MARKER, TYPE = instrmark
MPINGVERT: MARKER, TYPE = instrmark
MPSYNC:    MARKER, TYPE = instrmark
MPBSYNC:   MARKER, TYPE = instrmark

ME17KHORZ:  MARKER, TYPE = injextmark
MD0COLL:    MARKER, TYPE = injextmark
MEXTLAMBU:  MARKER, TYPE = injextmark
MEXTLAMBD:  MARKER, TYPE = injextmark
MSEPTAU:    MARKER, TYPE = injextmark
MSEPTAD:    MARKER, TYPE = injextmark
MD0EXTSEPTA:MARKER, TYPE = injextmark

! The MF48TARGET and the MD0TARGET are for fixed target for
!  measuring the separation between the extracted and the circulating beam.
MF48TARGET: MARKER, TYPE = injextmark
MD0TARGET:  MARKER, TYPE = injextmark

MF0LAUS:    MARKER, TYPE = injextmark
MF0LADS:    MARKER, TYPE = injextmark
MF0LBUS:    MARKER, TYPE = injextmark
MF0LBDS:    MARKER, TYPE = injextmark
MTEV60:     MARKER, TYPE = injextmark
MF0LCUS:    MARKER, TYPE = injextmark
MF0LCDS:    MARKER, TYPE = injextmark
MF0LDUS:    MARKER, TYPE = injextmark
MF0LDDS:    MARKER, TYPE = injextmark


! These are the target and collimator locations for
! Collider Run II. There are 13 collimators located 
! at D17(3), D49, E0(3), F17(3), F48, F49, and A0.
! The collimators at D17-1, D49, F17-3, and F49 are targets.
!
! Elements of type collimator are located at the center of the collimator.
! Elements of type marker are the locations of the stepper motors
!  and there name corresponds to the ACNET device name of the motor.

D171HCL:   MARKER, TYPE = colmark
D171VCL:   MARKER, TYPE = colmark
MD171HCL:  MARKER, TYPE = colmark
MD171VCL:  MARKER, TYPE = colmark

D172HCL:   MARKER, TYPE = colmark
D172VCL:   MARKER, TYPE = colmark
MD172UHCL: MARKER, TYPE = colmark
MD172DHCL: MARKER, TYPE = colmark
MD172UVCL: MARKER, TYPE = colmark
MD172DVCL: MARKER, TYPE = colmark

D173HCL:   MARKER, TYPE = colmark
D173VCL:   MARKER, TYPE = colmark
MD173UHCL: MARKER, TYPE = colmark
MD173DHCL: MARKER, TYPE = colmark
MD173UVCL: MARKER, TYPE = colmark
MD173DVCL: MARKER, TYPE = colmark

D491HCL:   MARKER, TYPE = colmark
D491VCL:   MARKER, TYPE = colmark
MD491HCL:  MARKER, TYPE = colmark
MD491VCL:  MARKER, TYPE = colmark

E01HCL:    MARKER, TYPE = colmark
E01VCL:    MARKER, TYPE = colmark
ME01UHCL:  MARKER, TYPE = colmark
ME01DHCL:  MARKER, TYPE = colmark
ME01UVCL:  MARKER, TYPE = colmark
ME01DVCL:  MARKER, TYPE = colmark

E02HCL:    MARKER, TYPE = colmark
E02VCL:    MARKER, TYPE = colmark
ME02UHCL:  MARKER, TYPE = colmark
ME02DHCL:  MARKER, TYPE = colmark
ME02UVCL:  MARKER, TYPE = colmark
ME02DVCL:  MARKER, TYPE = colmark

E03HCL:    MARKER, TYPE = colmark
E03VCL:    MARKER, TYPE = colmark
ME03UHCL:  MARKER, TYPE = colmark
ME03DHCL:  MARKER, TYPE = colmark
ME03UVCL:  MARKER, TYPE = colmark
ME03DVCL:  MARKER, TYPE = colmark

F171HCL:   MARKER, TYPE = colmark
F171VCL:   MARKER, TYPE = colmark
MF171UHCL: MARKER, TYPE = colmark
MF171DHCL: MARKER, TYPE = colmark
MF171UVCL: MARKER, TYPE = colmark
MF171DVCL: MARKER, TYPE = colmark

F172HCL:   MARKER, TYPE = colmark
F172VCL:   MARKER, TYPE = colmark
MF172UHCL: MARKER, TYPE = colmark
MF172DHCL: MARKER, TYPE = colmark
MF172UVCL: MARKER, TYPE = colmark
MF172DVCL: MARKER, TYPE = colmark

F173HCL:   MARKER, TYPE = colmark
F173VCL:   MARKER, TYPE = colmark
MF173HCL:  MARKER, TYPE = colmark
MF173VCL:  MARKER, TYPE = colmark

F481HCL:   MARKER, TYPE = colmark
F481VCL:   MARKER, TYPE = colmark
MF481UHCL: MARKER, TYPE = colmark
MF481DHCL: MARKER, TYPE = colmark
MF481UVCL: MARKER, TYPE = colmark
MF481DVCL: MARKER, TYPE = colmark

F491HCL:   MARKER, TYPE = colmark
F491VCL:   MARKER, TYPE = colmark
MF491HCL:  MARKER, TYPE = colmark
MF491VCL:  MARKER, TYPE = colmark

A01HCL:    MARKER, TYPE = colmark
A01VCL:    MARKER, TYPE = colmark
MA01UHCL:  MARKER, TYPE = colmark
MA01DHCL:  MARKER, TYPE = colmark
MA01UVCL:  MARKER, TYPE = colmark
MA01DVCL:  MARKER, TYPE = colmark

MFPD_P1U: MARKER, TYPE = fpdmark
MFPD_P1D: MARKER, TYPE = fpdmark
MFPD_P1I: MARKER, TYPE = fpdmark
MFPD_P1O: MARKER, TYPE = fpdmark
MFPD_P2U: MARKER, TYPE = fpdmark
MFPD_P2D: MARKER, TYPE = fpdmark
MFPD_P2I: MARKER, TYPE = fpdmark
MFPD_P2O: MARKER, TYPE = fpdmark
MFPD_A1U: MARKER, TYPE = fpdmark
MFPD_A1D: MARKER, TYPE = fpdmark
MFPD_A1I: MARKER, TYPE = fpdmark
MFPD_A1O: MARKER, TYPE = fpdmark
MFPD_A2U: MARKER, TYPE = fpdmark
MFPD_A2D: MARKER, TYPE = fpdmark
MFPD_A2I: MARKER, TYPE = fpdmark
MFPD_A2O: MARKER, TYPE = fpdmark
MFPD_D1I: MARKER, TYPE = fpdmark
MFPD_D2I: MARKER, TYPE = fpdmark

! 
! dipole correctors 
! 
HDE11:    HKICK, L = 0
VDE11:    VKICK, L = 0
VDE12:    VKICK, L = 0
HDE13:    HKICK, L = 0
VDE14:    VKICK, L = 0
HDE15:    HKICK, L = 0
VDE16:    VKICK, L = 0
HDE17:    HKICK, L = 0
VDE18:    VKICK, L = 0
HDE19:    HKICK, L = 0
VDE21:    VKICK, L = 0
HDE22:    HKICK, L = 0
VDE23:    VKICK, L = 0
HDE24:    HKICK, L = 0
VDE25:    VKICK, L = 0
HDE26:    HKICK, L = 0
VDE27:    VKICK, L = 0
HDE28:    HKICK, L = 0
VDE29:    VKICK, L = 0
HDE32:    HKICK, L = 0
VDE33:    VKICK, L = 0
HDE34:    HKICK, L = 0
VDE35:    VKICK, L = 0
HDE36:    HKICK, L = 0
VDE37:    VKICK, L = 0
HDE38:    HKICK, L = 0
VDE39:    VKICK, L = 0
HDE42:    HKICK, L = 0
VDE43:    VKICK, L = 0
HDE44:    HKICK, L = 0
VDE45:    VKICK, L = 0
HDE46:    HKICK, L = 0
VDE47:    VKICK, L = 0
HDE48:    HKICK, L = 0
HDE49:    HKICK, L = 0
VDE49:    VKICK, L = 0

HDF11:    HKICK, L = 0
VDF11:    VKICK, L = 0
VDF12:    VKICK, L = 0
HDF13:    HKICK, L = 0
VDF14:    VKICK, L = 0
HDF15:    HKICK, L = 0
VDF16:    VKICK, L = 0
HDF17:    HKICK, L = 0
VDF18:    VKICK, L = 0
HDF19:    HKICK, L = 0
VDF21:    VKICK, L = 0
HDF22:    HKICK, L = 0
VDF23:    VKICK, L = 0
HDF24:    HKICK, L = 0
VDF25:    VKICK, L = 0
HDF26:    HKICK, L = 0
VDF27:    VKICK, L = 0
HDF28:    HKICK, L = 0
VDF29:    VKICK, L = 0
HDF32:    HKICK, L = 0
VDF33:    VKICK, L = 0
HDF34:    HKICK, L = 0
VDF35:    VKICK, L = 0
HDF36:    HKICK, L = 0
VDF37:    VKICK, L = 0
HDF38:    HKICK, L = 0
VDF39:    VKICK, L = 0
HDF42:    HKICK, L = 0
VDF43:    VKICK, L = 0
HDF44:    HKICK, L = 0
VDF45:    VKICK, L = 0
HDF46:    HKICK, L = 0
VDF47:    VKICK, L = 0
HDF48:    HKICK, L = 0
HDF49:    HKICK, L = 0
VDF49:    VKICK, L = 0

VDA11:    VKICK, L = 0
HDA11:    HKICK, L = 0
VDA12:    VKICK, L = 0
HDA13:    HKICK, L = 0
VDA14:    VKICK, L = 0
HDA15:    HKICK, L = 0
VDA16:    VKICK, L = 0
HDA17:    HKICK, L = 0
VDA18:    VKICK, L = 0
HDA19:    HKICK, L = 0
VDA21:    VKICK, L = 0
HDA22:    HKICK, L = 0
VDA23:    VKICK, L = 0
HDA24:    HKICK, L = 0
VDA25:    VKICK, L = 0
HDA26:    HKICK, L = 0
VDA27:    VKICK, L = 0
HDA28:    HKICK, L = 0
VDA29:    VKICK, L = 0
HDA32:    HKICK, L = 0
VDA33:    VKICK, L = 0
HDA34:    HKICK, L = 0
VDA35:    VKICK, L = 0
HDA36:    HKICK, L = 0
VDA37:    VKICK, L = 0
HDA38:    HKICK, L = 0
VDA39:    VKICK, L = 0
HDA42:    HKICK, L = 0
VDA43:    VKICK, L = 0
HDA44:    HKICK, L = 0
VDA45:    VKICK, L = 0
HDA46:    HKICK, L = 0
VDA47:    VKICK, L = 0
VDA48:    VKICK, L = 0
HDA48:    HKICK, L = 0
HDA48C:   HKICK, L = 0
HDA49:    HKICK, L = 0
VDA49:    VKICK, L = 0

HDB11:    HKICK, L = 0
VDB11:    VKICK, L = 0
VDB12:    VKICK, L = 0
HDB12:    HKICK, L = 0
HDB13:    HKICK, L = 0
VDB14:    VKICK, L = 0
HDB15:    HKICK, L = 0
VDB16:    VKICK, L = 0
HDB17:    HKICK, L = 0
VDB18:    VKICK, L = 0
HDB19:    HKICK, L = 0
VDB21:    VKICK, L = 0
HDB22:    HKICK, L = 0
VDB23:    VKICK, L = 0
HDB24:    HKICK, L = 0
VDB25:    VKICK, L = 0
HDB26:    HKICK, L = 0
VDB27:    VKICK, L = 0
HDB28:    HKICK, L = 0
VDB29:    VKICK, L = 0
HDB32:    HKICK, L = 0
VDB33:    VKICK, L = 0
HDB34:    HKICK, L = 0
VDB35:    VKICK, L = 0
HDB36:    HKICK, L = 0
VDB37:    VKICK, L = 0
HDB38:    HKICK, L = 0
VDB39:    VKICK, L = 0
HDB42:    HKICK, L = 0
VDB43:    VKICK, L = 0
HDB44:    HKICK, L = 0
VDB45:    VKICK, L = 0
HDB46:    HKICK, L = 0
VDB47:    VKICK, L = 0
HDB48:    HKICK, L = 0
HDB49:    HKICK, L = 0
VDB49:    VKICK, L = 0


HDC11:    HKICK, L = 0
VDC11:    VKICK, L = 0
VDC12:    VKICK, L = 0
HDC13:    HKICK, L = 0
VDC14:    VKICK, L = 0
HDC15:    HKICK, L = 0
VDC16:    VKICK, L = 0
HDC17:    HKICK, L = 0
VDC18:    VKICK, L = 0
HDC19:    HKICK, L = 0
VDC21:    VKICK, L = 0
HDC22:    HKICK, L = 0
VDC23:    VKICK, L = 0
HDC24:    HKICK, L = 0
VDC25:    VKICK, L = 0
HDC26:    HKICK, L = 0
VDC27:    VKICK, L = 0
HDC28:    HKICK, L = 0
VDC29:    VKICK, L = 0
HDC32:    HKICK, L = 0
VDC33:    VKICK, L = 0
HDC34:    HKICK, L = 0
VDC35:    VKICK, L = 0
HDC36:    HKICK, L = 0
VDC37:    VKICK, L = 0
HDC38:    HKICK, L = 0
VDC39:    VKICK, L = 0
HDC42:    HKICK, L = 0
VDC43:    VKICK, L = 0
HDC44:    HKICK, L = 0
VDC45:    VKICK, L = 0
HDC46:    HKICK, L = 0
VDC47:    VKICK, L = 0
HDC48:    HKICK, L = 0
HDC48C:   HKICK, L = 0
VDC48:    VKICK, L = 0
HDC49:    HKICK, L = 0
VDC49:    VKICK, L = 0

D0BUMPK1: HKICK, L = 0
D0BUMPK2: HKICK, L = 0

HDD11:    HKICK, L = 0
VDD11:    VKICK, L = 0
VDD12:    VKICK, L = 0
HDD12:    HKICK, L = 0
HDD13:    HKICK, L = 0
VDD14:    VKICK, L = 0
HDD15:    HKICK, L = 0
VDD16:    VKICK, L = 0
HDD17:    HKICK, L = 0
VDD18:    VKICK, L = 0
HDD19:    HKICK, L = 0
VDD21:    VKICK, L = 0
HDD22:    HKICK, L = 0
VDD23:    VKICK, L = 0
HDD24:    HKICK, L = 0
VDD25:    VKICK, L = 0
HDD26:    HKICK, L = 0
VDD27:    VKICK, L = 0
HDD28:    HKICK, L = 0
VDD29:    VKICK, L = 0
HDD32:    HKICK, L = 0
VDD33:    VKICK, L = 0
HDD34:    HKICK, L = 0
VDD35:    VKICK, L = 0
HDD36:    HKICK, L = 0
VDD37:    VKICK, L = 0
HDD38:    HKICK, L = 0
VDD39:    VKICK, L = 0
HDD42:    HKICK, L = 0
VDD43:    VKICK, L = 0
HDD44:    HKICK, L = 0
VDD45:    VKICK, L = 0
HDD46:    HKICK, L = 0
VDD47:    VKICK, L = 0
HDD48:    HKICK, L = 0
HDD49:    HKICK, L = 0
VDD49:    VKICK, L = 0

! 
! bpm's
! 

HBPME11:  HMONITOR
VBPME11:  VMONITOR
VBPME12:  VMONITOR
HBPME13:  HMONITOR
VBPME14:  VMONITOR
HBPME15:  HMONITOR
VBPME16:  VMONITOR
HBPME17:  HMONITOR
VBPME18:  VMONITOR
HBPME19:  HMONITOR
VBPME21:  VMONITOR
HBPME22:  HMONITOR
VBPME23:  VMONITOR
HBPME24:  HMONITOR
VBPME25:  VMONITOR
HBPME26:  HMONITOR
VBPME27:  VMONITOR
HBPME28:  HMONITOR
VBPME29:  VMONITOR
HBPME32:  HMONITOR
VBPME33:  VMONITOR
HBPME34:  HMONITOR
VBPME35:  VMONITOR
HBPME36:  HMONITOR
VBPME37:  VMONITOR
HBPME38:  HMONITOR
VBPME39:  VMONITOR
HBPME42:  HMONITOR
VBPME43:  VMONITOR
HBPME44:  HMONITOR
VBPME45:  VMONITOR
HBPME46:  HMONITOR
VBPME47:  VMONITOR
HBPME48:  HMONITOR
HBPME49:  HMONITOR
VBPME49:  VMONITOR

VBPMF0LU: VMONITOR  ! Both the UL and DL BPM's are Downstream of F0.
HBPMF0LU: HMONITOR  ! UL is Upstream of Lamb.
HBPMF0LD: HMONITOR  ! DL is Downstream of Lamb.
VBPMF0LD: VMONITOR

HBPMF11:  HMONITOR
VBPMF11:  VMONITOR
VBPMF12:  VMONITOR
HBPMF13:  HMONITOR
VBPMF14:  VMONITOR
HBPMF15:  HMONITOR
VBPMF16:  VMONITOR
HBPMF17:  HMONITOR
VBPMF18:  VMONITOR
HBPMF19:  HMONITOR
VBPMF21:  VMONITOR
HBPMF22:  HMONITOR
VBPMF23:  VMONITOR
HBPMF24:  HMONITOR
VBPMF25:  VMONITOR
HBPMF26:  HMONITOR
VBPMF27:  VMONITOR
HBPMF28:  HMONITOR
VBPMF29:  VMONITOR
HBPMF32:  HMONITOR
VBPMF33:  VMONITOR
HBPMF34:  HMONITOR
VBPMF35:  VMONITOR
HBPMF36:  HMONITOR
VBPMF37:  VMONITOR
HBPMF38:  HMONITOR
VBPMF39:  VMONITOR
HBPMF42:  HMONITOR
VBPMF43:  VMONITOR
HBPMF44:  HMONITOR
VBPMF45:  VMONITOR
HBPMF46:  HMONITOR
VBPMF47:  VMONITOR
HBPMF48:  HMONITOR
HBPMF49:  HMONITOR
VBPMF49:  VMONITOR

HBPMA0U:  HMONITOR
VBPMA0U:  VMONITOR
VBPMA0D:  VMONITOR
HBPMA0D:  HMONITOR

HBPMA11:  HMONITOR
VBPMA11:  VMONITOR
VBPMA12:  VMONITOR
HBPMA13:  HMONITOR
VBPMA14:  VMONITOR
HBPMA15:  HMONITOR
VBPMA16:  VMONITOR
HBPMA17:  HMONITOR
VBPMA18:  VMONITOR
HBPMA19:  HMONITOR
VBPMA21:  VMONITOR
HBPMA22:  HMONITOR
VBPMA23:  VMONITOR
HBPMA24:  HMONITOR
VBPMA25:  VMONITOR
HBPMA26:  HMONITOR
VBPMA27:  VMONITOR
HBPMA28:  HMONITOR
VBPMA29:  VMONITOR
HBPMA32:  HMONITOR
VBPMA33:  VMONITOR
HBPMA34:  HMONITOR
VBPMA35:  VMONITOR
HBPMA36:  HMONITOR
VBPMA37:  VMONITOR
HBPMA38:  HMONITOR
VBPMA39:  VMONITOR
HBPMA42:  HMONITOR
VBPMA43:  VMONITOR
HBPMA44:  HMONITOR
VBPMA45:  VMONITOR
HBPMA46:  HMONITOR
VBPMA47:  VMONITOR
HBPMA48:  HMONITOR
VBPMA48:  VMONITOR
HBPMA49:  HMONITOR
VBPMA49:  VMONITOR
HBPMB0U:  HMONITOR
VBPMB0U:  VMONITOR

VBPMB0D:  VMONITOR
HBPMB0D:  HMONITOR
VBPMB11:  VMONITOR
HBPMB11:  HMONITOR
HBPMB12:  HMONITOR
VBPMB12:  VMONITOR
HBPMB13:  HMONITOR
VBPMB14:  VMONITOR
HBPMB15:  HMONITOR
VBPMB16:  VMONITOR
HBPMB17:  HMONITOR
VBPMB18:  VMONITOR
HBPMB19:  HMONITOR
VBPMB21:  VMONITOR
HBPMB22:  HMONITOR
VBPMB23:  VMONITOR
HBPMB24:  HMONITOR
VBPMB25:  VMONITOR
HBPMB26:  HMONITOR
VBPMB27:  VMONITOR
HBPMB28:  HMONITOR
VBPMB29:  VMONITOR
HBPMB32:  HMONITOR
VBPMB33:  VMONITOR
HBPMB34:  HMONITOR
VBPMB35:  VMONITOR
HBPMB36:  HMONITOR
VBPMB37:  VMONITOR
HBPMB38:  HMONITOR
VBPMB39:  VMONITOR
HBPMB42:  HMONITOR
VBPMB43:  VMONITOR
HBPMB44:  HMONITOR
VBPMB45:  VMONITOR
HBPMB46:  HMONITOR
VBPMB47:  VMONITOR
HBPMB48:  HMONITOR
HBPMB49:  HMONITOR
VBPMB49:  VMONITOR

HBPMC11:  HMONITOR
VBPMC11:  VMONITOR
VBPMC12:  VMONITOR
HBPMC13:  HMONITOR
VBPMC14:  VMONITOR
HBPMC15:  HMONITOR
VBPMC16:  VMONITOR
HBPMC17:  HMONITOR
VBPMC18:  VMONITOR
HBPMC19:  HMONITOR
VBPMC21:  VMONITOR
HBPMC22:  HMONITOR
VBPMC23:  VMONITOR
HBPMC24:  HMONITOR
VBPMC25:  VMONITOR
HBPMC26:  HMONITOR
VBPMC27:  VMONITOR
HBPMC28:  HMONITOR
VBPMC29:  VMONITOR
HBPMC32:  HMONITOR
VBPMC33:  VMONITOR
HBPMC34:  HMONITOR
VBPMC35:  VMONITOR
HBPMC36:  HMONITOR
VBPMC37:  VMONITOR
HBPMC38:  HMONITOR
VBPMC39:  VMONITOR
HBPMC42:  HMONITOR
VBPMC43:  VMONITOR
HBPMC44:  HMONITOR
VBPMC45:  VMONITOR
HBPMC46:  HMONITOR
VBPMC47:  VMONITOR
HBPMC48:  HMONITOR
VBPMC48:  VMONITOR
HBPMC49:  HMONITOR
VBPMC49:  VMONITOR
HBPMD0U:  HMONITOR
VBPMD0U:  VMONITOR

VBPMD0D:  VMONITOR
HBPMD0D:  HMONITOR
VBPMD11:  VMONITOR
HBPMD11:  HMONITOR
HBPMD12:  HMONITOR
VBPMD12:  VMONITOR
HBPMD13:  HMONITOR
VBPMD14:  VMONITOR
HBPMD15:  HMONITOR
VBPMD16:  VMONITOR
HBPMD17:  HMONITOR
VBPMD18:  VMONITOR
HBPMD19:  HMONITOR
VBPMD21:  VMONITOR
HBPMD22:  HMONITOR
VBPMD23:  VMONITOR
HBPMD24:  HMONITOR
VBPMD25:  VMONITOR
HBPMD26:  HMONITOR
VBPMD27:  VMONITOR
HBPMD28:  HMONITOR
VBPMD29:  VMONITOR
HBPMD32:  HMONITOR
VBPMD33:  VMONITOR
HBPMD34:  HMONITOR
VBPMD35:  VMONITOR
HBPMD36:  HMONITOR
VBPMD37:  VMONITOR
HBPMD38:  HMONITOR
VBPMD39:  VMONITOR
HBPMD42:  HMONITOR
VBPMD43:  VMONITOR
HBPMD44:  HMONITOR
VBPMD45:  VMONITOR
HBPMD46:  HMONITOR
VBPMD47:  VMONITOR
HBPMD48:  HMONITOR
HBPMD49:  HMONITOR
VBPMD49:  VMONITOR

!
! FPD Roman Pots
!

! must fit vacuum valve and roman pot station into 25 inches = 0.63500 meter
! vacuum valve flange-to-flange is 3.35 inches = 0.08509
! roman pot flange-to-flange is 25 - 3.35 inches = 0.54991

! pot flange to center of first detector is 0.184
! center of detectors are 0.152 meters apart
! second detector to pot flange is 0.54991 - 0.184 - 0.152 = 0.21391

DFPDSPC1: DRIFT, L = 0.184
DFPDSEP:  DRIFT, L = 0.152
DFPDSPC2: DRIFT, L = 0.21391
DVACVLV:  DRIFT, L = 0.08509


! 3/15/99 changed ordering of pots to put horizontal pots closest to
! the separators. 

FPDPOTP1: LINE = ( DFPDSPC1, MFPD_P1U, MFPD_P1D, DFPDSEP, &
                 MFPD_P1I, MFPD_P1O, DFPDSPC2 )
FPDPOTP2: LINE = ( DFPDSPC1, MFPD_P2I, MFPD_P2O, DFPDSEP, &
                 MFPD_P2U, MFPD_P2D, DFPDSPC2 )
FPDPOTA1: LINE = ( DFPDSPC2, MFPD_A1I, MFPD_A1O, DFPDSEP, &
                 MFPD_A1U, MFPD_A1D, DFPDSPC1  )
FPDPOTA2: LINE = ( DFPDSPC2, MFPD_A2U, MFPD_A2D, DFPDSEP, &
                 MFPD_A2I, MFPD_A2O, DFPDSPC1 )
FPDPOTD1: LINE = ( DFPDSPC2, DFPDSEP, MFPD_D1I, DFPDSPC1 )
FPDPOTD2: LINE = ( DFPDSPC2, DFPDSEP, MFPD_D2I, DFPDSPC1 )

LONGSTRE0D: LINE = ( DLONG1E0 )

!  In the standard version, I've moved ME0 so that it is almost exactly 1/6 of 
!     the ring from MD0. This moves it by 15.2 cm upstream. 
! For Run II, I've also put in the proton removal insert with 
!     4 b2 magnets used as a dogleg.        ppb    9/4/97
!   For Run II, the marker ME0 is inside the last DOGLEGM. 
!   So I've split this into two pieces. 
E0DOGLEGM:LINE = ( DDOGEND1, E0DOGM, DDOGEND1 )
E0DOGLEGP:LINE = ( DDOGEND1, E0DOGP, DDOGEND1 )
E0COLL2:  LINE = ( DR2COLLEND, ME02UHCL, ME02UVCL, DR2COLL2, E02HCL, & 
                   E02VCL, DR2COLL2, ME02DHCL, ME02DVCL, DR2COLLEND )
E0COLL3:  LINE = ( DR2COLLEND, ME03UHCL, ME03UVCL, DR2COLL2, E03HCL, &
                   E03VCL, DR2COLL2, ME03DHCL, ME03DVCL, DR2COLLEND )

E0DAMPK:  LINE = ( DPHDAMPK, D3IN, DPVDAMPK, D3IN, DPBHDAMPK, D3IN, DPBVDAMPK )
E0DAMPPU: LINE = ( DHDAMPPU, D3IN, DVDAMPPU ) 
LSTRE0DR2:LINE = ( E0DOGMP2, DDOGEND1, DE0SP6, E0DAMPK, DE0SP7, &
                   DBELL7A, E0COLL2, DBELL7A, E0COLL3, DBELL7A, &
                   E0DAMPPU, DE0SP8, DGV4, DE0SP9, DTAB, D3IN )

QUADE0D:  LINE = ( DQUAD1END, HQUAD1F, DQUAD1END )
COLDBYP1: LINE = ( DCOLD1 )
STRAIGHTE0D:  LINE = ( DE11END, HFWE11, DE11MID, VFWE11, DE11END )
COLDBYP2: LINE = ( DCOLD2 )
E0DOWN:   LINE = ( ME0, LONGSTRE0D, QUADE0D, COLDBYP1, STRAIGHTE0D, COLDBYP2 )
E0DOWNR2: LINE = ( ME0, LSTRE0DR2,  QUADE0D, COLDBYP1, STRAIGHTE0D, COLDBYP2 )
QUADE11:  LINE = ( DBPMIN, HBPME11, DBPMOUT, HQUAD2D, DQOUT1 )
PACKE11:  LINE = (DBPMIN1,VBPME11,DBPMOUT1,DHQUADC,TSQE0,HDE11,VDE11,&
           DHQUADC, DPACKOUT1 )
DIPOLE:   LINE = ( DBENDEND, BENDQ, BEND, BENDQ, DBENDEND )
E11:      LINE = ( ME11, QUADE11, PACKE11, 4*DIPOLE )
QUADE12:  LINE = ( DBPMIN, VBPME12, DBPMOUT, HQUAD3D, DQOUT )
PACKE12:  LINE = ( DPACKIN, DHQUADC, TSX, TQX, VDE12, DHQUADC, &
           DPACKU2D, DPACKOUT )
E12:      LINE = ( ME12, QUADE12, PACKE12, 4*DIPOLE )
QUADE13:  LINE = ( DBPMIN, HBPME13, DBPMOUT, HQUADF, DQOUT )
PACKE13:  LINE = ( DPACKIN, TQFA4, TSF, HDE13, DPACKU2D, TSQ, DPACKOUT )
PACKE13R2:LINE = ( DPACKIN, TQFE1, TSF, HDE13, DPACKU2D, TSQ, DPACKOUT )
E13:      LINE = ( ME13, QUADE13, PACKE13,   4*DIPOLE )
E13R2:    LINE = ( ME13, QUADE13, PACKE13R2, 4*DIPOLE )
QUADE14:  LINE = ( DBPMIN, VBPME14, DBPMOUT, HQUADD, DQOUT )
PACKE14:  LINE = ( DPIN5LOC, TQDD1, TSD, VDE14, DPOUT5LOC )
PACKE14R2:LINE = ( DPIN5LOC, TQDE2, TSD, VDE14, DPOUT5LOC )
E14:      LINE = ( ME14, QUADE14, PACKE14,   DWSTRSS, COLDBYP2, 4*DIPOLE )
E14R2:    LINE = ( ME14, QUADE14, PACKE14R2, DWSTRSS, COLDBYP2, 4*DIPOLE )
QUADE15:  LINE = ( DBPMIN, HBPME15, DBPMOUT, HQUADF, DQOUT )
PACKE15:  LINE = ( DPIN5LOC, TQFA4, TSF, HDE15, DPOUT5LOC )
PACKE15R2:LINE = ( DPIN5LOC, TQFE1, TSF, HDE15, DPOUT5LOC )
FEEDCAN:  LINE = ( DFCANIN, FCAN, DFCANOUT )
E15:      LINE = ( ME15, QUADE15, PACKE15,   FEEDCAN, 4*DIPOLE )
E15R2:    LINE = ( ME15, QUADE15, PACKE15R2, FEEDCAN, 4*DIPOLE )
QUADE16:  LINE = ( DBPMIN, VBPME16, DBPMOUT, HQUADD, DQOUT )
PACKE16:  LINE = ( DPACKIN, TQDD1, TSD, VDE16, DPACKU2D, DPACKOUT )
PACKE16R2:LINE = ( DPACKIN, TQDE2, TSD, VDE16, DPACKU2D, DPACKOUT )
E16:      LINE = ( ME16, QUADE16, PACKE16,   4*DIPOLE )
E16R2:    LINE = ( ME16, QUADE16, PACKE16R2, 4*DIPOLE )
QUADE17:  LINE = ( DBPMIN, HBPME17, DBPMOUT, HQUADF, DQOUT )
PACKE17:  LINE = ( DPACKIN, TQFA4, TSF, HDE17, DPACKU2D, TOD39S, CS3E1AM, &
                   TSQ, DPACKOUT )
PACKE17R2:LINE = ( DPACKIN, TQFE1, TSF, HDE17, DPACKU2D, TOD39S, CS3E1AM, &
                   TSQ, DPACKOUT )
KICKE17:  LINE = ( DE17A, ME17KHORZ, DE17B, HFWE17, DE17C, MPINGVERT, DE17D )
E17:      LINE = ( ME17, QUADE17, PACKE17,   COLDBYP1, KICKE17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
E17R2:    LINE = ( ME17, QUADE17, PACKE17R2, COLDBYP1, KICKE17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
QUADE18:  LINE = ( DBPMIN, VBPME18, DBPMOUT, HQUADD, DQOUT )
PACKE18:  LINE = ( DPACKIN, TQDD1, TSD, VDE18, DPACKU2D, DPACKOUT )
PACKE18R2:LINE = ( DPACKIN, TQDE2, TSD, VDE18, DPACKU2D, DPACKOUT )
E18:      LINE = ( ME18, QUADE18, PACKE18,   4*DIPOLE )
E18R2:    LINE = ( ME18, QUADE18, PACKE18R2, 4*DIPOLE )
QUADE19:  LINE = ( DBPMIN, HBPME19, DBPMOUT, HQUADF, DQOUT )
PACKE19:  LINE = ( DPACKIN, TQFA4, TSF, HDE19, DPACKU2D, TOF39S, DPACKOUT )
PACKE19FT:LINE = ( DPACKIN, TQFE1, TSF, HDE19, DPACKU2D, TOF39S, DPACKOUT )
PACKE19R2:LINE = ( DPACKIN, TQE19, TSF, HDE19, DPACKU2D, TOF39S, DPACKOUT )
E19:      LINE = ( ME19, QUADE19, PACKE19,   4*DIPOLE )
E19R2:    LINE = ( ME19, QUADE19, PACKE19R2, 4*DIPOLE )
E19FT:    LINE = ( ME19, QUADE19, PACKE19FT, 4*DIPOLE )
ETEN:     LINE = ( E11, E12, E13,   E14,   E15,   E16,   E17,   E18,   E19 )
ETENR2:   LINE = ( E11, E12, E13R2, E14R2, E15R2, E16R2, E17R2, E18R2, E19R2 )
ETENFT:   LINE = ( E11, E12, E13R2, E14R2, E15R2, E16R2, E17R2, E18R2, E19FT )
QUADE21:  LINE = ( DBPMIN, VBPME21, DBPMOUT, HQUADD, DQOUT )
PACKE21:  LINE = ( DPIN5LOC, TQDD1, TSD, VDE21, DPOUT5LOC )
PACKE21R2:LINE = ( DPIN5LOC, TQDE2, TSD, VDE21, DPOUT5LOC )
TABGVTAB: LINE = ( DSSINF, DTAB, DGV3, DTAB )
E21:      LINE = ( ME21, QUADE21, PACKE21,   TABGVTAB, 4*DIPOLE )
E21R2:    LINE = ( ME21, QUADE21, PACKE21R2, TABGVTAB, 4*DIPOLE )
QUADE22:  LINE = ( DBPMIN, HBPME22, DBPMOUT, HQUADF, DQOUT )
PACKE22:  LINE = ( DPACKIN, TQFA4, TSF, HDE22, DPACKU2D, CS3E1AP, TSQ, &
                   TOD39C, DPACKOUT )
PACKE22R2:LINE = ( DPACKIN, TQFE1, TSF, HDE22, DPACKU2D, CS3E1AP, TSQ, &
                   TOD39C, DPACKOUT )
E22:      LINE = ( ME22, QUADE22, PACKE22,   4*DIPOLE )
E22R2:    LINE = ( ME22, QUADE22, PACKE22R2, 4*DIPOLE )
QUADE23:  LINE = ( DBPMIN, VBPME23, DBPMOUT, HQUADD, DQOUT )
PACKE23:  LINE = ( DPACKIN, TQDD1, TSD, VDE23, DPACKU2D, TOZD, TQ2, DPACKOUT )
PACKE23R2:LINE = ( DPACKIN, TQDE2, TSD, VDE23, DPACKU2D, TOZD, TQ2, DPACKOUT )
E23:      LINE = ( ME23, QUADE23, PACKE23,   4*DIPOLE )
E23R2:    LINE = ( ME23, QUADE23, PACKE23R2, 4*DIPOLE )
QUADE24:  LINE = ( DBPMIN, HBPME24, DBPMOUT, HQUADF, DQOUT )
PACKE24:  LINE = ( DPACKIN, TQFA4, TSF, HDE24, DPACKU2D, CS1E2AP, TOF39C, &
           DPACKOUT )
PACKE24R2:LINE = ( DPACKIN, TQFE1, TSF, HDE24, DPACKU2D, CS1E2AP, TOF39C, &
           DPACKOUT )
E24:      LINE = ( ME24, QUADE24, PACKE24,   4*DIPOLE )
E24R2:    LINE = ( ME24, QUADE24, PACKE24R2, 4*DIPOLE )
QUADE25:  LINE = ( DBPMIN, VBPME25, DBPMOUT, HQUADD, DQOUT )
PACKE25:  LINE = ( DPIN5LOC, TQDD1, TSD, VDE25, DPOUT5LOC )
PACKE25R2:LINE = ( DPIN5LOC, TQDE2, TSD, VDE25, DPOUT5LOC )
E25:      LINE = ( ME25, QUADE25, PACKE25,   FEEDCAN, 4*DIPOLE )
E25R2:    LINE = ( ME25, QUADE25, PACKE25R2, FEEDCAN, 4*DIPOLE )
QUADE26:  LINE = ( DBPMIN, HBPME26, DBPMOUT, HQUADF, DQOUT )
PACKE26:  LINE = ( DPACKIN, TQFA4, TSF, HDE26, DPACKU2D, TOF39S, TSQ, &
           DPACKOUT )
PACKE26R2:LINE = ( DPACKIN, TQE26, TSF, HDE26, DPACKU2D, TOF39S, TSQ, &
           DPACKOUT )
PACKE26FT:LINE = ( DPACKIN, TQFE1, TSF, HDE26, DPACKU2D, TOF39S, TSQ, &
           DPACKOUT )
E26:      LINE = ( ME26, QUADE26, PACKE26,   4*DIPOLE )
E26R2:    LINE = ( ME26, QUADE26, PACKE26R2, 4*DIPOLE )
E26FT:    LINE = ( ME26, QUADE26, PACKE26FT, 4*DIPOLE )
QUADE27:  LINE = ( DBPMIN, VBPME27, DBPMOUT, HQUADD, DQOUT )
PACKE27:  LINE = ( DPACKIN, TQDD1, TSD, VDE27, DPACKU2D, TOZD, TQ4, DPACKOUT )
PACKE27R2:LINE = ( DPACKIN, TQDE2, TSD, VDE27, DPACKU2D, TOZD, TQ4, DPACKOUT )
E27:      LINE = ( ME27, QUADE27, PACKE27,   4*DIPOLE )
E27R2:    LINE = ( ME27, QUADE27, PACKE27R2, 4*DIPOLE )
QUADE28:  LINE = ( DBPMIN, HBPME28, DBPMOUT, HQUADF, DQOUT )
PACKE28:  LINE = ( DPACKIN, TQFA4, TSF, HDE28, DPACKU2D, TOD39S, CS1E2AM, &
           DPACKOUT )
PACKE28R2:LINE = ( DPACKIN, TQE28, TSF, HDE28, DPACKU2D, TOD39S, CS1E2AM, &
           DPACKOUT )
PACKE28FT:LINE = ( DPACKIN, TQFE1, TSF, HDE28, DPACKU2D, TOD39S, CS1E2AM, &
           DPACKOUT )
E28:      LINE = ( ME28, QUADE28, PACKE28,   4*DIPOLE )
E28R2:    LINE = ( ME28, QUADE28, PACKE28R2, 4*DIPOLE )
E28FT:    LINE = ( ME28, QUADE28, PACKE28FT, 4*DIPOLE )
QUADE29:  LINE = ( DBPMIN, VBPME29, DBPMOUT, HQUADD, DQOUT )
PACKE29:  LINE = ( DPIN5LOC, TQDD1, TSD, VDE29, DPOUT5LOC )
PACKE29R2:LINE = ( DPIN5LOC, TQDE2, TSD, VDE29, DPOUT5LOC )
E29:      LINE = ( ME29, QUADE29, PACKE29,   TABGVTAB, 4*DIPOLE )
E29R2:    LINE = ( ME29, QUADE29, PACKE29R2, TABGVTAB, 4*DIPOLE )
ETWENTY:  LINE = ( E21,   E22,   E23,   E24,   E25,   E26,   E27,   E28,   &
                     E29 )
ETWENTYR2:LINE = ( E21R2, E22R2, E23R2, E24R2, E25R2, E26R2, E27R2, E28R2, &
                     E29R2 )
ETWENTYFT:LINE = ( E21R2, E22R2, E23R2, E24R2, E25R2, E26FT, E27R2, E28FT, &
                     E29R2 )
QUADE32:  LINE = ( DBPMIN, HBPME32, DBPMOUT, HQUADF, DQOUT )
PACKE32:  LINE = ( DPACKIN, TQFA4, TSF, HDE32, DPACKU2D, CS3E3AM, &
                   TSQ, TOF39C, DPACKOUT )
PACKE32R2:LINE = ( DPACKIN, TQFE1, TSF, HDE32, DPACKU2D, CS3E3AM, &
                   TSQ, TOF39C, DPACKOUT )
E32:      LINE = ( ME32, QUADE32, PACKE32,   4*DIPOLE )
E32R2:    LINE = ( ME32, QUADE32, PACKE32R2, 4*DIPOLE )
QUADE33:  LINE = ( DBPMIN, VBPME33, DBPMOUT, HQUADD, DQOUT )
PACKE33:  LINE = ( DPACKIN, TQDD1, TSD, VDE33, DPACKU2D, TOZD, TQ2, DPACKOUT )
PACKE33R2:LINE = ( DPACKIN, TQDE2, TSD, VDE33, DPACKU2D, TOZD, TQ2, DPACKOUT )
E33:      LINE = ( ME33, QUADE33, PACKE33,   4*DIPOLE )
E33R2:    LINE = ( ME33, QUADE33, PACKE33R2, 4*DIPOLE )
QUADE34:  LINE = ( DBPMIN, HBPME34, DBPMOUT, HQUADF, DQOUT )
PACKE34:  LINE = ( DPACKIN, TQFA4, TSF, HDE34, DPACKU2D, TOD39C, DPACKOUT )
PACKE34R2:LINE = ( DPACKIN, TQFE1, TSF, HDE34, DPACKU2D, TOD39C, DPACKOUT )
E34:      LINE = ( ME34, QUADE34, PACKE34,   4*DIPOLE )
E34R2:    LINE = ( ME34, QUADE34, PACKE34R2, 4*DIPOLE )
QUADE35:  LINE = ( DBPMIN, VBPME35, DBPMOUT, HQUADD, DQOUT )
PACKE35:  LINE = ( DPIN5LOC, TQDD1, TSD, VDE35, DPOUT5LOC )
PACKE35R2:LINE = ( DPIN5LOC, TQDE2, TSD, VDE35, DPOUT5LOC )
E35:      LINE = ( ME35, QUADE35, PACKE35,   FEEDCAN, 4*DIPOLE )
E35R2:    LINE = ( ME35, QUADE35, PACKE35R2, FEEDCAN, 4*DIPOLE )
QUADE36:  LINE = ( DBPMIN, HBPME36, DBPMOUT, HQUADF, DQOUT )
PACKE36:  LINE = ( DPACKIN, TQFA4, TSF, HDE36, DPACKU2D, TOZF, CS3E3AP, &
                   TSQ, DPACKOUT )
PACKE36R2:LINE = ( DPACKIN, TQFE1, TSF, HDE36, DPACKU2D, TOZF, CS3E3AP, &
                   TSQ, DPACKOUT )
E36:      LINE = ( ME36, QUADE36, PACKE36,   4*DIPOLE )
E36R2:    LINE = ( ME36, QUADE36, PACKE36R2, 4*DIPOLE )
QUADE37:  LINE = ( DBPMIN, VBPME37, DBPMOUT, HQUADD, DQOUT )
PACKE37:  LINE = ( DPACKIN, TQDD1, TSD, VDE37, DPACKU2D, TOZD, TQ4, DPACKOUT )
PACKE37R2:LINE = ( DPACKIN, TQDE2, TSD, VDE37, DPACKU2D, TOZD, TQ4, DPACKOUT )
E37:      LINE = ( ME37, QUADE37, PACKE37,   4*DIPOLE )
E37R2:    LINE = ( ME37, QUADE37, PACKE37R2, 4*DIPOLE )
QUADE38:  LINE = ( DBPMIN, HBPME38, DBPMOUT, HQUADF, DQOUT )
PACKE38:  LINE = ( DPACKIN, TQFA4, TSF, HDE38, DPACKU2D, DPACKOUT )
PACKE38R2:LINE = ( DPACKIN, TQFE1, TSF, HDE38, DPACKU2D, DPACKOUT )
E38:      LINE = ( ME38, QUADE38, PACKE38,   4*DIPOLE )
E38R2:    LINE = ( ME38, QUADE38, PACKE38R2, 4*DIPOLE )
QUADE39:  LINE = ( DBPMIN, VBPME39 , DBPMOUT, HQUADD, DQOUT )
PACKE39:  LINE = ( DPIN5LOC, TQDD1, TSD, VDE39, DPOUT5LOC )
PACKE39R2:LINE = ( DPIN5LOC, TQDE2, TSD, VDE39, DPOUT5LOC )
E39:      LINE = ( ME39, QUADE39, PACKE39,   TABGVTAB, 4*DIPOLE )
E39R2:    LINE = ( ME39, QUADE39, PACKE39R2, TABGVTAB, 4*DIPOLE )
ETHIRTY:  LINE = ( E32,   E33,   E34,   E35,   E36,   E37,   E38,   E39 )
ETHIRTYR2:LINE = ( E32R2, E33R2, E34R2, E35R2, E36R2, E37R2, E38R2, E39R2 )
QUADE42:  LINE = ( DBPMIN, HBPME42, DBPMOUT, HQUADF, DQOUT )
PACKE42:  LINE = ( DPACKIN, TQFA4, TSF, HDE42, DPACKU2D, TOZF, TSQ, DPACKOUT )
PACKE42R2:LINE = ( DPACKIN, TQFE1, TSF, HDE42, DPACKU2D, TOZF, TSQ, DPACKOUT )
E42:      LINE = ( ME42, QUADE42, PACKE42,   4*DIPOLE )
E42R2:    LINE = ( ME42, QUADE42, PACKE42R2, 4*DIPOLE )
QUADE43:  LINE = ( DBPMIN, VBPME43, DBPMOUT, HQUADD, DQOUT )
PACKE43:  LINE = ( DPACKIN, TQDD1, TSD, VDE43, DPACKU2D, DPACKOUT )
PACKE43R2:LINE = ( DPACKIN, TQDE2, TSD, VDE43, DPACKU2D, DPACKOUT )
E43:      LINE = ( ME43, QUADE43, PACKE43,   4*DIPOLE )
E43R2:    LINE = ( ME43, QUADE43, PACKE43R2, 4*DIPOLE )
QUADE44:  LINE = ( DBPMIN, HBPME44, DBPMOUT, HQUADF, DQOUT )
PACKE44:  LINE = ( DPACKIN, TQFA4, TSF, HDE44, DPACKU2D, DPACKOUT )
PACKE44R2:LINE = ( DPACKIN, TQFE1, TSF, HDE44, DPACKU2D, DPACKOUT )
E44:      LINE = ( ME44, QUADE44, PACKE44,   4*DIPOLE )
E44R2:    LINE = ( ME44, QUADE44, PACKE44R2, 4*DIPOLE )
QUADE45:  LINE = ( DBPMIN, VBPME45, DBPMOUT, HQUADD, DQOUT )
PACKE45:  LINE = ( DPIN5LOC, TQDD1, TSD, VDE45, DPOUT5LOC )
PACKE45R2:LINE = ( DPIN5LOC, TQDE2, TSD, VDE45, DPOUT5LOC )
E45:      LINE = ( ME45, QUADE45, PACKE45,   FEEDCAN, 4*DIPOLE )
E45R2:    LINE = ( ME45, QUADE45, PACKE45R2, FEEDCAN, 4*DIPOLE )
QUADE46:  LINE = ( DBPMIN, HBPME46, DBPMOUT, HQUADF, DQOUT )
PACKE46:  LINE = ( DPACKIN, TQFA4, TSF, HDE46, DPACKU2D, TSQ, DPACKOUT )
PACKE46R2:LINE = ( DPACKIN, TQFE1, TSF, HDE46, DPACKU2D, TSQ, DPACKOUT )
E46:      LINE = ( ME46, QUADE46, PACKE46,   4*DIPOLE )
E46R2:    LINE = ( ME46, QUADE46, PACKE46R2, 4*DIPOLE )
QUADE47:  LINE = ( DBPMIN, VBPME47, DBPMOUT, HQUADD, DQOUT )
PACKE47:  LINE = ( DPACKIN, TQDD1, TSD, VDE47, DPACKU2D, DPACKOUT )
PACKE47R2:LINE = ( DPACKIN, TQE47, TSD, VDE47, DPACKU2D, DPACKOUT )
PACKE47FT:LINE = ( DPACKIN, TQDE2, TSD, VDE47, DPACKU2D, DPACKOUT )
E47:      LINE = ( ME47, QUADE47, PACKE47,   4*DIPOLE )
E47R2:    LINE = ( ME47, QUADE47, PACKE47R2, 4*DIPOLE )
E47FT:    LINE = ( ME47, QUADE47, PACKE47FT, 4*DIPOLE )
QUADE48:  LINE = ( DBPMIN, HBPME48, DBPMOUT, HQUAD3F, DQOUT )
PACKE48:  LINE = ( DPIN5LOC, DHQUADC, TSX, TQX, HDE48, DHQUADC, DPOUT5LOC )
STRAIGHTE48:  LINE = ( DSTRAIGHT6 )
! For Run II, the pbar injection kickers will be in the E48 straight.
E48WSTRR2:LINE = ( DE48SP1, DPBINJK, DPBINJK, DE48SP2 )

E48:      LINE = ( ME48, QUADE48, PACKE48, COLDBYP1, STRAIGHTE48, &
                    COLDBYP2, 3*DIPOLE )
E48R2:    LINE = ( ME48, QUADE48, PACKE48, COLDBYP1, E48WSTRR2, &
                    COLDBYP2, 3*DIPOLE )
QUADE49:  LINE = ( DBPMIN, HBPME49, DBPMOUT, HQUAD2F, DQOUT1 )
STRAIGHTE49:  LINE = ( DSTRAIGHT5 )
PACKE49:  LINE = ( DBPMIN1, VBPME49, DBPMOUT1, DHQUADC, TR3, VDE49, HDE49, &
           DHQUADC, DPACKOUT1 )
E49:      LINE = ( ME49, QUADE49, COLDBYP2, STRAIGHTE49, COLDBYP1, PACKE49 )
EFORTY:   LINE = ( E42,   E43,   E44,   E45,   E46,   E47,   E48,   E49 )
EFORTYR2: LINE = ( E42R2, E43R2, E44R2, E45R2, E46R2, E47R2, E48R2, E49 )
EFORTYFT: LINE = ( E42R2, E43R2, E44R2, E45R2, E46R2, E47FT, E48R2, E49 )

QUADF0U:  LINE = ( DQUAD1END, HQUAD1D, DQUAD1END )
LONGSTRF0U: LINE = ( DLONG4 )
F0UP:     LINE = ( MF0U, QUADF0U, LONGSTRF0U )

! Next bit is new version of F0 for Run II.   ppb 1/11/99
RFGROUP:  LINE = ( DRFCAVITY, DRFSP1, DRFCAVITY, DRFSP1, &
                   DRFCAVITY, DRFSP1, DRFCAVITY )
RFSTRAIGHT: LINE = ( DRFUP, RFGROUP, DRFSP2, RFGROUP, DRFDOWN )
F0UPR2:   LINE = ( MF0U, QUADF0U, RFSTRAIGHT )

SEXTANTE:  LINE = (E0DOWN,  ETEN,   ETWENTY,   ETHIRTY,   EFORTY,   F0UP )
SEXTANTER2:LINE = (E0DOWNR2,ETENR2, ETWENTYR2, ETHIRTYR2, EFORTYR2, F0UPR2 )
SEXTANTEFT:LINE = (E0DOWNR2,ETENFT, ETWENTYFT, ETHIRTYR2, EFORTYFT, F0UPR2 )

LONGSTRF0D: LINE = ( DLONG1 )
! Next bit is new version of F0 for Run II.   ppb  1/11/99

F0LAMBS:  LINE = ( MF0LAUS, DLAMBF0, MF0LADS, D6IN, &
                   MF0LBUS, DLAMBF0, MF0LBDS, D3IN, MTEV60, D3IN, &
                   MF0LCUS, DLAMBF0, MF0LCDS, D6IN, &
                   MF0LDUS, DLAMBF0, MF0LDDS )

LSTRF0DR2:LINE = ( DF0SP1A, VBPMF0LU, DF0SP2A, HBPMF0LU, DF0SP3, F0LAMBS, &
                   DF0SP4,  HBPMF0LD, DF0SP2A, VBPMF0LD, DF0SP5, DF0STRIP, &
                   DF0SP6 )

QUADF0D:  LINE = ( DQUAD1END, HQUAD1F, DQUAD1END )
STRAIGHTF0D:  LINE = ( DSTRAIGHT1 )
F0DOWN:   LINE = ( MF0, LONGSTRF0D, QUADF0D, COLDBYP1, STRAIGHTF0D, COLDBYP2 )
F0DOWNR2: LINE = ( MF0, LSTRF0DR2,  QUADF0D, COLDBYP1, STRAIGHTF0D, COLDBYP2 )

QUADF11:  LINE = ( DBPMIN, HBPMF11, DBPMOUT, HQUAD2D, DQOUT1 )
PACKF11:  LINE = ( DBPMIN1, VBPMF11, DBPMOUT1, DHQUADC, TR3, HDF11, VDF11, &
           DHQUADC, DPACKOUT1 )
F11:      LINE = ( MF11, QUADF11, PACKF11, 4*DIPOLE )
QUADF12:  LINE = ( DBPMIN, VBPMF12, DBPMOUT, HQUAD3D, DQOUT )
PACKF12:  LINE = ( DPACKIN, DHQUADC, TSX, TQX, VDF12, DHQUADC, DPACKU2D, &
                   CS2F1AP, DPACKOUT )
F12:      LINE = ( MF12, QUADF12, PACKF12, 4*DIPOLE )
QUADF13:  LINE = ( DBPMIN, HBPMF13, DBPMOUT, HQUADF, DQOUT )
PACKF13:  LINE = ( DPACKIN, TQFA4, TSF, HDF13, DPACKU2D, TSQ, DPACKOUT )
PACKF13R2:LINE = ( DPACKIN, TQFE1, TSF, HDF13, DPACKU2D, TSQ, DPACKOUT )
PACKF13FT:LINE = ( DPACKIN, TQFF3, TSF, HDF13, DPACKU2D, TSQ, DPACKOUT )
F13:      LINE = ( MF13, QUADF13, PACKF13,   4*DIPOLE )
F13R2:    LINE = ( MF13, QUADF13, PACKF13R2, 4*DIPOLE )
F13FT:    LINE = ( MF13, QUADF13, PACKF13FT, 4*DIPOLE )
QUADF14:  LINE = ( DBPMIN, VBPMF14, DBPMOUT, HQUADD, DQOUT )
PACKF14:  LINE = ( DPACKIN, TQDD1, TSD, VDF14, DPACKU2D, CS5F1AM, DPACKOUT )
PACKF14R2:LINE = ( DPACKIN, TQDE2, TSD, VDF14, DPACKU2D, CS5F1AM, DPACKOUT )
PACKF14FT:LINE = ( DPACKIN, TQDF4, TSD, VDF14, DPACKU2D, CS5F1AM, DPACKOUT )
F14:      LINE = ( MF14, QUADF14, PACKF14,   4*DIPOLE )
F14R2:    LINE = ( MF14, QUADF14, PACKF14R2, 4*DIPOLE )
F14FT:    LINE = ( MF14, QUADF14, PACKF14FT, 4*DIPOLE )
QUADF15:  LINE = ( DBPMIN, HBPMF15, DBPMOUT, HQUADF, DQOUT )
PACKF15:  LINE = ( DPIN5LOC, TQFA4, TSF, HDF15, DPOUT5LOC )
PACKF15R2:LINE = ( DPIN5LOC, TQFE1, TSF, HDF15, DPOUT5LOC )
PACKF15FT:LINE = ( DPIN5LOC, TQFF3, TSF, HDF15, DPOUT5LOC )
F15:      LINE = ( MF15, QUADF15, PACKF15,   FEEDCAN, 4*DIPOLE )
F15R2:    LINE = ( MF15, QUADF15, PACKF15R2, FEEDCAN, 4*DIPOLE )
F15FT:    LINE = ( MF15, QUADF15, PACKF15FT, FEEDCAN, 4*DIPOLE )
QUADF16:  LINE = ( DBPMIN, VBPMF16, DBPMOUT, HQUADD, DQOUT )
PACKF16:  LINE = ( DPACKIN, TQDD1, TSD, VDF16, DPACKU2D, CS2F1AM, DPACKOUT )
PACKF16R2:LINE = ( DPACKIN, TQDE2, TSD, VDF16, DPACKU2D, CS2F1AM, DPACKOUT )
PACKF16FT:LINE = ( DPACKIN, TQDF4, TSD, VDF16, DPACKU2D, CS2F1AM, DPACKOUT )
F16:      LINE = ( MF16, QUADF16, PACKF16,   4*DIPOLE )
F16R2:    LINE = ( MF16, QUADF16, PACKF16R2, 4*DIPOLE )
F16FT:    LINE = ( MF16, QUADF16, PACKF16FT, 4*DIPOLE )
QUADF17:  LINE = ( DBPMIN, HBPMF17, DBPMOUT, HQUADF, DQOUT )
PACKF17:  LINE = ( DPACKIN, TQFA4, TSF, HDF17, DPACKU2D, TSQ, TOF39S,DPACKOUT)
PACKF17R2:LINE = ( DPACKIN, TQFF3, TSF, HDF17, DPACKU2D, TSQ, TOF39S,DPACKOUT)
ESEPF17:  LINE = ( DSEPEND1, F17HESEP, DSEPB, ESEP, DSEPB, ESEP, DSEPB, &
           ESEP, DSEPEND1 )

! For Run II we intend to move the horz separator at F17 to D48 and
!   the F17 warm straight will be filled with the proton injection kickers
!   and a scraping insert.       ppb  9/4/97
F17COLL1:  LINE = ( DR2COLLEND, MF171UHCL, MF171UVCL, DR2COLL2, F171HCL, &
                    F171VCL, DR2COLL2, MF171DHCL, MF171DVCL, DR2COLLEND )
F17COLL2:  LINE = ( DR2COLLEND, MF172UHCL, MF172UVCL, DR2COLL2, F172HCL, &
                    F172VCL, DR2COLL2, MF172DHCL, MF172DVCL, DR2COLLEND )
F17COLL3:  LINE = ( DR2TARGSE, F173HCL, F173VCL, MF173HCL, MF173VCL, &
                    DR2TARGLE )
F17PINJK: LINE = ( 5*DPINJK )
F17WSTRR2:LINE = ( DGV2, DIONP, DBELL7, F17COLL1, DBELL7, F17COLL2, DBELL7, &
                    DF17SP1, F17PINJK, DBELL7, F17COLL3, DBELL7, DIONP, DGV2 )

F17:      LINE = ( MF17, QUADF17, PACKF17,   COLDBYP1, ESEPF17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
F17R2:    LINE = ( MF17, QUADF17, PACKF17R2, COLDBYP1, F17WSTRR2, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
QUADF18:  LINE = ( DBPMIN, VBPMF18, DBPMOUT, HQUADD, DQOUT )
PACKF18:  LINE = ( DPACKIN, TQDD1, TSD, VDF18, DPACKU2D, TS3, DPACKOUT )
PACKF18R2:LINE = ( DPACKIN, TQDF4, TSD, VDF18, DPACKU2D, TS3, DPACKOUT )
F18:      LINE = ( MF18, QUADF18, PACKF18,   4*DIPOLE )
F18R2:    LINE = ( MF18, QUADF18, PACKF18R2, 4*DIPOLE )
QUADF19:  LINE = ( DBPMIN, HBPMF19, DBPMOUT, HQUADF, DQOUT )
PACKF19:  LINE = ( DPACKIN, TQFA4, TSF, HDF19, DPACKU2D, TOD39S, CS1F2AP, &
           DPACKOUT )
PACKF19R2:LINE = ( DPACKIN, TQFF3, TSF, HDF19, DPACKU2D, TOD39S, CS1F2AP, &
           DPACKOUT )
F19:      LINE = ( MF19, QUADF19, PACKF19,   4*DIPOLE )
F19R2:    LINE = ( MF19, QUADF19, PACKF19R2, 4*DIPOLE )
FTEN:     LINE = ( F11, F12, F13,   F14,   F15,   F16,   F17,   F18,   F19 )
FTENR2:   LINE = ( F11, F12, F13R2, F14R2, F15R2, F16R2, F17R2, F18R2, F19R2 )
FTENFT:   LINE = ( F11, F12, F13FT, F14FT, F15FT, F16FT, F17R2, F18R2, F19R2 )
QUADF21:  LINE = ( DBPMIN, VBPMF21, DBPMOUT, HQUADD, DQOUT )
PACKF21:  LINE = ( DPIN5LOC, TQDD1, TSD, VDF21, DPOUT5LOC )
PACKF21R2:LINE = ( DPIN5LOC, TQDF4, TSD, VDF21, DPOUT5LOC )
F21:      LINE = ( MF21, QUADF21, PACKF21,   TABGVTAB, 4*DIPOLE )
F21R2:    LINE = ( MF21, QUADF21, PACKF21R2, TABGVTAB, 4*DIPOLE )
QUADF22:  LINE = ( DBPMIN, HBPMF22, DBPMOUT, HQUADF, DQOUT )
PACKF22:  LINE = ( DPACKIN, TQFA4, TSF, HDF22, DPACKU2D,TS2,TSQ,TOF39C, &
           DPACKOUT )
PACKF22R2:LINE = ( DPACKIN, TQFF3, TSF, HDF22, DPACKU2D,TS2,TSQ,TOF39C, &
           DPACKOUT )
F22:      LINE = ( MF22, QUADF22, PACKF22,   4*DIPOLE )
F22R2:    LINE = ( MF22, QUADF22, PACKF22R2, 4*DIPOLE )
QUADF23:  LINE = ( DBPMIN, VBPMF23, DBPMOUT, HQUADD, DQOUT )
PACKF23:  LINE = ( DPACKIN, TQDD1, TSD, VDF23, DPACKU2D, TOZD, CS2F2AP, &
                   TQ2, DPACKOUT )
PACKF23R2:LINE = ( DPACKIN, TQDF4, TSD, VDF23, DPACKU2D, TOZD, CS2F2AP, &
                   TQ2, DPACKOUT )
F23:      LINE = ( MF23, QUADF23, PACKF23,   4*DIPOLE )
F23R2:    LINE = ( MF23, QUADF23, PACKF23R2, 4*DIPOLE )
QUADF24:  LINE = ( DBPMIN, HBPMF24, DBPMOUT, HQUADF, DQOUT )
PACKF24:  LINE = ( DPACKIN, TQFA4, TSF, HDF24, DPACKU2D, CS4F2AM, TOD39C, &
           DPACKOUT )
PACKF24R2:LINE = ( DPACKIN, TQFF3, TSF, HDF24, DPACKU2D, CS4F2AP, TOD39C, &
           DPACKOUT )
F24:      LINE = ( MF24, QUADF24, PACKF24,   4*DIPOLE )
F24R2:    LINE = ( MF24, QUADF24, PACKF24R2, 4*DIPOLE )
QUADF25:  LINE = ( DBPMIN, VBPMF25, DBPMOUT, HQUADD, DQOUT )
PACKF25:  LINE = ( DPIN5LOC, TQDD1, TSD, VDF25, DPOUT5LOC )
PACKF25R2:LINE = ( DPIN5LOC, TQDF4, TSD, VDF25, DPOUT5LOC )
F25:      LINE = ( MF25, QUADF25, PACKF25,   FEEDCAN, 4*DIPOLE )
F25R2:    LINE = ( MF25, QUADF25, PACKF25R2, FEEDCAN, 4*DIPOLE )
QUADF26:  LINE = ( DBPMIN, HBPMF26, DBPMOUT, HQUADF, DQOUT )
PACKF26:  LINE = ( DPACKIN, TQFA4, TSF, HDF26, DPACKU2D, TOD39S, CS1F2AM, &
                   TSQ, DPACKOUT )
PACKF26R2:LINE = ( DPACKIN, TQFF3, TSF, HDF26, DPACKU2D, TOD39S, CS1F2AM, &
                   TSQ, DPACKOUT )
F26:      LINE = ( MF26, QUADF26, PACKF26,   4*DIPOLE )
F26R2:    LINE = ( MF26, QUADF26, PACKF26R2, 4*DIPOLE )
QUADF27:  LINE = ( DBPMIN, VBPMF27, DBPMOUT, HQUADD, DQOUT )
PACKF27:  LINE = ( DPACKIN, TQDD1, TSD, VDF27, DPACKU2D, TOZD, TS4, TQ4, &
           DPACKOUT )
PACKF27R2:LINE = ( DPACKIN, TQDF4, TSD, VDF27, DPACKU2D, TOZD, TS4, TQ4, &
           DPACKOUT )
F27:      LINE = ( MF27, QUADF27, PACKF27,   4*DIPOLE )
F27R2:    LINE = ( MF27, QUADF27, PACKF27R2, 4*DIPOLE )
QUADF28:  LINE = ( DBPMIN, HBPMF28, DBPMOUT, HQUADF, DQOUT )
PACKF28:  LINE = ( DPACKIN, TQFA4, TSF, HDF28, DPACKU2D, TOF39S, CS4F2AP, &
           DPACKOUT )
PACKF28R2:LINE = ( DPACKIN, TQF28, TSF, HDF28, DPACKU2D, TOF39S, CS4F2AM, &
           DPACKOUT )
PACKF28FT:LINE = ( DPACKIN, TQFF3, TSF, HDF28, DPACKU2D, TOF39S, CS4F2AP, &
           DPACKOUT )
F28:      LINE = ( MF28, QUADF28, PACKF28,   4*DIPOLE )
F28R2:    LINE = ( MF28, QUADF28, PACKF28R2, 4*DIPOLE )
F28FT:    LINE = ( MF28, QUADF28, PACKF28FT, 4*DIPOLE )
QUADF29:  LINE = ( DBPMIN, VBPMF29, DBPMOUT, HQUADD, DQOUT )
PACKF29:  LINE = ( DPIN5LOC, TQDD1, TSD, VDF29, DPOUT5LOC )
PACKF29R2:LINE = ( DPIN5LOC, TQDF4, TSD, VDF29, DPOUT5LOC )
F29:      LINE = ( MF29, QUADF29, PACKF29,   TABGVTAB, 4*DIPOLE )
F29R2:    LINE = ( MF29, QUADF29, PACKF29R2, TABGVTAB, 4*DIPOLE )
FTWENTY:  LINE = ( F21,   F22,   F23,   F24,   F25,   F26,   F27,   F28,   &
                   F29 )
FTWENTYR2:LINE = ( F21R2, F22R2, F23R2, F24R2, F25R2, F26R2, F27R2, F28R2, &
                   F29R2 )
FTWENTYFT:LINE = ( F21R2, F22R2, F23R2, F24R2, F25R2, F26R2, F27R2, F28FT, &
                   F29R2 )
QUADF32:  LINE = ( DBPMIN, HBPMF32, DBPMOUT, HQUADF, DQOUT )
PACKF32:  LINE = ( DPACKIN, TQFA4, TSF, HDF32, DPACKU2D,TS1,TSQ,TOD39C, &
           DPACKOUT )
PACKF32R2:LINE = ( DPACKIN, TQF32, TSF, HDF32, DPACKU2D,TS1,TSQ,TOD39C, &
           DPACKOUT )
PACKF32FT:LINE = ( DPACKIN, TQFF3, TSF, HDF32, DPACKU2D,TS1,TSQ,TOD39C, &
           DPACKOUT )
F32:      LINE = ( MF32, QUADF32, PACKF32,   4*DIPOLE )
F32R2:    LINE = ( MF32, QUADF32, PACKF32R2, 4*DIPOLE )
F32FT:    LINE = ( MF32, QUADF32, PACKF32FT, 4*DIPOLE )
QUADF33:  LINE = ( DBPMIN, VBPMF33, DBPMOUT, HQUADD, DQOUT )
PACKF33:  LINE = ( DPACKIN, TQDD1,   TSD, VDF33, DPACKU2D4, TOZD, &
           CS5F3AP, TQF33, DPACKOUT4 )
PACKF33R2:LINE = ( DPACKIN, DTQJUMP, TSD, VDF33, DPACKU2D4, TOZD, &
           CS5F3AP, TQF33, DPACKOUT4 )
PACKF33FT:LINE = ( DPACKIN, TQDF4,   TSD, VDF33, DPACKU2D4, TOZD, &
           CS5F3AP, TQF33, DPACKOUT4 )
F33:      LINE = ( MF33, QUADF33, PACKF33,   4*DIPOLE )
F33R2:    LINE = ( MF33, QUADF33, PACKF33R2, 4*DIPOLE )
F33FT:    LINE = ( MF33, QUADF33, PACKF33FT, 4*DIPOLE )
QUADF34:  LINE = ( DBPMIN, HBPMF34, DBPMOUT, HQUADF, DQOUT )
PACKF34:  LINE = ( DPACKIN, TQFA4, TSF, HDF34, DPACKU2D4, CS1F3AP, TOF39C,&
           TQF34, DPACKOUT4 )
PACKF34R2:LINE = ( DPACKIN, TQFF3, TSF, HDF34, DPACKU2D4, CS1F3AP, TOF39C,&
           TQF34, DPACKOUT4 )
F34:      LINE = ( MF34, QUADF34, PACKF34,   4*DIPOLE )
F34R2:    LINE = ( MF34, QUADF34, PACKF34R2, 4*DIPOLE )
QUADF35:  LINE = ( DBPMIN, VBPMF35, DBPMOUT, HQUADD, DQOUT )
PACKF35:  LINE = ( DPIN5LOC, TQDD1, TSD, VDF35, DPOUT5LOC )
PACKF35R2:LINE = ( DPIN5LOC, TQDF4, TSD, VDF35, DPOUT5LOC )
F35:      LINE = ( MF35, QUADF35, PACKF35,   FEEDCAN, 4*DIPOLE )
F35R2:    LINE = ( MF35, QUADF35, PACKF35R2, FEEDCAN, 4*DIPOLE )
QUADF36:  LINE = ( DBPMIN, HBPMF36, DBPMOUT, HQUADF, DQOUT )
PACKF36:  LINE = ( DPACKIN, TQFA4, TSF, HDF36, DPACKU2D, TOZF, TS1, TSQ, &
           DPACKOUT )
PACKF36R2:LINE = ( DPACKIN, TQFF3, TSF, HDF36, DPACKU2D, TOZF, TS1, TSQ, &
           DPACKOUT )
F36:      LINE = ( MF36, QUADF36, PACKF36,   4*DIPOLE )
F36R2:    LINE = ( MF36, QUADF36, PACKF36R2, 4*DIPOLE )
QUADF37:  LINE = ( DBPMIN, VBPMF37, DBPMOUT, HQUADD, DQOUT )
PACKF37:  LINE = ( DPACKIN, TQDD1, TSD, VDF37, DPACKU2D, TOZD, TS4, TQ4, &
           DPACKOUT )
PACKF37R2:LINE = ( DPACKIN, TQDF4, TSD, VDF37, DPACKU2D, TOZD, TS4, TQ4, &
           DPACKOUT )
F37:      LINE = ( MF37, QUADF37, PACKF37,   4*DIPOLE )
F37R2:    LINE = ( MF37, QUADF37, PACKF37R2, 4*DIPOLE )
QUADF38:  LINE = ( DBPMIN, HBPMF38, DBPMOUT, HQUADF, DQOUT )
PACKF38:  LINE = ( DPACKIN, TQFA4, TSF, HDF38, DPACKU2D, CS1F3AM, DPACKOUT )
PACKF38R2:LINE = ( DPACKIN, TQFF3, TSF, HDF38, DPACKU2D, CS1F3AM, DPACKOUT )
F38:      LINE = ( MF38, QUADF38, PACKF38,   4*DIPOLE )
F38R2:    LINE = ( MF38, QUADF38, PACKF38R2, 4*DIPOLE )
QUADF39:  LINE = ( DBPMIN, VBPMF39, DBPMOUT, HQUADD, DQOUT )
PACKF39:  LINE = ( DPIN5LOC, TQDD1, TSD, VDF39, DPOUT5LOC )
PACKF39R2:LINE = ( DPIN5LOC, TQDF4, TSD, VDF39, DPOUT5LOC )
F39:      LINE = ( MF39, QUADF39, PACKF39,   TABGVTAB, 4*DIPOLE )
F39R2:    LINE = ( MF39, QUADF39, PACKF39R2, TABGVTAB, 4*DIPOLE )
FTHIRTY:  LINE = ( F32,   F33,   F34,   F35,   F36,   F37,   F38,   F39 )
FTHIRTYR2:LINE = ( F32R2, F33R2, F34R2, F35R2, F36R2, F37R2, F38R2, F39R2 )
FTHIRTYFT:LINE = ( F32FT, F33FT, F34R2, F35R2, F36R2, F37R2, F38R2, F39R2 )
QUADF42:  LINE = ( DBPMIN, HBPMF42, DBPMOUT, HQUADF, DQOUT )
PACKF42:  LINE = ( DPACKIN, TQFA4, TSF, HDF42, DPACKU2D, TOZF, TSQ, DPACKOUT )
PACKF42R2:LINE = ( DPACKIN, TQFF3, TSF, HDF42, DPACKU2D, TOZF, TSQ, DPACKOUT )
F42:      LINE = ( MF42, QUADF42, PACKF42,   4*DIPOLE )
F42R2:    LINE = ( MF42, QUADF42, PACKF42R2, 4*DIPOLE )
QUADF43:  LINE = ( DBPMIN, VBPMF43, DBPMOUT, HQUADD, DQOUT )
PACKF43:  LINE = ( DPACKIN, TQDD1, TSD, VDF43, DPACKU2D, CS2F4AM, DPACKOUT )
PACKF43R2:LINE = ( DPACKIN, TQDF4, TSD, VDF43, DPACKU2D, CS2F4AM, DPACKOUT )
F43:      LINE = ( MF43, QUADF43, PACKF43,   4*DIPOLE )
F43R2:    LINE = ( MF43, QUADF43, PACKF43R2, 4*DIPOLE )
QUADF44:  LINE = ( DBPMIN, HBPMF44, DBPMOUT, HQUADF, DQOUT )
PACKF44:  LINE = ( DPACKIN, TQFA4, TSF, HDF44, DPACKU2D, DPACKOUT )
PACKF44R2:LINE = ( DPACKIN, TQFF3, TSF, HDF44, DPACKU2D, DPACKOUT )
F44:      LINE = ( MF44, QUADF44, PACKF44,   4*DIPOLE )
F44R2:    LINE = ( MF44, QUADF44, PACKF44R2, 4*DIPOLE )
QUADF45:  LINE = ( DBPMIN, VBPMF45, DBPMOUT, HQUADD, DQOUT )
PACKF45:  LINE = ( DPIN5LOC, TQDD1, TSD, VDF45, DPOUT5LOC )
PACKF45R2:LINE = ( DPIN5LOC, TQDF4, TSD, VDF45, DPOUT5LOC )
F45:      LINE = ( MF45, QUADF45, PACKF45,   FEEDCAN, 4*DIPOLE )
F45R2:    LINE = ( MF45, QUADF45, PACKF45R2, FEEDCAN, 4*DIPOLE )
QUADF46:  LINE = ( DBPMIN, HBPMF46, DBPMOUT, HQUADF, DQOUT )
PACKF46:  LINE = ( DPACKIN, TQFA4, TSF, HDF46, DPACKU2D, TSQ, DPACKOUT )
PACKF46R2:LINE = ( DPACKIN, TQFF3, TSF, HDF46, DPACKU2D, TSQ, DPACKOUT )
F46:      LINE = ( MF46, QUADF46, PACKF46,   4*DIPOLE )
F46R2:    LINE = ( MF46, QUADF46, PACKF46R2, 4*DIPOLE )
QUADF47:  LINE = ( DBPMIN, VBPMF47, DBPMOUT, HQUADD, DQOUT )
PACKF47:  LINE = ( DPACKIN, TQDD1, TSD, VDF47, DPACKU2D, DPACKOUT )
PACKF47R2:LINE = ( DPACKIN, TQDF4, TSD, VDF47, DPACKU2D, DPACKOUT )
F47:      LINE = ( MF47, QUADF47, PACKF47,   4*DIPOLE )
F47R2:    LINE = ( MF47, QUADF47, PACKF47R2, 4*DIPOLE )
QUADF48:  LINE = ( DBPMIN, HBPMF48, DBPMOUT, HQUAD5F, DQOUT )
PACKF48:  LINE = ( DPIN5LOC, DHQUADC, TSX, TQX, HDF48, DHQUADC, DPOUT5LOC )
! mchurch 1/4/99 Added Collimator at F48 for Run II.
!  Since its essentially just a drift, did not make a separate Run II version.
!  The location of the collimator in the straight is only approximate. 
F48COLL1:  LINE = ( DR2COLLEND, MF481UHCL, MF481UVCL, DR2COLL2, F481HCL, &
                    F481VCL, DR2COLL2, MF481DHCL, MF481DVCL, DR2COLLEND )
STRAIGHTF48:  LINE = ( DF48SP1, F48COLL1, DF48SP2 )
STRAIGHTF48FT:LINE = ( DQXR2, A0QXR, DQXR3, A0BUK, D12IN, &
                       A0QXR, DQXR5, MF48TARGET, DQXR6 )
F48:      LINE = ( MF48, QUADF48, PACKF48, COLDBYP1, STRAIGHTF48, &
                    COLDBYP2, 3*DIPOLE )
F48FT:    LINE = ( MF48, QUADF48, PACKF48, COLDBYP1, STRAIGHTF48FT, &
                    COLDBYP2, 3*DIPOLE )
QUADF49:  LINE = ( DBPMIN, HBPMF49, DBPMOUT, HQUAD4D, DQOUT )

! mchurch 1/4/99 Added Target at F49 for Run II.
!  Since its essentially just a drift, did not make a separate Run II version.
!  The location of the target in the straight is only approximate. 
F49COLL1:  LINE = ( DR2TARGLE, F491HCL, F491VCL, MF491HCL, MF491VCL, &
                    DR2TARGSE )
STRAIGHTF49:  LINE = ( DF49SP1, F49COLL1, DF49SP2 )
PACKF49:  LINE = ( DBPMIN1, VBPMF49, DBPMOUT1, DHQUADC, TSQA0, HDF49, VDF49, &
           DHQUADC, DPACKOUT1 )
F49:      LINE = ( MF49, QUADF49, STRAIGHTF49, PACKF49 )
FFORTY:   LINE = ( F42,   F43,   F44,   F45,   F46,   F47,   F48,   F49 )
FFORTYR2: LINE = ( F42R2, F43R2, F44R2, F45R2, F46R2, F47R2, F48,   F49 )
FFORTYFT: LINE = ( F42R2, F43R2, F44R2, F45R2, F46R2, F47R2, F48FT, F49 )
QUADA0U:  LINE = ( DQUAD1END, HQUAD1F, DQUAD1END )

!  mchurch 1/4/99 added Abort kickers, Abort blocks, Collimator at A0
A0PKICK:  LINE = ( DA0KICK, D12IN, DA0KICK, D18IN, DA0KICK, D18IN, &
                   DA0KICK, D12IN, DA0KICK )
A0COLL1:  LINE = ( DR2COLLEND, MA01UHCL, MA01UVCL, DR2COLL2, A01HCL, A01VCL, &
                   DR2COLL2, MA01DHCL, MA01DVCL, DR2COLLEND )
LONGSTRA0U: LINE=( DA0SP1, A0PKICK, DA0SP4, A0COLL1, DA0SP5, HBPMA0U, &
                   DA0SP6, VBPMA0U, DA0SP7, DA0PAB, DA0SP8A )
! 
! Next group is for fixed target
EXTLAMB:  LINE = (DEXTLAMBEND, DHALFLAMB, DHALFLAMB, DEXTLAMBEND)
A0LAMBS:  LINE = (MEXTLAMBU, EXTLAMB, DLAMBSEP, EXTLAMB, &
                   DLAMBSEP, EXTLAMB, DLAMB3,   EXTLAMB, &
                   DLAMBSEP, EXTLAMB, MEXTLAMBD )

A0UP:     LINE = ( MA0U, QUADA0U, LONGSTRA0U )
A0UPFT:   LINE = ( MA0U, QUADA0U, DLAMB1, A0LAMBS )
SEXTANTF:  LINE = ( F0DOWN,   FTEN,   FTWENTY,   FTHIRTY,   FFORTY,   A0UP )
SEXTANTFR2:LINE = ( F0DOWNR2, FTENR2, FTWENTYR2, FTHIRTYR2, FFORTYR2, A0UP )
SEXTANTFFT:LINE = ( F0DOWNR2, FTENFT, FTWENTYFT, FTHIRTYFT, FFORTYFT, A0UPFT )

A0PBKICK: LINE = ( DA0KICK, D12IN, DA0KICK, D18IN, DA0KICK, D18IN, &
                   DA0KICK, D12IN, DA0KICK )

LONGSTRA0D:LINE= ( DA0SP8B, DA0PBAB, DA0SP9, VBPMA0D, DA0SP10, HBPMA0D, &
                   DA0SP11, A0PBKICK, DA0SP12)
!
! I've deliberately left MA0 out of A0DOWNFT, because it would be in a 
!  different location than the MA0 in collider mode. 
QUADA0D:  LINE = ( DQUAD1END, HQUAD1D, DQUAD1END )
A0DOWN:   LINE = ( MA0, LONGSTRA0D, QUADA0D, COLDBYP1, DSTRAIGHT0, COLDBYP2 )
A0DOWNFT: LINE = (       DLONG1A0,  QUADA0D, COLDBYP1, DSTRAIGHT0, COLDBYP2 )
QUADA11:  LINE = ( DBPMIN, HBPMA11, DBPMOUT, HQUAD4F, DQOUT )
PACKA11:  LINE = ( DBPMIN1, VBPMA11, DBPMOUT1, TSQA0, DHQUADC, VDA11, HDA11, &
           DHQUADC, DPACKOUT1 )
A11:      LINE = ( MA11, QUADA11, PACKA11, 4*DIPOLE )
QUADA12:  LINE = ( DBPMIN, VBPMA12, DBPMOUT, HQUAD5D, DQOUT )
PACKA12:  LINE = ( DPACKIN, DHQUADC, TQX, TSX, VDA12, DHQUADC, DPACKU2D, TX3, &
           DPACKOUT )
A12:      LINE = ( MA12, QUADA12, PACKA12, 4*DIPOLE )
QUADA13:  LINE = ( DBPMIN, HBPMA13, DBPMOUT, HQUADF, DQOUT )
PACKA13:  LINE = ( DPACKIN, TQFA4, TSF, HDA13, DPACKU2D, TSQ, DPACKOUT )
A13:      LINE = ( MA13, QUADA13, PACKA13, 4*DIPOLE )
QUADA14:  LINE = ( DBPMIN, VBPMA14, DBPMOUT, HQUADD, DQOUT )
PACKA14:  LINE = ( DPACKIN, TQDD1, TSD, VDA14, DPACKU2D, CS2A1AM, DPACKOUT )
A14:      LINE = ( MA14, QUADA14, PACKA14, 4*DIPOLE )
QUADA15:  LINE = ( DBPMIN, HBPMA15, DBPMOUT, HQUADF, DQOUT )
PACKA15:  LINE = ( DPIN5LOC, TQFA4, TSF, HDA15, DPOUT5LOC )
A15:      LINE = ( MA15, QUADA15, PACKA15, FEEDCAN, 4*DIPOLE )
QUADA16:  LINE = ( DBPMIN, VBPMA16, DBPMOUT, HQUADD, DQOUT )
PACKA16:  LINE = ( DPACKIN, TQDD1, TSD, VDA16, DPACKU2D, TX3, DPACKOUT )
A16:      LINE = ( MA16, QUADA16, PACKA16, 4*DIPOLE )
QUADA17:  LINE = ( DBPMIN, HBPMA17, DBPMOUT, HQUADF, DQOUT )
PACKA17:  LINE = ( DPACKIN, TQFA4, TSF, HDA17, DPACKU2D, CS3A2AP, &
                   TSQ, DPACKOUT)
ESEPA17:  LINE = ( DSEPEND1, ESEP, DSEPB, ESEP, DSEPB, ESEP, DSEPB, A17VESEP,&
           DSEPEND1 )
A17:      LINE = ( MA17, QUADA17, PACKA17, COLDBYP1, ESEPA17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
QUADA18:  LINE = ( DBPMIN, VBPMA18, DBPMOUT, HQUADD, DQOUT )
PACKA18:  LINE = ( DPACKIN, TQDD1, TSD, VDA18, DPACKU2D, CS5A2AP, DPACKOUT )
A18:      LINE = ( MA18, QUADA18, PACKA18, 4*DIPOLE )
QUADA19:  LINE = ( DBPMIN, HBPMA19, DBPMOUT, HQUADF, DQOUT )
PACKA19:  LINE = ( DPACKIN, TQFA4, TSF, HDA19, DPACKU2D, TR1, DPACKOUT )
A19:      LINE = ( MA19, QUADA19, PACKA19, 4*DIPOLE )
ATEN:     LINE = ( A11, A12, A13, A14, A15, A16, A17, A18, A19 )
QUADA21:  LINE = ( DBPMIN, VBPMA21, DBPMOUT, HQUADD, DQOUT )
PACKA21:  LINE = ( DPIN5LOC, TQDD1, TSD, VDA21, DPOUT5LOC )
A21:      LINE = ( MA21, QUADA21, PACKA21, TABGVTAB, 4*DIPOLE )
QUADA22:  LINE = ( DBPMIN, HBPMA22, DBPMOUT, HQUADF, DQOUT )
PACKA22:  LINE = ( DPACKIN, TQFA4, TSF, HDA22, DPACKU2D, TX2, TSQ, DPACKOUT )
A22:      LINE = ( MA22, QUADA22, PACKA22, 4*DIPOLE )
QUADA23:  LINE = ( DBPMIN, VBPMA23, DBPMOUT, HQUADD, DQOUT )
PACKA23:  LINE = ( DPACKIN, TQDD1, TSD, VDA23, DPACKU2D, TOZD, DPACKOUT )
A23:      LINE = ( MA23, QUADA23, PACKA23, 4*DIPOLE )
QUADA24:  LINE = ( DBPMIN, HBPMA24, DBPMOUT, HQUADF, DQOUT )
PACKA24:  LINE = ( DPACKIN, TQFA4, TSF, HDA24, DPACKU2D, CS3A2AM, &
                   TR2, DPACKOUT)
A24:      LINE = ( MA24, QUADA24, PACKA24, 4*DIPOLE )
QUADA25:  LINE = ( DBPMIN, VBPMA25, DBPMOUT, HQUADD, DQOUT )
PACKA25:  LINE = ( DPIN5LOC, TQDD1, TSD, VDA25, DPOUT5LOC )
A25:      LINE = ( MA25, QUADA25, PACKA25, FEEDCAN, 4*DIPOLE )
QUADA26:  LINE = ( DBPMIN, HBPMA26, DBPMOUT, HQUADF, DQOUT )
PACKA26:  LINE = ( DPACKIN, TQFA4, TSF, HDA26, DPACKU2D, TX2, TSQ, DPACKOUT )
A26:      LINE = ( MA26, QUADA26, PACKA26, 4*DIPOLE )
QUADA27:  LINE = ( DBPMIN, VBPMA27, DBPMOUT, HQUADD, DQOUT )
PACKA27:  LINE = ( DPACKIN, TQDD1, TSD, VDA27, DPACKU2D, TOZD, TX4, DPACKOUT )
A27:      LINE = ( MA27, QUADA27, PACKA27, 4*DIPOLE )
QUADA28:  LINE = ( DBPMIN, HBPMA28, DBPMOUT, HQUADF, DQOUT )
PACKA28:  LINE = ( DPACKIN, TQFA4, TSF, HDA28, DPACKU2D, TX2, TR1, DPACKOUT )
A28:      LINE = ( MA28, QUADA28, PACKA28, 4*DIPOLE )
QUADA29:  LINE = ( DBPMIN, VBPMA29, DBPMOUT, HQUADD, DQOUT )
PACKA29:  LINE = ( DPIN5LOC, TQDD1, TSD, VDA29, DPOUT5LOC )
A29:      LINE = ( MA29, QUADA29, PACKA29, TABGVTAB, 4*DIPOLE )
ATWENTY:  LINE = ( A21, A22, A23, A24, A25, A26, A27, A28, A29 )
QUADA32:  LINE = ( DBPMIN, HBPMA32, DBPMOUT, HQUADF, DQOUT )
PACKA32:  LINE = ( DPACKIN, TQFA4, TSF, HDA32, DPACKU2D, TX1, TSQ, DPACKOUT )
A32:      LINE = ( MA32, QUADA32, PACKA32, 4*DIPOLE )
QUADA33:  LINE = ( DBPMIN, VBPMA33, DBPMOUT, HQUADD, DQOUT )
PACKA33:  LINE = ( DPACKIN, TQDD1, TSD, VDA33, DPACKU2D, TOZD, CS2A3AP, &
           DPACKOUT )
A33:      LINE = ( MA33, QUADA33, PACKA33, 4*DIPOLE )
QUADA34:  LINE = ( DBPMIN, HBPMA34, DBPMOUT, HQUADF, DQOUT )
PACKA34:  LINE = ( DPACKIN, TQFA4, TSF, HDA34, DPACKU2D, TX1, TR2, DPACKOUT )
A34:      LINE = ( MA34, QUADA34, PACKA34, 4*DIPOLE )
QUADA35:  LINE = ( DBPMIN, VBPMA35, DBPMOUT, HQUADD, DQOUT )
PACKA35:  LINE = ( DPIN5LOC, TQDD1, TSD, VDA35, DPOUT5LOC )
A35:      LINE = ( MA35, QUADA35, PACKA35, FEEDCAN, 4*DIPOLE )
QUADA36:  LINE = ( DBPMIN, HBPMA36, DBPMOUT, HQUADF, DQOUT )
PACKA36:  LINE = ( DPACKIN, TQFA4, TSF, HDA36, DPACKU2D, TOZF, TSQ, &
           DPACKOUT )
A36:      LINE = ( MA36, QUADA36, PACKA36, 4*DIPOLE )
QUADA37:  LINE = ( DBPMIN, VBPMA37, DBPMOUT, HQUADD, DQOUT )
PACKA37:  LINE = ( DPACKIN, TQDD1, TSD, VDA37, DPACKU2D, TOZD, CS5A3AM, &
           DPACKOUT )
A37:       LINE = ( MA37, QUADA37, PACKA37, 4*DIPOLE )
QUADA38:  LINE = ( DBPMIN, HBPMA38, DBPMOUT, HQUADF, DQOUT )
PACKA38:  LINE = ( DPACKIN, TQFA4, TSF, HDA38, DPACKU2D, TX1, DPACKOUT )
A38:      LINE = ( MA38, QUADA38, PACKA38, 4*DIPOLE )
QUADA39:  LINE = ( DBPMIN, VBPMA39, DBPMOUT, HQUADD, DQOUT )
PACKA39:  LINE = ( DPIN5LOC, TQDD1, TSD, VDA39, DPOUT5LOC )
A39:      LINE = ( MA39, QUADA39, PACKA39, TABGVTAB, 4*DIPOLE )
ATHIRTY:  LINE = ( A32, A33, A34, A35, A36, A37, A38, A39 )
QUADA42:  LINE = ( DBPMIN, HBPMA42, DBPMOUT, HQUADF, DQOUT )
PACKA42:  LINE = ( DPACKIN, TQFA4, TSF, HDA42, DPACKU2D, TOZF, TSQ, DPACKOUT )
PACKA42R2:LINE = ( DPACKIN, TQA42, TSF, HDA42, DPACKU2D, TOZF, TSQ, DPACKOUT )
A42:      LINE = ( MA42, QUADA42, PACKA42,   4*DIPOLE )
A42R2:    LINE = ( MA42, QUADA42, PACKA42R2, 4*DIPOLE )
QUADA43:  LINE = ( DBPMIN, VBPMA43, DBPMOUT, HQUADD, DQOUT )
PACKA43:  LINE = ( DPACKIN2, CAQ0, DPACKU2D2,    TSD, VDA43, DPACKOUT2 )
PACKA43FT:LINE = ( DPACKIN2, CAQ0, DTQIN, TQDD1, TSD, VDA43, DTQOUT )
A43:      LINE = ( MA43, QUADA43, PACKA43,   4*DIPOLE )
A43FT:    LINE = ( MA43, QUADA43, PACKA43FT, 4*DIPOLE )
QUADA44:  LINE = ( DBPMIN, HBPMA44, DBPMOUT, HQUADF, DQOUT )
PACKA44:  LINE = ( DPACKIN2, CAQ9, DPACKU2D2,    TSF, HDA44, DPACKOUT2 )
PACKA44FT:LINE = ( DPACKIN2, CAQ9, DTQIN, TQFA4, TSF, HDA44, DTQOUT )
A44:      LINE = ( MA44, QUADA44, PACKA44,   4*DIPOLE )
A44FT:    LINE = ( MA44, QUADA44, PACKA44FT, 4*DIPOLE )
QUADA45:  LINE = ( DBPMIN, VBPMA45, DBPMOUT, HQUADD, DQOUT )
PACKA45:  LINE = ( DPIN5LOC, TQA45, TSD, VDA45, DPOUT5LOC )
PACKA45FT:LINE = ( DPIN5LOC, TQDD1, TSD, VDA45, DPOUT5LOC )
A45:      LINE = ( MA45, QUADA45, PACKA45,   FEEDCAN, 4*DIPOLE )
A45FT:    LINE = ( MA45, QUADA45, PACKA45FT, FEEDCAN, 4*DIPOLE )
QUADA46:  LINE = ( DBPMIN, HBPMA46, DBPMOUT, HQUADF, DQOUT )
PACKA46:  LINE = ( DPACKIN2, CAQ7, DPACKU2D2,    TSF,     HDA46, DPACKOUT2 )
PACKA46R2:LINE = ( DPACKIN2, CAQ7, DPACKU2D2,    CS6A4AP, HDA46, DPACKOUT2 )
PACKA46FT:LINE = ( DPACKIN2, CAQ7, DTQIN, TQFA4, TSF,     HDA46, DTQOUT )
A46:      LINE = ( MA46, QUADA46, PACKA46,   4*DIPOLE )
A46FT:    LINE = ( MA46, QUADA46, PACKA46FT, 4*DIPOLE )
A46R2:    LINE = ( MA46, QUADA46, PACKA46R2, 4*DIPOLE )
QUADA47:  LINE = ( DBPMIN, VBPMA47, DBPMOUT, HQUADD, DQOUT )
PACKA47:  LINE = ( DPACKIN3, CB0Q6D, DPACKU2D3, CB0QT6D, TSD, VDA47, CB0QT6D,&
           DPACKOUT3 )
PACKA47FT:LINE = ( DPACKIN3, CB0Q6D, DPACKU2D3, TQDD1,   TSD, VDA47, &
           DPACKOUT3 )
A47:      LINE = ( MA47, QUADA47, PACKA47,   4*DIPOLE )
A47FT:    LINE = ( MA47, QUADA47, PACKA47FT, 4*DIPOLE )
QUADA48:  LINE = ( DLB6, CB0Q5D, DLB5 )
! The first spool, PACKA48A, has the power leads for Q5. 
! The second spool, PACKA48B, is the only one with a quad or a sextupole, 
!    however, neither of these is used. The horz steering is used, 
!    but I think this spool could be removed. 
! The third spool, PACKA48C, has power leads for the Main Bus that 
!    are jumpered together. This is the fold in the Tevatron Bus. 
!    It contains a horz steering, a vert steering, and a skew quad, 
!    none of which are presently used. 
PACKA48A: LINE = ( DLB4, VDA48, HDA48C, DLB3, HBPMA48, DLB2, VBPMA48, DLB1 )
PACKA48B: LINE = ( DPIN5LOC, DHQUADC, HDA48, TSX, TQX, DHQUADC, DPOUT5LOC )
STRAIGHTA48:  LINE = ( DSTRAIGHT4 )
PACKA48C: LINE = ( DBPMIN1, DBPMOUT1, DHQUADC, TR3, DHQUADC, DPACKOUT1 )
A48:      LINE = ( MA48, QUADA48, PACKA48A, PACKA48B, COLDBYP2, &
           STRAIGHTA48, COLDBYP1, PACKA48C, 3*DIPOLE )
QUADA49:  LINE = ( DLB6, CB0Q1D, DLB5 )
PACKA49:  LINE = ( DLB4, HDA49, VDA49, TSQA4, DLB3, HBPMA49, DLB2, VBPMA49, &
           DLB1 )
A49:      LINE = ( MA49, QUADA49, PACKA49 )
AFORTY:   LINE = ( A42,   A43,   A44,   A45,   A46,   A47,   A48, A49 )
AFORTYR2: LINE = ( A42R2, A43,   A44,   A45,   A46R2, A47,   A48, A49 )
AFORTYFT: LINE = ( A42,   A43FT, A44FT, A45FT, A46FT, A47FT, A48, A49 )
ESEPB0U:  LINE = ( DSEPEND, A49HESEP, DSEPB, A49VESEP, DSEPB, A49VESEP, &
           DSEPEND )
TRIPLETB0U: LINE = ( DTRIPOUT, CB0Q2F, DTRIPB, CB0Q3D, DTRIPB, &
           CB0Q4F, DTRIPIN, HBPMB0U, DV2H, VBPMB0U )
B0UP:     LINE = ( MB0U, COLDBYP2, ESEPB0U, COLDBYP1, FEEDCAN, &
           TRIPLETB0U, DB0C, DB0B, DB0A )
SEXTANTA:  LINE = ( A0DOWN,   ATEN, ATWENTY, ATHIRTY, AFORTY,   B0UP )
SEXTANTAR2:LINE = ( A0DOWN,   ATEN, ATWENTY, ATHIRTY, AFORTYR2, B0UP )
SEXTANTAFT:LINE = ( A0DOWNFT, ATEN, ATWENTY, ATHIRTY, AFORTYFT, B0UP )
TRIPLETB0D: LINE = ( VBPMB0D, DV2H, HBPMB0D, DTRIPIN, CB0Q4D, DTRIPB, &
           CB0Q3F, DTRIPB, CB0Q2D, DTRIPOUT )
ESEPB0D:  LINE = ( DSEPEND, B11HESEP, DSEPB, B11HESEP, DSEPB, B11VESEP, &
           DSEPEND )
B0DOWN:   LINE = ( MB0, DB0A, DB0B, DB0C, TRIPLETB0D, FEEDCAN, COLDBYP1, &
           ESEPB0D, COLDBYP2 )
PACKB11:  LINE = ( DLB1, VBPMB11, DLB2, HBPMB11, DLB3, HDB11, VDB11, TSQB1, &
           DLB4 )
QUADB11:  LINE = ( DLB5, CB0Q1F, DLB6 )
! SPOOLB11 actually does NOT have any magnet windings in it. 
!    It has power leads for the Main Bus that are jumpered together. 
!    This is the fold in the Tevatron Bus. 
SPOOLB11: LINE = ( DLB7 )
B11:      LINE = ( MB11, PACKB11, QUADB11, SPOOLB11, 4*DIPOLE )
QUADB12:  LINE = ( DLB6, CB0Q5F, DLB5 )
PACKB12:  LINE = ( DLB4, VDB12, HDB12, DLB3, HBPMB12, DLB2, VBPMB12, DLB1 )
B12:      LINE = ( MB12, QUADB12, PACKB12, 4*DIPOLE )
QUADB13:  LINE = ( DBPMIN, HBPMB13, DBPMOUT, HQUADF, DQOUT )
PACKB13:  LINE = ( DPACKIN3, CB0Q6F, DPACKU2D3, CB0QT6F, TSF, HDB13, CB0QT6F, &
           DPACKOUT3 )
PACKB13FT:LINE = ( DPACKIN3, CB0Q6F, DPACKU2D3, TQFA4,   TSF, HDB13, &
           DPACKOUT3 )
B13:      LINE = ( MB13, QUADB13, PACKB13,   4*DIPOLE )
B13FT:    LINE = ( MB13, QUADB13, PACKB13FT, 4*DIPOLE )
QUADB14:  LINE = ( DBPMIN, VBPMB14, DBPMOUT, HQUADD, DQOUT )
PACKB14:  LINE = ( DPACKIN2, CBQ7, DPACKU2D2,    TSD,     VDB14, DPACKOUT2 )
PACKB14R2:LINE = ( DPACKIN2, CBQ7, DPACKU2D2,    CS7B1AP, VDB14, DPACKOUT2 )
PACKB14FT:LINE = ( DPACKIN2, CBQ7, DTQIN, TQDD1, TSD,     VDB14, DTQOUT )
B14:      LINE = ( MB14, QUADB14, PACKB14,   4*DIPOLE )
B14FT:    LINE = ( MB14, QUADB14, PACKB14FT, 4*DIPOLE )
B14R2:    LINE = ( MB14, QUADB14, PACKB14R2, 4*DIPOLE )
QUADB15:  LINE = ( DBPMIN, HBPMB15, DBPMOUT, HQUADF, DQOUT )
PACKB15:  LINE = ( DPIN5LOC, TQB15, TSF, HDB15, DPOUT5LOC )
PACKB15FT:LINE = ( DPIN5LOC, TQFA4, TSF, HDB15, DPOUT5LOC )
B15:      LINE = ( MB15, QUADB15, PACKB15,   FEEDCAN, 4*DIPOLE )
B15FT:    LINE = ( MB15, QUADB15, PACKB15FT, FEEDCAN, 4*DIPOLE )
QUADB16:  LINE = ( DBPMIN, VBPMB16, DBPMOUT, HQUADD, DQOUT )
PACKB16:  LINE = ( DPACKIN2, CBQ9, DPACKU2D2,    TSD, VDB16, DPACKOUT2 )
PACKB16FT:LINE = ( DPACKIN2, CBQ9, DTQIN, TQDD1, TSD, VDB16, DTQOUT )
B16:      LINE = ( MB16, QUADB16, PACKB16,   4*DIPOLE )
B16FT:    LINE = ( MB16, QUADB16, PACKB16FT, 4*DIPOLE )
QUADB17:  LINE = ( DBPMIN, HBPMB17, DBPMOUT, HQUADF, DQOUT )
PACKB17:  LINE = ( DPACKIN2, CBQ0, DPACKU2D2,    TSF, HDB17, DPACKOUT2 )
PACKB17FT:LINE = ( DPACKIN2, CBQ0, DTQIN, TQFA4, TSF, HDB17, DTQOUT )
ESEPB17:  LINE = ( DSEPEND1, B17HESEP, DSEPB, B17HESEP, DSEPB, B17HESEP, &
           DSEPB, B17HESEP, DSEPEND1 )
B17:      LINE = ( MB17, QUADB17, PACKB17,   COLDBYP1, ESEPB17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
B17FT:    LINE = ( MB17, QUADB17, PACKB17FT, COLDBYP1, ESEPB17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
QUADB18:  LINE = ( DBPMIN, VBPMB18, DBPMOUT, HQUADD, DQOUT )
PACKB18:  LINE = ( DPACKIN, TQDD1, TSD, VDB18, DPACKU2D, DPACKOUT )
B18:      LINE = ( MB18, QUADB18, PACKB18, 4*DIPOLE )
QUADB19:  LINE = ( DBPMIN, HBPMB19, DBPMOUT, HQUADF, DQOUT )
PACKB19:  LINE = ( DPACKIN, TQFA4, TSF, HDB19, DPACKU2D, CS1B1AM, TQF39S, &
           TOD39S, DPACKOUT )
B19:      LINE = ( MB19, QUADB19, PACKB19, 4*DIPOLE )
BTEN:     LINE = ( B11, B12, B13,   B14,   B15,   B16,   B17,   B18, B19 )
BTENFT:   LINE = ( B11, B12, B13FT, B14FT, B15FT, B16FT, B17FT, B18, B19 )
BTENR2:   LINE = ( B11, B12, B13,   B14R2, B15,   B16,   B17,   B18, B19 )
QUADB21:  LINE = ( DBPMIN, VBPMB21, DBPMOUT, HQUADD, DQOUT )
PACKB21:  LINE = ( DPIN5LOC, TQDD1, TSD, VDB21, DPOUT5LOC )
B21:      LINE = ( MB21, QUADB21, PACKB21, TABGVTAB, 4*DIPOLE )
QUADB22:  LINE = ( DBPMIN, HBPMB22, DBPMOUT, HQUADF, DQOUT )
PACKB22:  LINE = ( DPACKIN, TQFA4, TSF, HDB22, DPACKU2D, TSQ, TOF39C, DPACKOUT)
B22:      LINE = ( MB22, QUADB22, PACKB22, 4*DIPOLE )
QUADB23:  LINE = ( DBPMIN, VBPMB23, DBPMOUT, HQUADD, DQOUT )
PACKB23:  LINE = ( DPACKIN, TQDD1, TSD, VDB23, DPACKU2D, TOZD, TQ2, DPACKOUT )
B23:      LINE = ( MB23, QUADB23, PACKB23, 4*DIPOLE )
QUADB24:  LINE = ( DBPMIN, HBPMB24, DBPMOUT, HQUADF, DQOUT )
PACKB24:  LINE = ( DPACKIN, TQFA4, TSF, HDB24, DPACKU2D, TQF39C, TOD39C, &
           DPACKOUT )
B24:      LINE = ( MB24, QUADB24, PACKB24, 4*DIPOLE )
QUADB25:  LINE = ( DBPMIN, VBPMB25, DBPMOUT, HQUADD, DQOUT )
PACKB25:  LINE = ( DPIN5LOC, TQDD1, TSD, VDB25, DPOUT5LOC )
B25:      LINE = ( MB25, QUADB25, PACKB25, FEEDCAN, 4*DIPOLE )
QUADB26:  LINE = ( DBPMIN, HBPMB26, DBPMOUT, HQUADF, DQOUT )
PACKB26:  LINE = ( DPACKIN, TQFA4, TSF, HDB26, DPACKU2D, TOD39S, TSQ, DPACKOUT)
B26:      LINE = ( MB26, QUADB26, PACKB26, 4*DIPOLE )
QUADB27:  LINE = ( DBPMIN, VBPMB27, DBPMOUT, HQUADD, DQOUT )
PACKB27:  LINE = ( DPACKIN, TQDD1, TSD, VDB27, DPACKU2D, TOZD, TQ4, DPACKOUT )
B27:      LINE = ( MB27, QUADB27, PACKB27, 4*DIPOLE )
QUADB28:  LINE = ( DBPMIN, HBPMB28, DBPMOUT, HQUADF, DQOUT )
PACKB28:  LINE = ( DPACKIN, TQFA4, TSF, HDB28, DPACKU2D, TOF39S, TQD39S, &
           DPACKOUT )
B28:      LINE = ( MB28, QUADB28, PACKB28, 4*DIPOLE )
QUADB29:  LINE = ( DBPMIN, VBPMB29, DBPMOUT, HQUADD, DQOUT )
PACKB29:  LINE = ( DPIN5LOC, TQDD1, TSD, VDB29, DPOUT5LOC )
B29:      LINE = ( MB29, QUADB29, PACKB29, TABGVTAB, 4*DIPOLE )
BTWENTY:  LINE = ( B21, B22, B23, B24, B25, B26, B27, B28, B29 )
QUADB32:  LINE = ( DBPMIN, HBPMB32, DBPMOUT, HQUADF, DQOUT )
PACKB32:  LINE = ( DPACKIN, TQFA4, TSF, HDB32, DPACKU2D, TSQ, TOD39C, DPACKOUT)
B32:      LINE = ( MB32, QUADB32, PACKB32, 4*DIPOLE )
QUADB33:  LINE = ( DBPMIN, VBPMB33, DBPMOUT, HQUADD, DQOUT )
PACKB33:  LINE = ( DPACKIN, TQDD1, TSD, VDB33, DPACKU2D, TOZD, TQ2, DPACKOUT )
B33:      LINE = ( MB33, QUADB33, PACKB33, 4*DIPOLE )
QUADB34:  LINE = ( DBPMIN, HBPMB34, DBPMOUT, HQUADF, DQOUT )
PACKB34:  LINE = ( DPACKIN, TQFA4, TSF, HDB34, DPACKU2D, TQD39C, TOF39C, &
           DPACKOUT )
B34:      LINE = ( MB34, QUADB34, PACKB34, 4*DIPOLE )
QUADB35:  LINE = ( DBPMIN, VBPMB35, DBPMOUT, HQUADD, DQOUT )
PACKB35:  LINE = ( DPIN5LOC, TQDD1, TSD, VDB35, DPOUT5LOC )
B35:      LINE = ( MB35, QUADB35, PACKB35, FEEDCAN, 4*DIPOLE )
QUADB36:  LINE = ( DBPMIN, HBPMB36, DBPMOUT, HQUADF, DQOUT )
PACKB36:  LINE = ( DPACKIN, TQFA4, TSF, HDB36, DPACKU2D, TOZF, TSQ, DPACKOUT )
B36:      LINE = ( MB36, QUADB36, PACKB36, 4*DIPOLE )
QUADB37:  LINE = ( DBPMIN, VBPMB37, DBPMOUT, HQUADD, DQOUT )
PACKB37:  LINE = ( DPACKIN, TQDD1, TSD, VDB37, DPACKU2D, TOZD, TQ4, DPACKOUT )
B37:      LINE = ( MB37, QUADB37, PACKB37, 4*DIPOLE )
QUADB38:  LINE = ( DBPMIN, HBPMB38, DBPMOUT, HQUADF, DQOUT )
PACKB38:  LINE = ( DPACKIN, TQFA4, TSF, HDB38, DPACKU2D, CS1B3AP, DPACKOUT )
B38:      LINE = ( MB38, QUADB38, PACKB38, 4*DIPOLE )
QUADB39:  LINE = ( DBPMIN, VBPMB39, DBPMOUT, HQUADD, DQOUT )
PACKB39:  LINE = ( DPIN5LOC, TQDD1, TSD, VDB39, DPOUT5LOC )
B39:      LINE = ( MB39, QUADB39, PACKB39, TABGVTAB, 4*DIPOLE )
BTHIRTY:  LINE = ( B32, B33, B34, B35, B36, B37, B38, B39 )
QUADB42:  LINE = ( DBPMIN, HBPMB42, DBPMOUT, HQUADF, DQOUT )
PACKB42:  LINE = ( DPACKIN, TQFA4, TSF, HDB42, DPACKU2D, TOZF, TSQ, DPACKOUT )
B42:      LINE = ( MB42, QUADB42, PACKB42, 4*DIPOLE )
QUADB43:  LINE = ( DBPMIN, VBPMB43, DBPMOUT, HQUADD, DQOUT )
PACKB43:  LINE = ( DPACKIN, TQDD1, TSD, VDB43, DPACKU2D, CS2B4AM, DPACKOUT )
B43:      LINE = ( MB43, QUADB43, PACKB43, 4*DIPOLE )
QUADB44:  LINE = ( DBPMIN, HBPMB44, DBPMOUT, HQUADF, DQOUT )
PACKB44:  LINE = ( DPACKIN, TQFA4, TSF, HDB44, DPACKU2D, DPACKOUT )
B44:      LINE = ( MB44, QUADB44, PACKB44, 4*DIPOLE )
QUADB45:  LINE = ( DBPMIN, VBPMB45, DBPMOUT, HQUADD, DQOUT )
PACKB45:  LINE = ( DPIN5LOC, TQDD1, TSD, VDB45, DPOUT5LOC )
B45:      LINE = ( MB45, QUADB45, PACKB45, FEEDCAN, 4*DIPOLE )
QUADB46:  LINE = ( DBPMIN, HBPMB46, DBPMOUT, HQUADF, DQOUT )
PACKB46:  LINE = ( DPACKIN, TQFA4, TSF, HDB46, DPACKU2D, TSQ, DPACKOUT )
B46:      LINE = ( MB46, QUADB46, PACKB46, 4*DIPOLE )
QUADB47:  LINE = ( DBPMIN, VBPMB47, DBPMOUT, HQUADD, DQOUT )
PACKB47:  LINE = ( DPACKIN, TQDD1, TSD, VDB47, DPACKU2D, CS2B4AP, DPACKOUT )
B47:      LINE = ( MB47, QUADB47, PACKB47, 4*DIPOLE )
QUADB48:  LINE = ( DBPMIN, HBPMB48, DBPMOUT, HQUAD3F, DQOUT )
PACKB48:  LINE = ( DPIN5LOC, DHQUADC, TSX, TQX, HDB48, DHQUADC, DPOUT5LOC )
! Put in MChurch's modified B48 straight with the abort kickers
!    ppb   1/29/99
B48KICK:  LINE = ( DB48ABTK, DB48ABTKB, DB48ABTK, DB48ABTKB, DB48ABTK )
STRAIGHTB48:  LINE = ( DB48SP1, B48KICK, DB48SP2 )
HDIPOLE:  LINE = ( DBENDEND, BENDQ, HBEND, BENDQ, DBENDEND )
B48:      LINE = ( MB48, QUADB48, PACKB48, COLDBYP1, STRAIGHTB48, &
                    COLDBYP2, HDIPOLE, 2*DIPOLE )
QUADB49:  LINE = ( DBPMIN, HBPMB49, DBPMOUT, HQUAD2F, DQOUT1 )
STRAIGHTB49:  LINE = ( DSTRAIGHT5 )
PACKB49:  LINE = ( DBPMIN1, VBPMB49, DBPMOUT1, DHQUADC, TR3, VDB49, HDB49, &
           DHQUADC, DPACKOUT1 )
B49:      LINE = ( MB49, QUADB49, COLDBYP2, STRAIGHTB49, COLDBYP1, PACKB49 )
BFORTY:   LINE = ( B42, B43, B44, B45, B46, B47, B48, B49 )
QUADC0U:  LINE = ( DQUAD1END, HQUAD1D, DQUAD1END )
LAMB:     LINE = ( DLAMBEND, LAMBBEND, DLAMBEND )
LONGSTRC0U: LINE = ( DC0U1, LAMB, LAMB, LAMB, DC0U2 )
C0UP:     LINE = ( MC0U, QUADC0U, LONGSTRC0U )
SEXTANTB:  LINE = ( B0DOWN, BTEN,   BTWENTY, BTHIRTY, BFORTY, C0UP )
SEXTANTBR2:LINE = ( B0DOWN, BTENR2, BTWENTY, BTHIRTY, BFORTY, C0UP )
SEXTANTBFT:LINE = ( B0DOWN, BTENFT, BTWENTY, BTHIRTY, BFORTY, C0UP )
CMAG:     LINE = ( DCMAGEND, CMAGBEND, DCMAGEND )
LONGSTRC0D: LINE = ( DC0D1, CMAG, CMAG, DLONG3 )
COLLIMC0: LINE = ( DCOLLIM, DCOLLOUT )
QUADC0D:  LINE = ( DQUAD1END, HQUAD1F, DQUAD1END )
STRAIGHTC0D:  LINE = ( DSTRAIGHT1 )
C0DOWN:   LINE = ( MC0, LONGSTRC0D, COLLIMC0, QUADC0D, COLDBYP1, &
           STRAIGHTC0D, COLDBYP2 )
QUADC11:  LINE = ( DBPMIN, HBPMC11, DBPMOUT, HQUAD2D, DQOUT1 )
PACKC11:  LINE = ( DBPMIN1, VBPMC11, DBPMOUT1, DHQUADC, TR3, HDC11, VDC11, &
           DHQUADC, DPACKOUT1 )
SLPDIPOLE:   LINE = ( DBENDEND, BENDQ, MPSYNC, BEND,   BENDQ, DBENDEND )
SLPBHDIPOLE: LINE = ( DBENDEND, BENDQ, HBEND, MPBSYNC, BENDQ, DBENDEND )
C11:      LINE = ( MC11, QUADC11, PACKC11, SLPDIPOLE, DSYNCLIGHT, &
           SLPBHDIPOLE, 2*DIPOLE )
QUADC12:  LINE = ( DBPMIN, VBPMC12, DBPMOUT, HQUAD3D, DQOUT )
PACKC12:  LINE = ( DPACKIN, DHQUADC, TSX, TQX, VDC12, TS3, DHQUADC, &
           DPACKU2D, DPACKOUT )
C12:      LINE = ( MC12, QUADC12, PACKC12, 4*DIPOLE )
QUADC13:  LINE = ( DBPMIN, HBPMC13, DBPMOUT, HQUADF, DQOUT )
PACKC13:  LINE = ( DPACKIN, TQFA4, TSF, HDC13, DPACKU2D, TSQ, DPACKOUT )
C13:      LINE = ( MC13, QUADC13, PACKC13, 4*DIPOLE )
QUADC14:  LINE = ( DBPMIN, VBPMC14, DBPMOUT, HQUADD, DQOUT )
PACKC14:  LINE = ( DPACKIN, TQDD1, TSD, VDC14, DPACKU2D, TS3, DPACKOUT )
C14:      LINE = ( MC14, QUADC14, PACKC14, 4*DIPOLE )
QUADC15:  LINE = ( DBPMIN, HBPMC15, DBPMOUT, HQUADF, DQOUT )
PACKC15:  LINE = ( DPIN5LOC, TQFA4, TSF, HDC15, DPOUT5LOC )
C15:      LINE = ( MC15, QUADC15, PACKC15, FEEDCAN, 4*DIPOLE )
QUADC16:  LINE = ( DBPMIN, VBPMC16, DBPMOUT, HQUADD, DQOUT )
PACKC16:  LINE = ( DPACKIN, TQDD1, TSD, VDC16, DPACKU2D, TS3, DPACKOUT )
C16:      LINE = ( MC16, QUADC16, PACKC16, 4*DIPOLE )
QUADC17:  LINE = ( DBPMIN, HBPMC17, DBPMOUT, HQUADF, DQOUT )
PACKC17:  LINE = ( DPACKIN, TQFA4, TSF, HDC17, DPACKU2D, TOD39S, TSQ, &
           DPACKOUT )
ESEPC17:  LINE = ( DSEPEND1, C17VESEP, DSEPB, C17VESEP, DSEPB, C17VESEP, &
           DSEPB, C17VESEP, DSEPEND1 )
C17:      LINE = ( MC17, QUADC17, PACKC17, COLDBYP1, ESEPC17, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
QUADC18:  LINE = ( DBPMIN, VBPMC18, DBPMOUT, HQUADD, DQOUT )
PACKC18:  LINE = ( DPACKIN, TQDD1, TSD, VDC18, DPACKU2D, TS3, DPACKOUT )
C18:      LINE = ( MC18, QUADC18, PACKC18, 4*DIPOLE )
QUADC19:  LINE = ( DBPMIN, HBPMC19, DBPMOUT, HQUADF, DQOUT )
PACKC19:  LINE = ( DPACKIN, TQFA4, TSF, HDC19, DPACKU2D, TOF39S, CS4C2AP, &
           TQD39S, DPACKOUT )
C19:      LINE = ( MC19, QUADC19, PACKC19, 4*DIPOLE )
CTEN:     LINE = ( C11, C12, C13, C14, C15, C16, C17, C18, C19 )
QUADC21:  LINE = ( DBPMIN, VBPMC21, DBPMOUT, HQUADD, DQOUT )
PACKC21:  LINE = ( DPIN5LOC, TQDD1, TSD, VDC21, DPOUT5LOC )
C21:      LINE = ( MC21, QUADC21, PACKC21, TABGVTAB, 4*DIPOLE )
QUADC22:  LINE = ( DBPMIN, HBPMC22, DBPMOUT, HQUADF, DQOUT )
PACKC22:  LINE = ( DPACKIN, TQFA4, TSF, HDC22, DPACKU2D, CS4C2BP, TSQ, &
                   TOD39C, DPACKOUT )
C22:      LINE = ( MC22, QUADC22, PACKC22, 4*DIPOLE )
QUADC23:  LINE = ( DBPMIN, VBPMC23, DBPMOUT, HQUADD, DQOUT )
PACKC23:  LINE = ( DPACKIN, TQDD1, TSD, VDC23, DPACKU2D, TOZD, TS4, TQ2, &
           DPACKOUT )
C23:      LINE = ( MC23, QUADC23, PACKC23, 4*DIPOLE )
QUADC24:  LINE = ( DBPMIN, HBPMC24, DBPMOUT, HQUADF, DQOUT )
PACKC24:  LINE = ( DPACKIN, TQFA4, TSF, HDC24, DPACKU2D, CS1C2AP, &
                   TOF39C, TQD39C, DPACKOUT )
C24:      LINE = ( MC24, QUADC24, PACKC24, 4*DIPOLE )
QUADC25:  LINE = ( DBPMIN, VBPMC25, DBPMOUT, HQUADD, DQOUT )
PACKC25:  LINE = ( DPIN5LOC, TQDD1, TSD, VDC25, DPOUT5LOC )
C25:      LINE = ( MC25, QUADC25, PACKC25, FEEDCAN, 4*DIPOLE )
QUADC26:  LINE = ( DBPMIN, HBPMC26, DBPMOUT, HQUADF, DQOUT )
PACKC26:  LINE = ( DPACKIN, TQFA4, TSF, HDC26, DPACKU2D, TOF39S, CS4C2AM, &
                   TSQ, DPACKOUT )
C26:      LINE = ( MC26, QUADC26, PACKC26, 4*DIPOLE )
QUADC27:  LINE = ( DBPMIN, VBPMC27, DBPMOUT, HQUADD, DQOUT )
PACKC27:  LINE = ( DPACKIN, TQDD1, TSD, VDC27, DPACKU2D, TOZD, CS2C3AP, &
                   TQ4, DPACKOUT )
C27:      LINE = ( MC27, QUADC27, PACKC27, 4*DIPOLE )
QUADC28:  LINE = ( DBPMIN, HBPMC28, DBPMOUT, HQUADF, DQOUT )
PACKC28:  LINE = ( DPACKIN, TQFA4, TSF, HDC28, DPACKU2D, TOD39S, CS4C2BM, &
           TQF39S, DPACKOUT )
C28:      LINE = ( MC28, QUADC28, PACKC28, 4*DIPOLE )
QUADC29:  LINE = ( DBPMIN, VBPMC29, DBPMOUT, HQUADD, DQOUT )
PACKC29:  LINE = ( DPIN5LOC, TQDD1, TSD, VDC29, DPOUT5LOC )
C29:      LINE = ( MC29, QUADC29, PACKC29, TABGVTAB, 4*DIPOLE )
CTWENTY:  LINE = ( C21, C22, C23, C24, C25, C26, C27, C28, C29 )
QUADC32:  LINE = ( DBPMIN, HBPMC32, DBPMOUT, HQUADF, DQOUT )
PACKC32:  LINE = ( DPACKIN, TQFA4, TSF, HDC32, DPACKU2D, CS1C2AM, TSQ, &
                   TOF39C, DPACKOUT )
C32:      LINE = ( MC32, QUADC32, PACKC32, 4*DIPOLE )
QUADC33:  LINE = ( DBPMIN, VBPMC33, DBPMOUT, HQUADD, DQOUT )
PACKC33:  LINE = ( DPACKIN, TQDD1, TSD, VDC33, DPACKU2D, TOZD, CS2C3AM, TQ2, &
           DPACKOUT )
C33:      LINE = ( MC33, QUADC33, PACKC33, 4*DIPOLE )
QUADC34:  LINE = ( DBPMIN, HBPMC34, DBPMOUT, HQUADF, DQOUT )
PACKC34:  LINE = ( DPACKIN, TQFA4, TSF, HDC34, DPACKU2D,TS1,TOD39C,TQF39C, &
           DPACKOUT )
C34:      LINE = ( MC34, QUADC34, PACKC34, 4*DIPOLE )
QUADC35:  LINE = ( DBPMIN, VBPMC35, DBPMOUT, HQUADD, DQOUT )
PACKC35:  LINE = ( DPIN5LOC, TQDD1, TSD, VDC35, DPOUT5LOC )
C35:      LINE = ( MC35, QUADC35, PACKC35, FEEDCAN, 4*DIPOLE )
QUADC36:  LINE = ( DBPMIN, HBPMC36, DBPMOUT, HQUADF, DQOUT )
PACKC36:  LINE = ( DPACKIN, TQFA4, TSF, HDC36, DPACKU2D, TOZF, TS1, TSQ, &
           DPACKOUT )
C36:      LINE = ( MC36, QUADC36, PACKC36, 4*DIPOLE )
QUADC37:  LINE = ( DBPMIN, VBPMC37, DBPMOUT, HQUADD, DQOUT )
PACKC37:  LINE = ( DPACKIN, TQDD1, TSD, VDC37, DPACKU2D, TOZD, TS4, TQ4, &
           DPACKOUT )
C37:      LINE = ( MC37, QUADC37, PACKC37, 4*DIPOLE )
QUADC38:  LINE = ( DBPMIN, HBPMC38, DBPMOUT, HQUADF, DQOUT )
PACKC38:  LINE = ( DPACKIN, TQFA4, TSF, HDC38, DPACKU2D, TS1, DPACKOUT )
C38:      LINE = ( MC38, QUADC38, PACKC38, 4*DIPOLE )
QUADC39:  LINE = ( DBPMIN, VBPMC39, DBPMOUT, HQUADD, DQOUT )
PACKC39:  LINE = ( DPIN5LOC, TQDD1, TSD, VDC39, DPOUT5LOC )
C39:      LINE = ( MC39, QUADC39, PACKC39, TABGVTAB, 4*DIPOLE )
CTHIRTY:  LINE = ( C32, C33, C34, C35, C36, C37, C38, C39 )
QUADC42:  LINE = ( DBPMIN, HBPMC42, DBPMOUT, HQUADF, DQOUT )
PACKC42:  LINE = ( DPACKIN, TQFA4, TSF, HDC42, DPACKU2D, TOZF, TSQ, DPACKOUT )
PACKC42R2:LINE = ( DPACKIN, TQC42, TSF, HDC42, DPACKU2D, TOZF, TSQ, DPACKOUT )
C42:      LINE = ( MC42, QUADC42, PACKC42,   4*DIPOLE )
C42R2:    LINE = ( MC42, QUADC42, PACKC42R2, 4*DIPOLE )
QUADC43:  LINE = ( DBPMIN, VBPMC43, DBPMOUT, HQUADD, DQOUT )
PACKC43:  LINE = ( DPACKIN2, CCQ0, DPACKU2D2,    TSD, VDC43, DPACKOUT2 )
PACKC43FT:LINE = ( DPACKIN2, CCQ0, DTQIN, TQDD1, TSD, VDC43, DTQOUT )
C43:      LINE = ( MC43, QUADC43, PACKC43,   4*DIPOLE )
C43FT:    LINE = ( MC43, QUADC43, PACKC43FT, 4*DIPOLE )
QUADC44:  LINE = ( DBPMIN, HBPMC44, DBPMOUT, HQUADF, DQOUT )
PACKC44:  LINE = ( DPACKIN2, CCQ9, DPACKU2D2,    TSF, HDC44, DPACKOUT2 )
PACKC44FT:LINE = ( DPACKIN2, CCQ9, DTQIN, TQFA4, TSF, HDC44, DTQOUT )
C44:      LINE = ( MC44, QUADC44, PACKC44,   4*DIPOLE )
C44FT:    LINE = ( MC44, QUADC44, PACKC44FT, 4*DIPOLE )
QUADC45:  LINE = ( DBPMIN, VBPMC45, DBPMOUT, HQUADD, DQOUT )
PACKC45:  LINE = ( DPIN5LOC, TQC45, TSD, VDC45, DPOUT5LOC )
PACKC45FT:LINE = ( DPIN5LOC, TQDD1, TSD, VDC45, DPOUT5LOC )
C45:      LINE = ( MC45, QUADC45, PACKC45,   FEEDCAN, 4*DIPOLE )
C45FT:    LINE = ( MC45, QUADC45, PACKC45FT, FEEDCAN, 4*DIPOLE )
QUADC46:  LINE = ( DBPMIN, HBPMC46, DBPMOUT, HQUADF, DQOUT )
PACKC46:  LINE = ( DPACKIN2, CCQ7, DPACKU2D2,    TSF,     HDC46, DPACKOUT2 )
PACKC46R2:LINE = ( DPACKIN2, CCQ7, DPACKU2D2,    CS6C4AM, HDC46, DPACKOUT2 )
PACKC46FT:LINE = ( DPACKIN2, CCQ7, DTQIN, TQFA4, TSF,     HDC46, DTQOUT )
C46:      LINE = ( MC46, QUADC46, PACKC46,   4*DIPOLE )
C46FT:    LINE = ( MC46, QUADC46, PACKC46FT, 4*DIPOLE )
C46R2:    LINE = ( MC46, QUADC46, PACKC46R2, 4*DIPOLE )
QUADC47:  LINE = ( DBPMIN, VBPMC47, DBPMOUT, HQUADD, DQOUT )
PACKC47:  LINE = ( DPACKIN3, CD0Q6D, DPACKU2D3, CD0QT6D, TSD, VDC47, CD0QT6D, &
           DPACKOUT3 )
PACKC47FT:LINE = ( DPACKIN3, CD0Q6D, DPACKU2D3, TQDD1,   TSD, VDC47, &
           DPACKOUT3 )
C47:      LINE = ( MC47, QUADC47, PACKC47,   4*DIPOLE )
C47FT:    LINE = ( MC47, QUADC47, PACKC47FT, 4*DIPOLE )
QUADC48:  LINE = ( DLB6, CD0Q5D, DLB5 )
! The first spool, PACKC48A, has the power leads for Q5. 
! The second spool, PACKC48B, is the only one with a quad or a sextupole, 
!    however, neither of these is used. The horz steering is used, 
!    but I think this spool could be removed. 
PACKC48A: LINE = ( DLB4, VDC48, HDC48C, DLB3, HBPMC48, DLB2, VBPMC48, DLB1 )
PACKC48B: LINE = ( DPIN5LOC, DHQUADC, HDC48, TSX, TQX, DHQUADC, DPOUT5LOC )

! new for FPD
! ===========================================
! insert dipole pots in C48 straight section.
! ===========================================
! Add pots on both ends of straight C48 and shorten drift space
! DFPDSPC3 = DSTRAIGHT4 - 2*(length of pot) = 2.805074 - 2 * ( 0.54991 )  
DFPDSPC3: DRIFT, L = 1.705254

STRAIGHTC48:  LINE = ( DSTRAIGHT4 )
STRAIGHTC48FT:LINE = ( D0QXR, DQXR1, D0QXR, DQXRFILL )
STRAIGHTC48R2:LINE = ( FPDPOTD2, DFPDSPC3, FPDPOTD1 )


! What is marked here as PACKC48C is actually a barrier box and NOT
!   a spool. It has Main Bus Power Leads. These are the transition to the
!   warm bus that goes across D0. 
PACKC48C: LINE = ( DBPMIN1, DBPMOUT1, DHQUADC, DHQUADC, DPACKOUT1 )
C48:      LINE = ( MC48, QUADC48, PACKC48A, PACKC48B, COLDBYP2, &
           STRAIGHTC48,   COLDBYP1, PACKC48C, 3*DIPOLE )
C48FT:    LINE = ( MC48, QUADC48, PACKC48A, PACKC48B, COLDBYP2, &
           STRAIGHTC48FT, COLDBYP1, PACKC48C, 3*DIPOLE )
C48R2:    LINE = ( MC48, QUADC48, PACKC48A, PACKC48B, COLDBYP2, &
           STRAIGHTC48R2, COLDBYP1, PACKC48C, 3*DIPOLE )
QUADC49:  LINE = ( DLB6, CD0Q1D, DLB5 )
QUADC49FT:LINE = ( DBPMIN, HBPMC49, DBPMOUT, HQUAD2D, DQOUT1 )

PACKC49:  LINE = ( DLB4, HDC49, VDC49, TSQD0, DLB3, HBPMC49, DLB2, VBPMC49, &
           DLB1 )
PACKC49R2:LINE = ( DLB1S, VBPMC49, DLB2S, HDC49, VDC49, TSQD0, DLB3S)
C49:      LINE = ( MC49, QUADC49,            PACKC49 )
C49R2:    LINE = ( MC49,                     PACKC49R2 )
C49FT:    LINE = ( MC49, QUADC49FT, DBYPC49, PACKC49R2 )
CFORTY:   LINE = ( C42,   C43,   C44,   C45,   C46,   C47,   C48,   C49 )
CFORTYR2: LINE = ( C42R2, C43,   C44,   C45,   C46R2, C47,   C48R2, C49R2 )
CFORTYFT: LINE = ( C42,   C43FT, C44FT, C45FT, C46FT, C47FT, C48FT, C49FT )
ESEPD0U:  LINE = ( DSEPEND, C49HESEP, DSEPB, C49VESEP, DSEPB, C49VESEP, &
           DSEPEND )
TRIPLETD0U: LINE = ( DTRIPOUT, CD0Q2F, DTRIPB, CD0Q3D, DTRIPB, &
           CD0Q4F, DTRIPIN, HBPMD0U, DV2H, VBPMD0U )
!
! Next group of elements are for fixed target.
QUADD0U:  LINE = ( DQUAD1END, HQUAD1F, DQUAD1END )
DOGLEGM:  LINE = ( DDOGEND, DOGMBEND, DDOGEND )
DOGLEGP:  LINE = ( DDOGEND, DOGPBEND, DDOGEND )
D0SEPTA:  LINE = ( MSEPTAU, DHALFSEPTA, MD0EXTSEPTA, DHALFSEPTA, DHSEPTASEP, &
                DHSEPTASEP, DHALFSEPTA, MD0EXTSEPTA, DHALFSEPTA, MSEPTAD )
D0BUMP1:  LINE = ( D0BUMPEND, D0BUMPK1, D0BUMPEND )
D0BUMP2:  LINE = ( D0BUMPEND, D0BUMPK2, D0BUMPEND )

D0UP:     LINE = ( MD0U, COLDBYP2, ESEPD0U, &
                  COLDBYP1, FEEDCAN, TRIPLETD0U, DD0C, DD0B, DD0A )
D0UPR2:   LINE = ( MD0U, COLDBYP2, DVACVLV, HBPMC49, DFPDSPC4, &
                  FPDPOTA2, ESEPD0U, FPDPOTA1, DVACVLV, &
                  COLDBYP1, FEEDCAN, TRIPLETD0U, DD0C, DD0B, DD0A )
D0UPFT:   LINE = ( QUADD0U, DSPC1, DOGLEGM, DSPC2, D0SEPTA, DSPC3, & 
                   DOGLEGP, DSPC4, D0BUMP1, DSPC5, DFUDGE1 )
! The DOGLEGM and DOGLEGP in D0UPFT are separated by 
!   DSPC2, D0SEPTA, and DSPC3, for a total distance of 10.439400 m.
!                ppb    1/22/99
SEXTANTC:  LINE = ( C0DOWN, CTEN, CTWENTY, CTHIRTY, CFORTY,   D0UP )
SEXTANTCR2:LINE = ( C0DOWN, CTEN, CTWENTY, CTHIRTY, CFORTYR2, D0UPR2 )
SEXTANTCFT:LINE = ( C0DOWN, CTEN, CTWENTY, CTHIRTY, CFORTYFT, D0UPFT )


D0COLL:   LINE = ( D0COLLEND, MD0COLL, D0COLLEND )
QUADD0D:  LINE = ( DQUAD1END, HQUAD1D, DQUAD1END )
QUADD11FT:LINE = (  DBPMIN, HBPMD11, DBPMOUT, HQUAD2F, DQOUT1)
TRIPLETD0D: LINE = ( VBPMD0D, DV2H, HBPMD0D, DTRIPIN, CD0Q4D, DTRIPB, &
           CD0Q3F, DTRIPB, CD0Q2D, DTRIPOUT )
ESEPD0D:  LINE = ( DSEPEND, D11HESEP, DSEPB, D11HESEP, DSEPB, D11VESEP, &
           DSEPEND )
D0DOWN:   LINE = ( MD0, DD0A, DD0B, DD0C, TRIPLETD0D, FEEDCAN, COLDBYP1, &
           ESEPD0D, COLDBYP2 )
D0DOWNR2: LINE = ( MD0, DD0A, DD0B, DD0C, TRIPLETD0D, FEEDCAN, COLDBYP1, &
                   DVACVLV, FPDPOTP1, ESEPD0D, FPDPOTP2, &
                   DFPDSPC4, HBPMD11, DVACVLV, COLDBYP2 )
D0DOWNFT: LINE = ( MD0, DSPC6, DOGLEGP, MD0TARGET, DBUK1, D0BUK, &
                   D0COLL, DSPC8, DOGLEGM, DSPC9, D0BUMP2, DSPC10, &
                   DFUDGE2, QUADD0D, DBYPD11 )

! The DOGLEGM and DOGLEGP in D0DOWNFT are separated by 
!   MD0TARGET, DBUK1, D0BUK, D0COLL, and DSPC8, for a total 
!   distance of 10.480650 m. 
!   This is 4.125 cm more than the separation for the DOGLEGM and 
!   DOGLEGP in D0UPFT. As a result, the dogleg formed by all 4 elements
!   doesn't quite close. Ideally we should use the D0BUMP1 and D0BUMP2
!   to close it, but I've never bothered. 
!                ppb    1/22/99

PACKD11:  LINE = ( DLB1, VBPMD11, DLB2, HBPMD11, DLB3, HDD11, VDD11, TSQD0, &
           DLB4 )
PACKD11R2:LINE = ( DLB3S, HDD11, VDD11, TSQD0, DLB2S, VBPMD11, DLB1S )
QUADD11:  LINE = ( DLB5, CD0Q1F, DLB6 )
! What is marked here as SPOOLD11 is actually a barrier box and NOT
!   a spool. It has Main Bus Power Leads. These are the transition to the
!   warm bus that goes across D0. 
SPOOLD11: LINE = ( DLB7 )
D11:      LINE = ( MD11, PACKD11,   QUADD11,   SPOOLD11, 4*DIPOLE )
D11R2:    LINE = (       PACKD11R2,            SPOOLD11, 4*DIPOLE )
D11FT:    LINE = (       PACKD11R2, QUADD11FT, DBARRIER, 4*DIPOLE )
! I've deliberately left MD11 out of D11FT, because it would be in a 
!  different location than the MD11 in collider mode. 
QUADD12:  LINE = ( DLB6, CD0Q5F, DLB5 )
PACKD12:  LINE = ( DLB4, VDD12, HDD12, DLB3, HBPMD12, DLB2, VBPMD12, DLB1 )
D12:      LINE = ( MD12, QUADD12, PACKD12, 4*DIPOLE )
QUADD13:  LINE = ( DBPMIN, HBPMD13, DBPMOUT, HQUADF, DQOUT )
PACKD13:  LINE = ( DPACKIN3, CD0Q6F, DPACKU2D3, CD0QT6F, TSF, HDD13,CD0QT6F,&
           DPACKOUT3 )
PACKD13FT:LINE = ( DPACKIN3, CD0Q6F, DPACKU2D3, TQFA4,   TSF, HDD13, &
           DPACKOUT3 )
D13:      LINE = ( MD13, QUADD13, PACKD13,   4*DIPOLE )
D13FT:    LINE = ( MD13, QUADD13, PACKD13FT, 4*DIPOLE )
QUADD14:  LINE = ( DBPMIN, VBPMD14, DBPMOUT, HQUADD, DQOUT )
PACKD14:  LINE = ( DPACKIN2, CDQ7, DPACKU2D2,    TSD,     VDD14, DPACKOUT2 )
PACKD14R2:LINE = ( DPACKIN2, CDQ7, DPACKU2D2,    CS7D1AP, VDD14, DPACKOUT2 )
PACKD14FT:LINE = ( DPACKIN2, CDQ7, DTQIN, TQDD1, TSD,     VDD14, DTQOUT )
D14:      LINE = ( MD14, QUADD14, PACKD14,   4*DIPOLE )
D14FT:    LINE = ( MD14, QUADD14, PACKD14FT, 4*DIPOLE )
D14R2:    LINE = ( MD14, QUADD14, PACKD14R2, 4*DIPOLE )
QUADD15:  LINE = ( DBPMIN, HBPMD15, DBPMOUT, HQUADF, DQOUT )
PACKD15:  LINE = ( DPIN5LOC, TQD15, TSF, HDD15, DPOUT5LOC )
PACKD15FT:LINE = ( DPIN5LOC, TQFA4, TSF, HDD15, DPOUT5LOC )
D15:      LINE = ( MD15, QUADD15, PACKD15,   FEEDCAN, 4*DIPOLE )
D15FT:    LINE = ( MD15, QUADD15, PACKD15FT, FEEDCAN, 4*DIPOLE )
QUADD16:  LINE = ( DBPMIN, VBPMD16, DBPMOUT, HQUADD, DQOUT )
PACKD16:  LINE = ( DPACKIN2, CDQ9, DPACKU2D2,    TSD, VDD16, DPACKOUT2 )
PACKD16FT:LINE = ( DPACKIN2, CDQ9, DTQIN, TQDD1, TSD, VDD16, DTQOUT )
D16:      LINE = ( MD16, QUADD16, PACKD16,   4*DIPOLE )
D16FT:    LINE = ( MD16, QUADD16, PACKD16FT, 4*DIPOLE )
QUADD17:  LINE = ( DBPMIN, HBPMD17, DBPMOUT, HQUADF, DQOUT )
PACKD17:  LINE = ( DPACKIN2, CDQ0, DPACKU2D2,    TSF, HDD17, DPACKOUT2 )
PACKD17FT:LINE = ( DPACKIN2, CDQ0, DTQIN, TQFA4, TSF, HDD17, DTQOUT )

! This scraping insert has been modified for Run II. 
!     ppb   12/22/98
D17COLL1:  LINE = ( DR2TARGSE, D171HCL, D171VCL, MD171HCL, MD171VCL, &
                    DR2TARGLE )
D17COLL2:  LINE = ( DR2COLLEND, MD172UHCL, MD172UVCL, DR2COLL2, D172HCL, & 
                    D172VCL, DR2COLL2, MD172DHCL, MD172DVCL, DR2COLLEND )
D17COLL3:  LINE = ( DR2COLLEND, MD173UHCL, MD173UVCL, DR2COLL2, D173HCL, &
                    D173VCL, DR2COLL2, MD173DHCL, MD173DVCL, DR2COLLEND )
D17WSTRR2:LINE=( D6IN, DGV, DD17SP1, DBELL7, D17COLL1, DBELL7, DD17SP2, &
                  DBELL7, D17COLL2, DBELL7, D17COLL3, DBELL7, DD17SP3, DGV )

D17:      LINE = ( MD17, QUADD17, PACKD17,   D17EXTIN, D17SCRAPER, &
           D17EXTOUT, 2*DIPOLE, MEDSTR )
D17FT:    LINE = ( MD17, QUADD17, PACKD17FT, D17EXTIN, D17SCRAPER, &
           D17EXTOUT, 2*DIPOLE, MEDSTR )
D17R2:    LINE = ( MD17, QUADD17, PACKD17, COLDBYP1, D17WSTRR2, &
           COLDBYP2, 2*DIPOLE, MEDSTR )
QUADD18:  LINE = ( DBPMIN, VBPMD18, DBPMOUT, HQUADD, DQOUT )
PACKD18:  LINE = ( DPACKIN, TQDD1, TSD, VDD18, DPACKU2D, TX3, DPACKOUT )
D18:      LINE = ( MD18, QUADD18, PACKD18, 4*DIPOLE )
QUADD19:  LINE = ( DBPMIN, HBPMD19, DBPMOUT, HQUADF, DQOUT )
PACKD19:  LINE = ( DPACKIN, TQFA4, TSF, HDD19, DPACKU2D, CS3D2AM, TR1, &
           DPACKOUT )
D19:      LINE = ( MD19, QUADD19, PACKD19, 4*DIPOLE )
DTEN:     LINE = ( D11,   D12, D13,   D14,   D15,   D16,   D17,   D18, D19 )
DTENR2:   LINE = ( D11R2, D12, D13,   D14R2, D15,   D16,   D17R2, D18, D19 )
DTENFT:   LINE = ( D11FT, D12, D13FT, D14FT, D15FT, D16FT, D17FT, D18, D19 )
QUADD21:  LINE = ( DBPMIN, VBPMD21, DBPMOUT, HQUADD, DQOUT )
PACKD21:  LINE = ( DPIN5LOC, TQDD1, TSD, VDD21, DPOUT5LOC )
D21:      LINE = ( MD21, QUADD21, PACKD21, TABGVTAB, 4*DIPOLE )
QUADD22:  LINE = ( DBPMIN, HBPMD22, DBPMOUT, HQUADF, DQOUT )
PACKD22:  LINE = ( DPACKIN, TQFA4, TSF, HDD22, DPACKU2D, TX2, TSQ, DPACKOUT )
D22:      LINE = ( MD22, QUADD22, PACKD22, 4*DIPOLE )
QUADD23:  LINE = ( DBPMIN, VBPMD23, DBPMOUT, HQUADD, DQOUT )
PACKD23:  LINE = ( DPACKIN, TQDD1, TSD, VDD23, DPACKU2D, TOZD, CS2D2AM, &
           DPACKOUT )
D23:      LINE = ( MD23, QUADD23, PACKD23, 4*DIPOLE )
QUADD24:  LINE = ( DBPMIN, HBPMD24, DBPMOUT, HQUADF, DQOUT )
PACKD24:  LINE = ( DPACKIN, TQFA4, TSF, HDD24, DPACKU2D, TX2, TR2, DPACKOUT )
D24:      LINE = ( MD24, QUADD24, PACKD24, 4*DIPOLE )
QUADD25:  LINE = ( DBPMIN, VBPMD25, DBPMOUT, HQUADD, DQOUT )
PACKD25:  LINE = ( DPIN5LOC, TQDD1, TSD, VDD25, DPOUT5LOC )
D25:      LINE = ( MD25, QUADD25, PACKD25, FEEDCAN, 4*DIPOLE )
QUADD26:  LINE = ( DBPMIN, HBPMD26, DBPMOUT, HQUADF, DQOUT )
PACKD26:  LINE = ( DPACKIN, TQFA4, TSF, HDD26, DPACKU2D, CS3D2AP, &
                   TSQ, DPACKOUT)
D26:      LINE = ( MD26, QUADD26, PACKD26, 4*DIPOLE )
QUADD27:  LINE = ( DBPMIN, VBPMD27, DBPMOUT, HQUADD, DQOUT )
PACKD27:  LINE = ( DPACKIN, TQDD1, TSD, VDD27, DPACKU2D, TOZD, CS2D2AP, &
           DPACKOUT )
D27:      LINE = ( MD27, QUADD27, PACKD27, 4*DIPOLE )
QUADD28:  LINE = ( DBPMIN, HBPMD28, DBPMOUT, HQUADF, DQOUT )
PACKD28:  LINE = ( DPACKIN, TQFA4, TSF, HDD28, DPACKU2D, TX2, TR1, DPACKOUT )
D28:      LINE = ( MD28, QUADD28, PACKD28, 4*DIPOLE )
QUADD29:  LINE = ( DBPMIN, VBPMD29, DBPMOUT, HQUADD, DQOUT )
PACKD29:  LINE = ( DPIN5LOC, TQDD1, TSD, VDD29, DPOUT5LOC )
D29:      LINE = ( MD29, QUADD29, PACKD29, TABGVTAB, 4*DIPOLE )
DTWENTY:  LINE = ( D21, D22, D23, D24, D25, D26, D27, D28, D29 )
QUADD32:  LINE = ( DBPMIN, HBPMD32, DBPMOUT, HQUADF, DQOUT )
PACKD32:  LINE = ( DPACKIN, TQFA4, TSF, HDD32, DPACKU2D, TX1, TSQ, DPACKOUT )
D32:      LINE = ( MD32, QUADD32, PACKD32, 4*DIPOLE )
QUADD33:  LINE = ( DBPMIN, VBPMD33, DBPMOUT, HQUADD, DQOUT )
PACKD33:  LINE = ( DPACKIN, TQDD1, TSD, VDD33, DPACKU2D, TOZD, CS5D3AM, &
           DPACKOUT )
D33:      LINE = ( MD33, QUADD33, PACKD33, 4*DIPOLE )
QUADD34:  LINE = ( DBPMIN, HBPMD34, DBPMOUT, HQUADF, DQOUT )
PACKD34:  LINE = ( DPACKIN, TQFA4, TSF, HDD34, DPACKU2D, TX1, TR2, DPACKOUT )
D34:      LINE = ( MD34, QUADD34, PACKD34, 4*DIPOLE )
QUADD35:  LINE = ( DBPMIN, VBPMD35, DBPMOUT, HQUADD, DQOUT )
PACKD35:  LINE = ( DPIN5LOC, TQDD1, TSD, VDD35, DPOUT5LOC )
D35:      LINE = ( MD35, QUADD35, PACKD35, FEEDCAN, 4*DIPOLE )
QUADD36:  LINE = ( DBPMIN, HBPMD36, DBPMOUT, HQUADF, DQOUT )
PACKD36:  LINE = ( DPACKIN, TQFA4, TSF, HDD36, DPACKU2D, TX1, TSQ, TOZF, &
           DPACKOUT )
D36:      LINE = ( MD36, QUADD36, PACKD36, 4*DIPOLE )
QUADD37:  LINE = ( DBPMIN, VBPMD37, DBPMOUT, HQUADD, DQOUT )
PACKD37:  LINE = ( DPACKIN, TQDD1, TSD, VDD37, DPACKU2D, TOZD, CS5D3AP, &
           DPACKOUT )
D37:      LINE = ( MD37, QUADD37, PACKD37, 4*DIPOLE )
QUADD38:  LINE = ( DBPMIN, HBPMD38, DBPMOUT, HQUADF, DQOUT )
PACKD38:  LINE = ( DPACKIN, TQFA4, TSF, HDD38, DPACKU2D, CS3D4AP, DPACKOUT )
D38:      LINE = ( MD38, QUADD38, PACKD38, 4*DIPOLE )
QUADD39:  LINE = ( DBPMIN, VBPMD39, DBPMOUT, HQUADD, DQOUT )
PACKD39:  LINE = ( DPIN5LOC, TQDD1, TSD, VDD39, DPOUT5LOC )
D39:      LINE = ( MD39, QUADD39, PACKD39, TABGVTAB, 4*DIPOLE )
DTHIRTY:  LINE = ( D32, D33, D34, D35, D36, D37, D38, D39 )
QUADD42:  LINE = ( DBPMIN, HBPMD42, DBPMOUT, HQUADF, DQOUT )
PACKD42:  LINE = ( DPACKIN, TQFA4, TSF, HDD42, DPACKU2D, TOZF, TSQ, DPACKOUT )
D42:      LINE = ( MD42, QUADD42, PACKD42, 4*DIPOLE )
QUADD43:  LINE = ( DBPMIN, VBPMD43, DBPMOUT, HQUADD, DQOUT )
PACKD43:  LINE = ( DPACKIN, TQDD1, TSD, VDD43, DPACKU2D, TX4, DPACKOUT )
D43:      LINE = ( MD43, QUADD43, PACKD43, 4*DIPOLE )
QUADD44:  LINE = ( DBPMIN, HBPMD44, DBPMOUT, HQUADF, DQOUT )
PACKD44:  LINE = ( DPACKIN, TQFA4, TSF, HDD44, DPACKU2D, DPACKOUT )
D44:      LINE = ( MD44, QUADD44, PACKD44, 4*DIPOLE )
QUADD45:  LINE = ( DBPMIN, VBPMD45, DBPMOUT, HQUADD, DQOUT )
PACKD45:  LINE = ( DPIN5LOC, TQDD1, TSD, VDD45, DPOUT5LOC )
D45:      LINE = ( MD45, QUADD45, PACKD45, FEEDCAN, 4*DIPOLE )
QUADD46:  LINE = ( DBPMIN, HBPMD46, DBPMOUT, HQUADF, DQOUT )
PACKD46:  LINE = ( DPACKIN, TQFA4, TSF, HDD46, DPACKU2D, CS3D4AM, &
                   TSQ, DPACKOUT)
D46:      LINE = ( MD46, QUADD46, PACKD46, 4*DIPOLE )
QUADD47:  LINE = ( DBPMIN, VBPMD47, DBPMOUT, HQUADD, DQOUT )
PACKD47:  LINE = ( DPIN5LOC, TQDD1, TSD, VDD47, DPOUT5LOC )
D47:      LINE = ( MD47, QUADD47, PACKD47, DWSTRSS, COLDBYP2, 4*DIPOLE )
QUADD48:  LINE = ( DBPMIN, HBPMD48, DBPMOUT, HQUAD3F, DQOUT )

! During the 1997-8 Shutdown, we moved the F17 Horz Separator to D48. 
!  If the separator is off, it's just a drift, so I haven't made 
!  FT or R2 versions for D48.     ppb 9/12/97
! Added the damper pick ups. Also changed PACKD48 to be a short spool (43").
!  This is what its always been and it adds 29" to the length of the warm
!  straight section. We need this space for the damper pick ups. 
!   ppb  12/17/98

PACKD48:  LINE = ( DPIN5LOC, DHQUADC, TSX, TQX, HDD48, DHQUADC, DPOUT5LOC )
ESEPD48:  LINE = ( DSEPEND48, D48HESEPR2, DSEPEND48 )
D48WSTR:  LINE = ( DGV, ESEPD48, DD48SP, DHDAMPPU, D3IN, DVDAMPPU, DGV )
! Order of the damper pickups in D48WSTR won't be known for sure until
!   they are actually installed.  12/21/98 ppb
! The dampers and the separator here are new for Run II. But since, 
!  if the separator is off, these are just drifts, I haven't made a 
!  Run II version of the D48WSTR. 12/21/98 ppb
D48:      LINE = ( MD48, QUADD48, PACKD48, COLDBYP1, D48WSTR, &
                    COLDBYP2, 3*DIPOLE )

QUADD49:  LINE = ( DBPMIN, HBPMD49, DBPMOUT, HQUAD2F, DQOUT1 )
! The target at D49 is new for Run II. Since this is still just 
!  basically a drift, I haven't made a Run II version of STRAIGHTD49. 
! The location of the target in the straight is only approximate. 
!    ppb    1/29/99
D49COLL1:  LINE = ( DR2TARGSE, D491HCL, D491VCL, MD491HCL, MD491VCL, &
                    DR2TARGLE )
STRAIGHTD49:  LINE = ( DD49SP1, D49COLL1, DD49SP2 )
PACKD49:  LINE = (DBPMIN1,VBPMD49,DBPMOUT1,DHQUADC,TSQE0,VDD49,HDD49,&
           DHQUADC, DPACKOUT1 )
D49:      LINE = ( MD49, QUADD49, COLDBYP2, STRAIGHTD49, COLDBYP1, PACKD49 )
DFORTY:   LINE = ( D42, D43, D44, D45, D46, D47, D48, D49 )
QUADE0U:  LINE = ( DQUAD1END, HQUAD1D, DQUAD1END )

! I'm changing the description of the E0 straight for Run II.  9/4/97    ppb
LAMBERTE0U: LINE = ( LAMB1UP, LAMB1DN, LAMB2UP, LAMB2DN )
LONGSTRE0U: LINE = ( LAMBERTE0U, DLONG5 )

!  I've moved E0 so that it is almost exactly 1/6 of the ring from D0.
!   This moves it by 15.2 cm upstream. 
E0COLL1:  LINE = ( DR2COLLEND, ME01UHCL, ME01UVCL, DR2COLL2, E01HCL, &
                   E01VCL, DR2COLL2, ME01DHCL, ME01DVCL, DR2COLLEND )
LSTRE0UR2:LINE = ( DE0SP1, DTAB, DE0SP2, DGV4, DE0SP3, E0DOGLEGM, &
                     DBELL7A, E0COLL1, DBELL7A, E0DOGLEGP, DE0SP4, E0DOGLEGP, &
                     DE0SP5, DDOGEND1, E0DOGMP1 )
E0UP:     LINE = ( ME0U, QUADE0U, LONGSTRE0U )
E0UPR2:   LINE = ( ME0U, QUADE0U, LSTRE0UR2 )
SEXTANTD:  LINE = ( D0DOWN,   DTEN,   DTWENTY, DTHIRTY, DFORTY, E0UP )
SEXTANTDFT:LINE = ( D0DOWNFT, DTENFT, DTWENTY, DTHIRTY, DFORTY, E0UPR2 )
SEXTANTDR2:LINE = ( D0DOWNR2, DTENR2, DTWENTY, DTHIRTY, DFORTY, E0UPR2 )

TEVE0:    LINE = ( SEXTANTE, SEXTANTF, SEXTANTA, SEXTANTB, SEXTANTC, SEXTANTD )
TEVB0:    LINE = ( SEXTANTB, SEXTANTC, SEXTANTD, SEXTANTE, SEXTANTF, SEXTANTA )

TEVE0FT:  LINE = ( SEXTANTEFT, SEXTANTFFT, SEXTANTAFT, SEXTANTBFT, &
                   SEXTANTCFT, SEXTANTDFT )
TEVB0FT:  LINE = ( SEXTANTBFT, SEXTANTCFT, SEXTANTDFT, SEXTANTEFT, & 
                   SEXTANTFFT, SEXTANTAFT )
TEVF0FT:  LINE = ( SEXTANTFFT, SEXTANTAFT ,SEXTANTBFT, SEXTANTCFT, & 
                   SEXTANTDFT, SEXTANTEFT )

TEVE0R2:  LINE = ( SEXTANTER2, SEXTANTFR2, SEXTANTAR2, SEXTANTBR2, &
                   SEXTANTCR2, SEXTANTDR2 )
TEVB0R2:  LINE = ( SEXTANTBR2, SEXTANTCR2, SEXTANTDR2, SEXTANTER2, & 
                   SEXTANTFR2, SEXTANTAR2 )
TEVF0R2:  LINE = ( SEXTANTFR2, SEXTANTAR2, SEXTANTBR2, SEXTANTCR2, &
                   SEXTANTDR2, SEXTANTER2 )

USE, TEVE0
